{"version":3,"sources":["directives/validation/validated-email/validated-email-directive.js"],"names":[],"mappings":";;;;;;;;;;AAOA,qBAAI,SAAS,CAAC,gBAAgB,EAAE,SAAS,cAAc,CAAC,gBAAgB,EAAE,iBAAiB,EAAE;AACzF,eAAO;AACH,oBAAQ,EAAE,GAAG;AACb,mBAAO,EAAE,SAAS;AAClB,gBAAI,EAAE;AACF,oBAAI,EAAE,cAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAK;AACnC,wBAAM,eAAe,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;;AAElD,wBAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,aAAa,CAAC;AAC9C,wBAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,gBAAgB,CAAC;AACnD,wBAAI,CAAC,cAAc,GAAG;AAClB,gCAAQ,EAAE,gBAAgB,CAAC,kCAAkC;AAC7D,iCAAS,EAAE,gBAAgB,CAAC,kCAAkC;qBACjE,CAAC;;AAEF,wBAAI,KAAK,CAAC,cAAc,KAAK,OAAO,EAAE;AAClC,uCAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAE9B,4BAAI,CAAC,cAAc,CAAC,KAAK,GAAG,gBAAgB,CAAC,WAAW,CAAC;qBAC5D;;AAED,qCAAiB,CAAC,oBAAoB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;;;AAG9D,yBAAK,CAAC,GAAG,CAAC,cAAc,EAAE;+BAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;qBAAA,CAAC,CAAC;;AAE7E,2BAAO,CAAC,EAAE,CAAC,MAAM,EAAE;+BAAM,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAC;qBAAA,CAAC,CAAC;iBAClE;aACJ;SACJ,CAAC;KACL,CAAC,CAAC","file":"directives/validation/validated-email/validated-email-directive.js","sourcesContent":["import ewf from 'ewf';\r\nimport '../services/validation-config';\r\nimport '../services/validation-service';\r\n\r\n/**\r\n * Validates email field\r\n */\r\newf.directive('validatedEmail', function ValidatedEmail(validationConfig, validationService) {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        link: {\r\n            post: (scope, element, attrs, ctrl) => {\r\n                const validationRules = ['required', 'formatted'];\r\n\r\n                ctrl.pattern = validationConfig.EMAIL_PATTERN;\r\n                ctrl.maxLength = validationConfig.EMAIL_MAX_LENGTH;\r\n                ctrl.errorsMessages = {\r\n                    required: validationConfig.EMAIL_ADDRESS_INAPPROPRIATE_FORMAT,\r\n                    formatted: validationConfig.EMAIL_ADDRESS_INAPPROPRIATE_FORMAT\r\n                };\r\n\r\n                if (attrs.validatedEmail === 'exist') {\r\n                    validationRules.push('exist');\r\n\r\n                    ctrl.errorsMessages.exist = validationConfig.EMAIL_EXIST;\r\n                }\r\n\r\n                validationService.applyRulesValidators(ctrl, validationRules);\r\n\r\n                // trigger validation\r\n                scope.$on('ValidateForm', () => ctrl.$setViewValue(element[0].value.trim()));\r\n\r\n                element.on('blur', () => element.addClass('ng-dirty ng-blur'));\r\n            }\r\n        }\r\n    };\r\n});\r\n"],"sourceRoot":"/source/"}