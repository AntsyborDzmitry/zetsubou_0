{"version":3,"sources":["components/address-book/contact-info/contact-info-controller.js"],"names":[],"mappings":"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","file":"components/address-book/contact-info/contact-info-controller.js","sourcesContent":["import './../../../services/ewf-crud-service';\r\nimport './contact-payment-info/contact-payment-info-controller';\r\nimport './../../../directives/ewf-input/ewf-input-directive';\r\nimport './../../../directives/ewf-form/ewf-form-directive';\r\nimport './../../../services/confirmation/confirmation-dialog-service';\r\nimport './../../../services/navigation-service';\r\nimport './../../../services/user-service';\r\nimport './../../../constants/system-settings-constants';\r\nimport angular from 'angular';\r\n\r\nContactInfoController.$inject = [\r\n    '$scope',\r\n    '$q',\r\n    '$attrs',\r\n    '$timeout',\r\n    '$window',\r\n    'navigationService',\r\n    'ewfCrudService',\r\n    'confirmationDialogService',\r\n    'nlsService',\r\n    'systemSettings',\r\n    'userService'\r\n];\r\n\r\nexport default function ContactInfoController(\r\n    $scope,\r\n    $q,\r\n    $attrs,\r\n    $timeout,\r\n    $window,\r\n    navigationService,\r\n    ewfCrudService,\r\n    confirmationDialogService,\r\n    nlsService,\r\n    systemSettings,\r\n    userService\r\n) {\r\n    const vm = this;\r\n\r\n    const titleOptions = [\r\n        {name: '', value: 'TITLE'},\r\n        {name: 'Mr', value: 'Mr'},\r\n        {name: 'Mrs', value: 'Mrs'},\r\n        {name: 'Ms', value: 'Ms'},\r\n        {name: 'Dr', value: 'Dr'}\r\n    ];\r\n\r\n    Object.assign(vm, {\r\n        profileUpdated: false,\r\n        disableSubmitButton: false,\r\n        cpfCnpjLength: 0,\r\n        emails: [],\r\n        contact: {\r\n            pickupSetting: {},\r\n            paymentSetting: {},\r\n            notificationSettings: [],\r\n            notifications: {\r\n                smsNotifications: [],\r\n                emailNotifications: []\r\n            },\r\n            shippingSetting: {},\r\n            mailingListSetting: {\r\n                selectedMailingLists: ['']\r\n            },\r\n            contactDetails: {\r\n                addressDetails: {\r\n                    residentialAddress: false\r\n                },\r\n                phoneDetails: {},\r\n                taxDetails: {\r\n                    cnpjOrCPFTaxType: ''\r\n                },\r\n                titleOptions\r\n            }\r\n        },\r\n        defaultNotificationEmail: '',\r\n\r\n        contactInfoAction,\r\n        confirmOfUnsavedData,\r\n        initEmailsArray,\r\n        convertEmailsArrayToEmailFields,\r\n        addUserEmail,\r\n        removeUserEmail,\r\n        showBottomAddEmailButton,\r\n        checkCpfCnpjLength,\r\n        isAdditionalEmailsCorrect,\r\n        countrySpecificBehaviorBr,\r\n        submitContactInfo\r\n    });\r\n\r\n    const EMPTY_EMAIL = '';\r\n    const MIN_EMAIL_NUMBER = 0;\r\n    const MAX_EMAIL_NUMBER = 4;\r\n    const emailFields = [\r\n        {name: 'email2'},\r\n        {name: 'email3'},\r\n        {name: 'email4'},\r\n        {name: 'email5'}\r\n    ];\r\n\r\n    const cnpjMaxLength = 15;\r\n    const cpfMaxLength = 11;\r\n\r\n    //TODO remove this and switch to pattern service\r\n    vm.patterns = {\r\n        emailRegExp: '^([\\\\w-]+(?:\\\\.[\\\\w-]+)*)@((?:[\\\\w-]+\\\\.)*\\\\w[\\\\w-]{0,66})\\\\.([a-z]{2,6}(?:\\\\.[a-z]{2})?)$',\r\n        numeric: '^(\\\\s*|\\\\d+)$',\r\n        alphaNumeric: '^[a-z\\\\d\\\\-_\\\\s]+$',\r\n        numericSpecialChars: '^[0-9\\\\+]*$'\r\n    };\r\n\r\n    const defaultNotificationSetting = {\r\n        destination: '',\r\n        email: '',\r\n        language: 'en',\r\n        notificationEvents: {\r\n            deliveryDelay: false,\r\n            clearedCustoms: false,\r\n            customsDelay: false,\r\n            delivered: false,\r\n            pickedUpByCourier: false\r\n        },\r\n        phoneCountryCode: null,\r\n        type: 'EMAIL'\r\n    };\r\n\r\n    const mode = navigationService.getParamFromUrl('mode');\r\n    const contactId = navigationService.getParamFromUrl('key');\r\n\r\n    const isProfileMode = !!$attrs.isProfile;\r\n    const isCopyMode = mode === 'copy';\r\n    const isModifyMode = contactId !== undefined && contactId.length > 0;\r\n\r\n    let promise;\r\n    let countries;\r\n\r\n    if (isCopyMode || isModifyMode) {\r\n        retrieveUserEmail(userService.whoAmI());\r\n        promise = ewfCrudService.getElementDetails('/api/addressbook/contact', contactId);\r\n    } else if (isProfileMode) {\r\n        promise = ewfCrudService.getElementDetails('/api/myprofile/contact', '');\r\n    } else {\r\n        addDefaultNotificationSettings(userService.whoAmI());\r\n    }\r\n\r\n    if (promise) {\r\n        promise.then(init, errorHandler);\r\n    } else {\r\n        nlsService.getTranslation('address-book.addNewContact_title')\r\n            .then((translation) => vm.contactInfoTitle = translation);\r\n    }\r\n\r\n    function retrieveUserEmail(whoAmIPromise) {\r\n        whoAmIPromise.then((data) => {\r\n            vm.defaultNotificationEmail = data.userName;\r\n        });\r\n    }\r\n\r\n    function addDefaultNotificationSettings(whoAmIPromise) {\r\n        whoAmIPromise.then((data) => {\r\n            const notificationSetting = angular.copy(defaultNotificationSetting);\r\n            notificationSetting.destination = data.userName;\r\n            notificationSetting.email = data.userName;\r\n            if (!(angular.isArray(vm.contact.notificationSettings))) {\r\n                vm.contact.notificationSettings = [];\r\n            }\r\n            vm.contact.notificationSettings.push(notificationSetting);\r\n            vm.defaultNotificationEmail = data.userName;\r\n        });\r\n    }\r\n\r\n    function contactInfoAction() {\r\n\r\n        /*hot fix for isResidentialAddress */\r\n        vm.contact.contactDetails.addressDetails.residentialAddress =\r\n            !!vm.contact.contactDetails.addressDetails.residentialAddress;\r\n\r\n        const contact = angular.copy(vm.contact);\r\n        contact.contactDetails.phoneDetails.smsEnabled = !!contact.contactDetails.phoneDetails.smsEnabled;\r\n\r\n        const notEmptyNotifications = (notification) => notification.destination !== '';\r\n        contact.notificationSettings = contact.notificationSettings.filter(notEmptyNotifications);\r\n        if (contact.notificationSettings.length === 0) {\r\n            const notificationSetting = angular.copy(defaultNotificationSetting);\r\n            notificationSetting.destination = vm.defaultNotificationEmail;\r\n            notificationSetting.email = vm.defaultNotificationEmail;\r\n\r\n            contact.notificationSettings.push(notificationSetting);\r\n        }\r\n\r\n        vm.disableSubmitButton = true;\r\n\r\n        function undisableSubmitButton() {\r\n            vm.disableSubmitButton = false;\r\n        }\r\n\r\n        splitNotificationsIntoSmsAndEmails(contact);\r\n        keepCountries();\r\n\r\n        if (isProfileMode) {\r\n            return ewfCrudService.updateElement('/api/myprofile/contact/modify', contact)\r\n                .then((data) => {\r\n                    init(data);\r\n                    vm.profileUpdated = true;\r\n\r\n                    $timeout(() => vm.profileUpdated = false, systemSettings.showInformationHintTimeout);\r\n\r\n                    return data;\r\n                }, errorHandler)\r\n                .finally(undisableSubmitButton);\r\n\r\n        } else if (isCopyMode || !isModifyMode) {\r\n            return ewfCrudService.addElement('/api/addressbook/contact/add', contact)\r\n                .then(() => navigationService.location('address-book.html'), errorHandler)\r\n                .finally(undisableSubmitButton);\r\n        }\r\n\r\n        return ewfCrudService.updateElement('/api/addressbook/contact/modify', contact)\r\n            .then(() => navigationService.location('address-book.html'), errorHandler)\r\n            .finally(undisableSubmitButton);\r\n    }\r\n\r\n    function splitNotificationsIntoSmsAndEmails(contact) {\r\n        contact.notifications = {};\r\n        contact.notifications.emailNotifications = [];\r\n        contact.notifications.smsNotifications = [];\r\n        contact.notificationSettings.map((notifications) => {\r\n            if (notifications.type === 'EMAIL') {\r\n                notifications.email = notifications.destination;\r\n                contact.notifications.emailNotifications.push(notifications);\r\n            } else {\r\n                notifications.phone = notifications.destination;\r\n                contact.notifications.smsNotifications.push(notifications);\r\n            }\r\n        });\r\n\r\n        contact.notificationSettings = [];\r\n    }\r\n\r\n    function init(response) {\r\n\r\n        initializeResponseFields(response);\r\n\r\n        if (isCopyMode) {\r\n            response.contactDetails.key = undefined;\r\n        }\r\n\r\n        response.contactDetails.titleOptions = titleOptions;\r\n        response.contactDetails.countries = countries;\r\n\r\n        angular.copy(response, vm.contact);\r\n\r\n        mergeSmsAndEmailNotifications(vm.contact);\r\n\r\n        mapContactDetailsCountryNames();\r\n\r\n        vm.contactInfoTitle = response.contactDetails.name;\r\n        $window.document.title = vm.contactInfoTitle;\r\n\r\n        initEmailsArray();\r\n    }\r\n\r\n    function keepCountries() {\r\n        countries = vm.contact.contactDetails.countries;\r\n    }\r\n\r\n    function initializeResponseFields(response) {\r\n        response.pickupSetting = response.pickupSetting || {};\r\n        response.paymentSetting = response.paymentSetting || {};\r\n        response.smsNotifications = response.smsNotifications || [];\r\n        response.emailNotifications = response.emailNotifications || [];\r\n\r\n        response.contactDetails = response.contactDetails || {};\r\n        response.contactDetails.taxDetails = response.contactDetails.taxDetails || {};\r\n\r\n        response.contactDetails.addressDetails.residentialAddress =\r\n            !!response.contactDetails.addressDetails.residentialAddress;\r\n    }\r\n\r\n    function mapContactDetailsCountryNames() {\r\n        //TODO: think about synch of this promise and one in the ewf-address-controller.js#getCountries\r\n        const contactDetails = vm.contact.contactDetails;\r\n        if (contactDetails.countries) {\r\n            contactDetails.countries.forEach((singleCountry) => {\r\n                if (contactDetails.addressDetails.countryCode === singleCountry.code2) {\r\n                    contactDetails.addressDetails.countryName = singleCountry.name;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function mergeSmsAndEmailNotifications(contact) {\r\n        contact.notificationSettings = [];\r\n\r\n        if (contact.notifications) {\r\n            if (contact.notifications.smsNotifications) {\r\n                contact.notifications.smsNotifications.map((smsNotification) => {\r\n                    smsNotification.type = 'SMS';\r\n                    smsNotification.destination = smsNotification.phone;\r\n                    contact.notificationSettings.push(smsNotification);\r\n                });\r\n            }\r\n\r\n            if (contact.notifications.emailNotifications) {\r\n                contact.notifications.emailNotifications.map((emailNotification) => {\r\n                    emailNotification.type = 'EMAIL';\r\n                    emailNotification.destination = emailNotification.email;\r\n                    emailNotification.phoneCountryCode = '';\r\n                    contact.notificationSettings.push(emailNotification);\r\n                });\r\n            }\r\n\r\n            contact.notifications = [];\r\n        }\r\n    }\r\n\r\n    function confirmOfUnsavedData() {\r\n        if (!$scope.contactDetails.$pristine) {\r\n            nlsService.getTranslation('common.confirm_leave_page_with_unsaved_data_on_this_page')\r\n                .then((translationMessage) => {\r\n                    confirmationDialogService.showConfirmationDialog(translationMessage)\r\n                        .then(() => navigationService.location('./address-book.html'));\r\n                });\r\n        } else {\r\n            navigationService.location('./address-book.html');\r\n        }\r\n    }\r\n\r\n    function isAdditionalEmailsCorrect(contactEmailsForm) {\r\n        if (vm.emails && vm.emails.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        if (contactEmailsForm.$valid && vm.emails[vm.emails.length - 1].value !== '') {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function initEmailsArray() {\r\n        vm.emails = emailFields.filter((emailField) => vm.contact.contactDetails[emailField.name])\r\n            .map((emailField) => ({value: vm.contact.contactDetails[emailField.name]}));\r\n    }\r\n\r\n    function convertEmailsArrayToEmailFields() {\r\n        emailFields.forEach((emailField, index) => {\r\n            vm.contact.contactDetails[emailField.name] = index < vm.emails.length\r\n                ? vm.emails[index].value\r\n                : EMPTY_EMAIL;\r\n        });\r\n    }\r\n\r\n    function addUserEmail() {\r\n        vm.emails.push({value: EMPTY_EMAIL});\r\n        vm.convertEmailsArrayToEmailFields();\r\n    }\r\n\r\n    function removeUserEmail(email) {\r\n        const index = vm.emails.indexOf(email);\r\n        vm.emails.splice(index, 1);\r\n\r\n        vm.convertEmailsArrayToEmailFields();   // save elements of vm.emails array to email fields\r\n    }\r\n\r\n    function showBottomAddEmailButton() {\r\n        return vm.emails.length >= MIN_EMAIL_NUMBER && vm.emails.length < MAX_EMAIL_NUMBER;\r\n    }\r\n\r\n    function errorHandler(err) {\r\n        return $q.reject(err);\r\n    }\r\n\r\n    function countrySpecificBehaviorBr() {\r\n        return vm.contact.contactDetails.addressDetails.countryCode === 'BR';\r\n    }\r\n\r\n    function checkCpfCnpjLength(taxType) {\r\n        if (taxType !== vm.contact.contactDetails.taxDetails.cnpjOrCPFTaxType) {\r\n            vm.contact.contactDetails.taxDetails.cnpjOrCPFTaxID = '';\r\n            vm.cpfCnpjLength = (taxType === 'CNPJ'\r\n                ? cnpjMaxLength\r\n                : cpfMaxLength);\r\n        }\r\n    }\r\n\r\n    function submitContactInfo(ewfFormCtrl, contactDetailsForm) {\r\n        return ewfFormCtrl.ewfValidation() && contactDetailsForm.$valid && vm.contactInfoAction();\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}