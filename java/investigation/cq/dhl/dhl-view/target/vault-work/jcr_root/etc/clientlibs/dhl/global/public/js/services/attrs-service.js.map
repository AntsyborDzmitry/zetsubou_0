{"version":3,"sources":["services/attrs-service.js"],"names":[],"mappings":";;;qBAUwB,YAAY;;;;;;AARpC,qBAAI,OAAO,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;;AAE1C,gBAAY,CAAC,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;;;;;;;AAMnB,aAAS,YAAY,CAAC,MAAM,EAAE;AACzC,YAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;;;;AAKvB,iBAAS,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,uBAAuB,EAAE,UAAU,EAAE,cAAc,EAAE;AAC/F,gBAAI,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;AACpD,gBAAI,eAAe,GAAG,eAAe,CAAC,MAAM,CAAC;;AAE7C,gBAAM,sBAAsB,GAAG,cAAc,IAAI,aAAa,CAAC;AAC/D,gBAAI,SAAS,GAAG,uBAAuB,CAAC,sBAAsB,CAAC,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;;AAE1F,gBAAI,UAAU,EAAE;AACZ,0BAAU,CAAC,SAAS,CAAC,CAAC;aACzB;;AAED,gBAAM,sBAAsB,GAAG,MAAM,CAAC,MAAM,CAAC,YAAM;AAC/C,uBAAO,eAAe,CAAC,MAAM,CAAC,CAAC;aAClC,EAAE,UAAS,SAAS,EAAE;AACnB,oBAAI,SAAS,KAAK,SAAS,EAAE;AACzB,2CAAuB,CAAC,sBAAsB,CAAC,GAAG,SAAS,GAAG,SAAS,CAAC;AACxE,wBAAI,UAAU,EAAE;AACZ,kCAAU,CAAC,SAAS,CAAC,CAAC;qBACzB;iBACJ;aACJ,CAAC,CAAC;;;AAGH,gBAAI,eAAe,EAAE;;AACjB,wBAAM,sBAAsB,GAAG,MAAM,CAAC,MAAM,CAAC,YAAM;AAC/C,+BAAO,uBAAuB,CAAC,sBAAsB,CAAC,CAAC;qBAC1D,EAAE,UAAC,SAAS,EAAK;AACd,4BAAI,SAAS,KAAK,SAAS,EAAE;AACzB,2CAAe,CAAC,MAAM,EAAE,SAAS,GAAG,SAAS,CAAC,CAAC;;AAE/C,gCAAI,UAAU,EAAE;AACZ,0CAAU,CAAC,SAAS,CAAC,CAAC;6BACzB;yBACJ;qBACJ,CAAC,CAAC;;AAEH;2BAAO,YAAM;AACT,kDAAsB,EAAE,CAAC;AACzB,kDAAsB,EAAE,CAAC;yBAC5B;sBAAC;;;;aACL;;AAED,mBAAO,sBAAsB,CAAC;SACjC;;AAED,iBAAS,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE;AACvD,gBAAI,MAAM,CAAC,aAAa,CAAC,EAAE;AACvB,oBAAI,SAAS,EAAE;AACX,wBAAI,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;AAC/B,iCAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;qBAC5C;AACD,wBAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;AAC7B,6BAAK,IAAI,GAAG,IAAI,SAAS,EAAE;AACvB,gCAAI,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AAC/B,sCAAM,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;6BAChC;yBACJ;qBACJ,MAAM;AACH,8BAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;qBACtD;iBACJ;;AAED,uBAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aAC9C;SACJ;KACJ","file":"services/attrs-service.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.service('attrsService', attrsService);\r\n\r\nattrsService.$inject = ['$parse'];\r\n\r\n/**\r\n * Attrs service. Contains helper logic related to attribute manipulation\r\n *\r\n */\r\nexport default function attrsService($parse) {\r\n    this.track = track;\r\n    this.trigger = trigger;\r\n\r\n    /**\r\n     * track - Sets up one or two-way binding depending on whether the expression is assignable\r\n     */\r\n    function track($scope, $attrs, attributeName, attributeValueContainer, onChangeFn, savePropertyAs) {\r\n        let valueGetterExpr = $parse($attrs[attributeName]);\r\n        let valueSetterExpr = valueGetterExpr.assign;\r\n\r\n        const containerAttributeName = savePropertyAs || attributeName;\r\n        let valuePrev = attributeValueContainer[containerAttributeName] = valueGetterExpr($scope);\r\n\r\n        if (onChangeFn) {\r\n            onChangeFn(valuePrev);\r\n        }\r\n\r\n        const unwatchExternalChanges = $scope.$watch(() => {\r\n            return valueGetterExpr($scope);\r\n        }, function(valueCurr) {\r\n            if (valuePrev !== valueCurr) {\r\n                attributeValueContainer[containerAttributeName] = valuePrev = valueCurr;\r\n                if (onChangeFn) {\r\n                    onChangeFn(valueCurr);\r\n                }\r\n            }\r\n        });\r\n\r\n        // If expression is assignable than initialize reverse binding\r\n        if (valueSetterExpr) {\r\n            const unwatchInternalChanges = $scope.$watch(() => {\r\n                return attributeValueContainer[containerAttributeName];\r\n            }, (valueCurr) => {\r\n                if (valuePrev !== valueCurr) {\r\n                    valueSetterExpr($scope, valuePrev = valueCurr);\r\n\r\n                    if (onChangeFn) {\r\n                        onChangeFn(valueCurr);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return () => {\r\n                unwatchExternalChanges();\r\n                unwatchInternalChanges();\r\n            };\r\n        }\r\n\r\n        return unwatchExternalChanges;\r\n    }\r\n\r\n    function trigger($scope, $attrs, attributeName, onTrigger) {\r\n        if ($attrs[attributeName]) {\r\n            if (onTrigger) {\r\n                if (angular.isFunction(onTrigger)) {\r\n                    onTrigger($scope, $attrs, attributeName);\r\n                }\r\n                if (angular.isObject(onTrigger)) {\r\n                    for (let key in onTrigger) {\r\n                        if (onTrigger.hasOwnProperty(key)) {\r\n                            $scope[key] = onTrigger[key];\r\n                        }\r\n                    }\r\n                } else {\r\n                    throw new Error('unexpected onTrigger value type');\r\n                }\r\n            }\r\n\r\n            return $scope.$eval($attrs[attributeName]);\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}