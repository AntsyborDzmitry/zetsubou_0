{"version":3,"sources":["components/packaging-settings/packaging-settings-controller.js"],"names":[],"mappings":"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","file":"components/packaging-settings/packaging-settings-controller.js","sourcesContent":["import './../../services/ewf-crud-service';\r\nimport './packaging-measures-service';\r\nimport angular from 'angular';\r\n\r\nPackagingSettingsController.$inject = ['ewfCrudService', 'packagingMeasuresService'];\r\n\r\nexport default function PackagingSettingsController(ewfCrudService, packagingMeasuresService) {\r\n    const vm = this;\r\n    const LIST_URL = '/api/myprofile/packaging/list';\r\n    const PACKAGE_TYPE = {\r\n        DOCUMENT: 'DOCUMENT',\r\n        PACKAGE: 'PACKAGE',\r\n        BOTH: 'BOTH'\r\n    };\r\n    const columnsToDisplay = [\r\n        {\r\n            alias: 'nickName',\r\n            title: 'package-settings.nick_name'\r\n        },\r\n        {\r\n            alias: 'pieceReference',\r\n            title: 'package-settings.piece_references'\r\n        },\r\n        {\r\n            alias: 'defaultDimensions',\r\n            title: 'package-settings.default_dimensions'\r\n        },\r\n        {\r\n            alias: 'defaultWeight',\r\n            title: 'package-settings.default_weight'\r\n        }\r\n    ];\r\n    const emptySinglePackage = {\r\n        key: '',\r\n        nickName: '',\r\n        isDocuments: true,\r\n        isPackages: false,\r\n        packagingType: PACKAGE_TYPE.DOCUMENT,\r\n        pieceReference: '',\r\n        defaultWeight: {\r\n            unit: packagingMeasuresService.getDefaultWeightUnit().key,\r\n            value: ''\r\n        },\r\n        defaultDimensions: {\r\n            unit: packagingMeasuresService.getDefaultDimensionUnit().key,\r\n            height: '',\r\n            width: '',\r\n            length: ''\r\n        },\r\n        isPallet: false\r\n    };\r\n\r\n    Object.assign(vm, {\r\n        init,\r\n        onSort,\r\n        showDialog,\r\n        closeDialog,\r\n        saveOrUpdate,\r\n        showAddDialog,\r\n        editAction,\r\n        duplicatedNicknamesReset,\r\n\r\n        isEditing: false,\r\n        nickNameDuplicated: false,\r\n        showEditPopup: false,\r\n        singlePackage: deepCopyOfPackage(emptySinglePackage),\r\n\r\n        gridData: [],\r\n        packageList: [],\r\n        packageListUnmodified: [],\r\n        gridActionStatus: {},\r\n        notificationData: '',\r\n        columnsToDisplay,\r\n\r\n        mapOptionKey,\r\n\r\n        weightUnits: packagingMeasuresService.getWeightUnits,\r\n        dimensionUnits: packagingMeasuresService.getDimensionUnits,\r\n\r\n        onChangeWeightUnit,\r\n        onChangeDimensionUnit\r\n    });\r\n\r\n    function init() {\r\n        vm.gridCtrl.editCallback = editAction;\r\n        ewfCrudService.getElementList(LIST_URL)\r\n            .then((customPackages) => {\r\n                vm.packageList = customPackages;\r\n\r\n                vm.packageList.forEach((singlePackage) => {\r\n                    const packageDetails = createConvertedToGridFormObject(singlePackage);\r\n\r\n                    vm.gridData.push(packageDetails);\r\n                });\r\n\r\n                vm.gridCtrl.rebuildGrid(vm.gridData);\r\n            });\r\n    }\r\n\r\n    function createConvertedToGridFormObject(singlePackage) {\r\n        let packageDetails = deepCopyOfPackage(singlePackage);\r\n\r\n        return convertToGridForm(packageDetails);\r\n    }\r\n\r\n    function convertToGridForm(packageDetails) {\r\n        const weightUnitName = packagingMeasuresService.getUnitInfo(packageDetails.defaultWeight.unit).title;\r\n        const dimensionUnitName = packagingMeasuresService.getUnitInfo(packageDetails.defaultDimensions.unit).title;\r\n\r\n        packageDetails.packageVolume =\r\n            packageDetails.defaultDimensions.length *\r\n            packageDetails.defaultDimensions.width *\r\n            packageDetails.defaultDimensions.height;\r\n\r\n        packageDetails.defaultWeight =\r\n            `${packageDetails.defaultWeight.value} ${weightUnitName}`;\r\n\r\n        packageDetails.defaultDimensions =\r\n            `${packageDetails.defaultDimensions.length} ${dimensionUnitName} ` +\r\n            `X ${packageDetails.defaultDimensions.width} ${dimensionUnitName} ` +\r\n            `X ${packageDetails.defaultDimensions.height} ${dimensionUnitName}`;\r\n\r\n        return packageDetails;\r\n    }\r\n\r\n    function saveOrUpdate(packageDetailsForm, ewfFormCtrl) {\r\n        ewfFormCtrl.ewfValidation();\r\n\r\n        if (packageDetailsForm.$valid && (vm.singlePackage.isDocuments || vm.singlePackage.isPackages)) {\r\n            if (vm.singlePackage.isDocuments && vm.singlePackage.isPackages) {\r\n                vm.singlePackage.packagingType = PACKAGE_TYPE.BOTH;\r\n            } else {\r\n                vm.singlePackage.packagingType = vm.singlePackage.isDocuments\r\n                    ? PACKAGE_TYPE.DOCUMENT\r\n                    : PACKAGE_TYPE.PACKAGE;\r\n            }\r\n\r\n            return vm.singlePackage.key\r\n                ? updateSinglePackage(vm.singlePackage)\r\n                : addSinglePackage(vm.singlePackage);\r\n        }\r\n    }\r\n\r\n    function addSinglePackage(singlePackage) {\r\n        return ewfCrudService.addElement('/api/myprofile/packaging/add', singlePackage)\r\n            .then((response) => {\r\n                vm.packageList.push(response);\r\n\r\n                vm.gridData.push(createConvertedToGridFormObject(response));\r\n                vm.gridCtrl.rebuildGrid(vm.gridData);\r\n                vm.gridCtrl.broadcastActionReport('created', response);\r\n\r\n                vm.singlePackage = deepCopyOfPackage(emptySinglePackage);\r\n\r\n                closeDialog();\r\n            })\r\n            .catch((error) => {\r\n                if (error.status === 422) {\r\n                    vm.nickNameDuplicated = true;\r\n                }\r\n            });\r\n    }\r\n\r\n    function updateSinglePackage(singlePackage) {\r\n        return ewfCrudService.updateElement('/api/myprofile/packaging/modify', singlePackage)\r\n            .then((response) => {\r\n                const packageListElement = vm.packageList\r\n                    .find((currentPackage) => currentPackage.key === singlePackage.key);\r\n\r\n                copyPackageProperties(packageListElement, response);\r\n\r\n                const packageToUpdate = vm.gridData\r\n                    .find((currentPackage) => currentPackage.key === singlePackage.key);\r\n                const updatedGridElement = convertToGridForm(response);\r\n\r\n                copyPackageProperties(packageToUpdate, updatedGridElement);\r\n\r\n                vm.gridCtrl.rebuildGrid(vm.gridData);\r\n                vm.gridCtrl.broadcastActionReport('updated', response);\r\n\r\n                vm.singlePackage = deepCopyOfPackage(emptySinglePackage);\r\n\r\n                closeDialog();\r\n            });\r\n    }\r\n\r\n    function showDialog() {\r\n        vm.showEditPopup = true;\r\n    }\r\n\r\n    function showAddDialog() {\r\n        vm.singlePackage = deepCopyOfPackage(emptySinglePackage);\r\n\r\n        showDialog();\r\n    }\r\n\r\n    function closeDialog() {\r\n        vm.showEditPopup = false;\r\n        vm.nickNameDuplicated = false;\r\n    }\r\n\r\n    function editAction(key) {\r\n        vm.singlePackage = deepCopyOfPackage(vm.packageList.find((singlePackage) => singlePackage.key === key));\r\n\r\n        vm.singlePackage.isDocuments = vm.singlePackage.packagingType === PACKAGE_TYPE.DOCUMENT\r\n            || vm.singlePackage.packagingType === PACKAGE_TYPE.BOTH;\r\n\r\n        vm.singlePackage.isPackages = vm.singlePackage.packagingType === PACKAGE_TYPE.PACKAGE\r\n            || vm.singlePackage.packagingType === PACKAGE_TYPE.BOTH;\r\n\r\n        showDialog();\r\n    }\r\n\r\n    function deepCopyOfPackage(singlePackage) {\r\n        return angular.copy(singlePackage);\r\n    }\r\n\r\n    function copyPackageProperties(to, from) {\r\n        Object.assign(to, from);\r\n    }\r\n\r\n    function duplicatedNicknamesReset() {\r\n        vm.nickNameDuplicated = false;\r\n    }\r\n\r\n    function onSort(column, rowA, rowB) {\r\n        if (column === 'defaultDimensions') {\r\n            return rowA.packageVolume < rowB.packageVolume;\r\n        }\r\n    }\r\n\r\n    function onChangeWeightUnit(oldUnit, skipDimensions) {\r\n        const newUnit = vm.singlePackage.defaultWeight.unit;\r\n\r\n        vm.singlePackage.defaultWeight.value = packagingMeasuresService\r\n            .convertValue(oldUnit, newUnit, vm.singlePackage.defaultWeight.value);\r\n\r\n        if (skipDimensions) {\r\n            return;\r\n        }\r\n\r\n        const oldSystem = packagingMeasuresService.getUnitInfo(oldUnit).system;\r\n        const newSystem = packagingMeasuresService.getUnitInfo(newUnit).system;\r\n\r\n        if (oldSystem === newSystem) {\r\n            return;\r\n        }\r\n\r\n        const oldDimensionUnit = vm.singlePackage.defaultDimensions.unit;\r\n        vm.singlePackage.defaultDimensions.unit = packagingMeasuresService.getDimensionUnits()\r\n            .find((unit) => unit.system === newSystem).key;\r\n\r\n        onChangeDimensionUnit(oldDimensionUnit, true);\r\n    }\r\n\r\n    function onChangeDimensionUnit(oldUnit, skipWeight) {\r\n        const newUnit = vm.singlePackage.defaultDimensions.unit;\r\n\r\n        vm.singlePackage.defaultDimensions.length = packagingMeasuresService\r\n            .convertValue(oldUnit, newUnit, vm.singlePackage.defaultDimensions.length);\r\n\r\n        vm.singlePackage.defaultDimensions.width = packagingMeasuresService\r\n            .convertValue(oldUnit, newUnit, vm.singlePackage.defaultDimensions.width);\r\n\r\n        vm.singlePackage.defaultDimensions.height = packagingMeasuresService\r\n            .convertValue(oldUnit, newUnit, vm.singlePackage.defaultDimensions.height);\r\n\r\n        if (skipWeight) {\r\n            return;\r\n        }\r\n\r\n        const oldSystem = packagingMeasuresService.getUnitInfo(oldUnit).system;\r\n        const newSystem = packagingMeasuresService.getUnitInfo(newUnit).system;\r\n\r\n        if (oldSystem === newSystem) {\r\n            return;\r\n        }\r\n\r\n        const oldWeightUnit = vm.singlePackage.defaultWeight.unit;\r\n        vm.singlePackage.defaultWeight.unit = packagingMeasuresService.getWeightUnits()\r\n            .find((unit) => unit.system === newSystem).key;\r\n\r\n        onChangeWeightUnit(oldWeightUnit, true);\r\n    }\r\n\r\n    function mapOptionKey(option) {\r\n        if (angular.isObject(option) && option.key !== undefined) {\r\n            return option.key;\r\n        }\r\n\r\n        return option;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}