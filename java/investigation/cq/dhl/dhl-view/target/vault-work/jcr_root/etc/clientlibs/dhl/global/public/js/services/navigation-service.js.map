{"version":3,"sources":["services/navigation-service.js"],"names":[],"mappings":"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","file":"services/navigation-service.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.service('navigationService', NavigationService);\r\n\r\nNavigationService.$inject = ['$window'];\r\n\r\n/**\r\n * Navigation Service. Need to work with URL params and for navigation\r\n *\r\n * @param {angular.$window} $window\r\n */\r\nexport default function NavigationService($window) {\r\n    this.getCountryLang = getCountryLang;\r\n    this.redirect = redirect;\r\n    this.location = location;\r\n    this.changeLang = changeLang;\r\n    this.getPath = getPath;\r\n    this.changeCountry = changeCountry;\r\n    this.redirectToLoginWithCountryId = redirectToLoginWithCountryId;\r\n    this.getParamFromUrl = getParamFromUrl;\r\n    this.redirectToLogin = redirectToLogin;\r\n    this.getOriginFromUrl = getOriginFromUrl;\r\n\r\n    const PATHS = {\r\n        LOGIN_PAGE: 'auth/login.html'\r\n    };\r\n    this.paths = Object.assign({}, PATHS);\r\n\r\n    function getCountryLang() {\r\n        const url = $window.location.href;\r\n        const urlParts = /content\\/dhl\\/(\\w{3,})\\/(\\w{2})/.exec(url);\r\n        if (urlParts === null) {\r\n            throw new Error('can\\'t identify country from url \"' + url + '\"');\r\n        }\r\n        let [, countryId, langId] = urlParts;\r\n        if (countryId === 'master_languages') {\r\n            countryId = 'usa';\r\n        }\r\n        return {\r\n            countryId, langId\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Full change url but stay in the same country and language\r\n     *\r\n     * @param {String} path\r\n     */\r\n    function location(path) {\r\n        const url = $window.location.href;\r\n        const newUrl = url.replace(/(content\\/dhl\\/\\w{3}\\/\\w{2})\\/.+/, '$1/' + path);\r\n        $window.location.href = newUrl;\r\n    }\r\n\r\n    function redirect(path) {\r\n        $window.location = path;\r\n    }\r\n\r\n    /**\r\n     * Navigate on the same page with specified language\r\n     *\r\n     * @param {String} newLang\r\n     */\r\n    function changeLang(newLang) {\r\n        const url = $window.location.href;\r\n        const newUrl = url.replace(/(content\\/dhl\\/\\w{3})\\/\\w{2}/, '$1/' + newLang);\r\n        $window.location.href = newUrl;\r\n    }\r\n\r\n    function getPath() {\r\n        const url = $window.location.pathname;\r\n        // url after /content/dhl/ctr/lg\r\n        return url.substring(20);\r\n    }\r\n\r\n    function changeCountry(to) {\r\n        const from = getCountryLang().countryId;\r\n        if (from !== to) {\r\n            const url = $window.location.href;\r\n\r\n            const normalizedCountryTo = to.toLowerCase();\r\n            const filteredCountry = filterNotImplementedCountries(normalizedCountryTo);\r\n\r\n            const newUrl = url.replace(/(content\\/dhl\\/\\w{3})\\/\\w{2}/, 'content/dhl/' + filteredCountry + '/en');\r\n            $window.location.href = newUrl;\r\n        }\r\n    }\r\n\r\n    function redirectToLoginWithCountryId(countryId) {\r\n        const url = $window.location.href;\r\n        const filteredCountry = filterNotImplementedCountries(countryId.toLowerCase());\r\n        const newUrl = url.replace(/(content\\/dhl\\/\\w{3}\\/\\w{2})\\/.+/,\r\n                            'content/dhl/' + filteredCountry + '/en/auth/login.html');\r\n\r\n        $window.location.href = newUrl;\r\n    }\r\n\r\n    //TODO remove when more countries are available\r\n    function filterNotImplementedCountries(countryCode) {\r\n        const normalizedCountryCode = countryCode.toLowerCase();\r\n        if (normalizedCountryCode !== 'usa' && normalizedCountryCode !== 'deu') {\r\n            $window.alert('Only USA and Germany are available for now. Redirecting to USA.');\r\n            return 'usa';\r\n        }\r\n\r\n        return countryCode;\r\n    }\r\n\r\n    function redirectToLogin() {\r\n        this.location(PATHS.LOGIN_PAGE);\r\n    }\r\n\r\n    function getParamFromUrl(param) {\r\n        //http://stackoverflow.com/a/901144/1719874\r\n        const parameter = param.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n        const regex = new RegExp('[\\\\?&]' + parameter + '=([^&#]*)'),\r\n            results = regex.exec($window.location.search);\r\n        return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\r\n    }\r\n\r\n    function getOriginFromUrl() {\r\n        let origin = '';\r\n        if ($window.location.origin) {\r\n            origin = $window.location.origin;\r\n        } else {\r\n            origin = $window.location.protocol + '//' + $window.location.hostname +\r\n                                ($window.location.port ? ':' + $window.location.port : '');\r\n        }\r\n        return origin;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}