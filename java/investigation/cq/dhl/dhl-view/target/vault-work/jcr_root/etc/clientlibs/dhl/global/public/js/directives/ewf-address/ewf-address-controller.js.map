{"version":3,"sources":["directives/ewf-address/ewf-address-controller.js"],"names":[],"mappings":";;;qBAawB,oBAAoB;;AAT5C,wBAAoB,CAAC,OAAO,GAAG,CAC3B,QAAQ,EACR,QAAQ,EACR,cAAc,EACd,mBAAmB,EACnB,iBAAiB,EACjB,mBAAmB,CACtB,CAAC;;AAEa,aAAS,oBAAoB,CACxC,MAAM,EACN,MAAM,EACN,YAAY,EACZ,iBAAiB,EACjB,eAAe,EACf,iBAAiB,EAAE;;AAEnB,YAAM,EAAE,GAAG,IAAI,CAAC;;AAEhB,cAAM,CAAC,MAAM,CAAC,EAAE,EAAE;AACd,gBAAI,EAAJ,IAAI;AACJ,wBAAY,EAAZ,YAAY;AACZ,uBAAW,EAAX,WAAW;AACX,qBAAS,EAAT,SAAS;AACT,2BAAe,EAAf,eAAe;AACf,iCAAqB,EAArB,qBAAqB;AACrB,2BAAe,EAAf,eAAe;AACf,6BAAiB,EAAjB,iBAAiB;AACjB,oCAAwB,EAAxB,wBAAwB;;AAExB,sBAAU,EAAE;AACR,wBAAQ,EAAE,EAAE;AACZ,wBAAQ,EAAE,EAAE;aACf;;AAED,oBAAQ,EAAE;AACN,qBAAK,EAAE,kGAAkG;AACzG,uBAAO,EAAE,eAAe;AACxB,4BAAY,EAAE,oBAAoB;AAClC,mCAAmB,EAAE,aAAa;aACrC;SACJ,CAAC,CAAC;;AAEH,iBAAS,IAAI,GAAgB;gBAAf,QAAQ,yDAAG,EAAE;;AACvB,kBAAM,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAEhD,wBAAY,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;AAC7D,wBAAY,EAAE,CAAC;;AAEf,gBAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,6BAA6B,EAAE;AACtD,0CAA0B,EAAE,CAAC;aAChC;SACJ;;AAED,iBAAS,UAAU,GAAG;AAClB,gBAAM,gBAAgB,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,IAAI,MAAM,CAAC,OAAO,CAAA,CAAE,WAAW,CAAC;AAC9F,mBAAO,gBAAgB,CAAC,KAAK,IAAI,gBAAgB,CAAC;SACrD;;AAED,iBAAS,YAAY,CAAC,KAAK,EAAE;AACzB,mBAAO,iBAAiB,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,KAAK,CAAC,CAAC;SAC9D;;AAED,iBAAS,WAAW,CAAC,KAAK,EAAE;AACxB,mBAAO,iBAAiB,CAAC,sBAAsB,CAAC,UAAU,EAAE,EAAE,KAAK,CAAC,CAAC;SACxE;;AAED,iBAAS,SAAS,CAAC,KAAK,EAAE;AACtB,mBAAO,iBAAiB,CAAC,mBAAmB,CAAC,UAAU,EAAE,EAAE,KAAK,CAAC,CAAC;SACrE;;AAED,iBAAS,eAAe,CAAC,IAAI,EAAE;AAC3B,cAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;AAClE,cAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3D,cAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;AACnE,cAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;SAC7E;;AAED,iBAAS,iBAAiB,GAAG;AACzB,cAAE,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAA,GAC1B,MAAM,IAAI,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAA,AAAC,CAAC;SAC1F;;AAED,iBAAS,qBAAqB,CAAC,IAAI,EAAE;AACjC,cAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACtD,cAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC;AACtE,cAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;SACxE;;AAED,iBAAS,eAAe,CAAC,OAAO,EAAE,WAAW,EAAE;AAC3C,2BAAe,CAAC,OAAO,CAAC,CAAC;AACzB,uBAAW,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAC1C;;AAED,iBAAS,eAAe,CAAC,IAAI,EAAE;AAC3B,kBAAM,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,EAAE;AAChD,2BAAW,EAAE,IAAI,CAAC,KAAK;AACvB,2BAAW,EAAE,IAAI,CAAC,IAAI;AACtB,kCAAkB,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,kBAAkB;aAChE,CAAC,CAAC;SACN;;;AAGD,iBAAS,YAAY,GAAG;AACpB,gBAAM,OAAO,GAAG,eAAe,CAAC,sBAAsB,EAAE,CACnD,IAAI,CAAC,UAAC,IAAI,EAAK;AACZ,kBAAE,CAAC,UAAU,CAAC,OAAO,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,IAAI,EAAE,CAAC;AACpD,kBAAE,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;aAC1C,CAAC,WACM,CAAC,YAAM;AACX,oBAAI,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,EAAE;AAClD,sBAAE,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,aAAa,EAAK;AACvD,4BAAI,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,KAAK,aAAa,CAAC,KAAK,EAAE;AAC1E,8BAAE,CAAC,UAAU,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC;yBACzE;qBACJ,CAAC,CAAC;iBACN;aACJ,CAAC,CAAC;AACP,mBAAO,iBAAiB,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SAClD;;AAED,iBAAS,0BAA0B,GAAG;AAClC,6BAAiB,CAAC,0BAA0B,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ,EAAK;AAC9D,kBAAE,CAAC,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;aACrC,CAAC,CAAC;SACN;;AAED,iBAAS,wBAAwB,GAAG;iCACJ,EAAE,CAAC,UAAU;gBAAlC,OAAO,kBAAP,OAAO;gBAAE,QAAQ,kBAAR,QAAQ;;AACxB,mBAAO,CAAC,QAAQ,CAAC,6BAA6B,IAAI,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC;SAC1F;KACJ","file":"directives/ewf-address/ewf-address-controller.js","sourcesContent":["import './ewf-address-service';\r\nimport './../../services/location-service';\r\nimport './../../services/ewf-spinner-service';\r\n\r\nEwfAddressController.$inject = [\r\n    '$scope',\r\n    '$attrs',\r\n    'attrsService',\r\n    'ewfAddressService',\r\n    'locationService',\r\n    'ewfSpinnerService'\r\n];\r\n\r\nexport default function EwfAddressController(\r\n    $scope,\r\n    $attrs,\r\n    attrsService,\r\n    ewfAddressService,\r\n    locationService,\r\n    ewfSpinnerService) {\r\n\r\n    const vm = this;\r\n\r\n    Object.assign(vm, {\r\n        init,\r\n        getAddresses,\r\n        getZipCodes,\r\n        getCities,\r\n        onCountrySelect,\r\n        zipCodeOrCitySelected,\r\n        addressSelected,\r\n        nicknameGenerator,\r\n        isResidentialFlagVisible,\r\n\r\n        attributes: {\r\n            defaults: {},\r\n            settings: {}\r\n        },\r\n        //TODO remove it and use pattern service\r\n        patterns: {\r\n            email: '^([\\\\w-]+(?:\\\\.[\\\\w-]+)*)@((?:[\\\\w-]+\\\\.)*\\\\w[\\\\w-]{0,66})\\\\.([a-zA-Z]{2,6}(?:\\\\.[a-zA-Z]{2})?)$',\r\n            numeric: '^(\\\\s*|\\\\d+)$',\r\n            alphaNumeric: '^[a-z\\\\d\\\\-_\\\\s]+$',\r\n            numericSpecialChars: '^[0-9\\\\+]*$'\r\n        }\r\n    });\r\n\r\n    function init(settings = {}) {\r\n        Object.assign(vm.attributes.settings, settings);\r\n\r\n        attrsService.track($scope, $attrs, 'address', vm.attributes);\r\n        getCountries();\r\n\r\n        if (vm.attributes.settings.setResidentialFlagFromProfile) {\r\n            getShipmentAddressDefaults();\r\n        }\r\n    }\r\n\r\n    function getCountry() {\r\n        const countryCodeField = (vm.attributes.address.addressDetails || $scope.address).countryCode;\r\n        return countryCodeField.value || countryCodeField;\r\n    }\r\n\r\n    function getAddresses(query) {\r\n        return ewfAddressService.getAddresses(getCountry(), query);\r\n    }\r\n\r\n    function getZipCodes(query) {\r\n        return ewfAddressService.addressSearchByZipCode(getCountry(), query);\r\n    }\r\n\r\n    function getCities(query) {\r\n        return ewfAddressService.addressSearchByCity(getCountry(), query);\r\n    }\r\n\r\n    function addressSelected(item) {\r\n        vm.attributes.address.addressDetails.addrLine1 = item.fullAddress;\r\n        vm.attributes.address.addressDetails.city = item.data.city;\r\n        vm.attributes.address.addressDetails.zipOrPostCode = item.data.zip;\r\n        vm.attributes.address.addressDetails.stateOrProvince = item.data.district;\r\n    }\r\n\r\n    function nicknameGenerator() {\r\n        vm.attributes.address.nickname = (vm.attributes.address.name || '') +\r\n                                                ' at ' + (vm.attributes.address.company || '');\r\n    }\r\n\r\n    function zipCodeOrCitySelected(item) {\r\n        vm.attributes.address.addressDetails.city = item.city;\r\n        vm.attributes.address.addressDetails.stateOrProvince = item.stateName;\r\n        vm.attributes.address.addressDetails.zipOrPostCode = item.postalCode;\r\n    }\r\n\r\n    function onCountrySelect(country, ewfFormCtrl) {\r\n        countrySelected(country);\r\n        ewfFormCtrl.reloadRules(country.code2);\r\n    }\r\n\r\n    function countrySelected(item) {\r\n        Object.assign(vm.attributes.address.addressDetails, {\r\n            countryCode: item.code2,\r\n            countryName: item.name,\r\n            residentialAddress: vm.attributes.defaults.residentialDefault\r\n        });\r\n    }\r\n\r\n    //TODO: think about synch of this promise and one in the contact-info-controller.js#init\r\n    function getCountries() {\r\n        const promise = locationService.loadAvailableLocations()\r\n            .then((data) => {\r\n                vm.attributes.address = vm.attributes.address || {};\r\n                vm.attributes.address.countries = data;\r\n            })\r\n            .finally(() => {\r\n                if (vm.attributes.address.addressDetails.countryCode) {\r\n                    vm.attributes.address.countries.forEach((singleCountry) => {\r\n                        if (vm.attributes.address.addressDetails.countryCode === singleCountry.code2) {\r\n                            vm.attributes.address.addressDetails.countryName = singleCountry.name;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        return ewfSpinnerService.applySpinner(promise);\r\n    }\r\n\r\n    function getShipmentAddressDefaults() {\r\n        ewfAddressService.getShipmentAddressDefaults().then((defaults) => {\r\n            vm.attributes.defaults = defaults;\r\n        });\r\n    }\r\n\r\n    function isResidentialFlagVisible() {\r\n        const {address, settings} = vm.attributes;\r\n        return !settings.setResidentialFlagFromProfile || !!address.addressDetails.countryCode;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}