{"version":3,"sources":["components/register/form/directives/ewf-email-existance-directive.js"],"names":[],"mappings":";;;;;;;AAEA,qBAAI,SAAS,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;;AAE9C,iBAAa,CAAC,OAAO,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;;AAEhD,aAAS,aAAa,CAAC,KAAK,EAAE,UAAU,EAAE;AACtC,eAAO;AACH,oBAAQ,EAAE,GAAG;AACb,mBAAO,EAAE,SAAS;AAClB,gBAAI,EAAE,cAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI;uBAAK,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC;aAAA;SAClG,CAAC;KACL;;AAED,aAAS,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;;AAE9D,YAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAK,EAAK;AAC7B,iBAAK,CAAC,IAAI,CAAC,2BAA2B,EAAE,EAAC,KAAK,EAAL,KAAK,EAAC,CAAC,CAC3C,OAAO,CAAC,UAAC,uBAAuB,EAAK;;;AAGlC,oBAAM,QAAQ,GAAG,CAAC,uBAAuB,CAAC,KAAK,CAAC;AAChD,oBAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC;AAClD,oBAAM,cAAc,GAAG,uBAAuB,CAAC,KAAK,CAAC;AACrD,oBAAI,CAAC,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;;AAE3C,uBAAO,KAAK,CAAC;aAChB,CAAC;;aAED,KAAK,CAAC,UAAC,KAAK,EAAK;AACd,0BAAU,CAAC,KAAK,CAAC,2CAA2C,GAAG,KAAK,CAAC,CAAC;AACtE,oBAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;AAC9C,uBAAO,KAAK,CAAC;aAChB,CAAC,CAAC;;AAEP,mBAAO,KAAK,CAAC;SAChB,CAAC,CAAC;KACN","file":"components/register/form/directives/ewf-email-existance-directive.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.directive('ewfCheckEmail', EwfCheckEmail);\r\n\r\nEwfCheckEmail.$inject = ['$http', 'logService'];\r\n\r\nfunction EwfCheckEmail($http, logService) {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        link: (scope, element, attrs, ctrl) => postLink(scope, element, attrs, ctrl, $http, logService)\r\n    };\r\n}\r\n\r\nfunction postLink(scope, element, attrs, ctrl, $http, logService) {\r\n    // TODO: it's not good that e-mail check each time focus out\r\n    ctrl.$parsers.unshift((email) => {\r\n        $http.post('/api/user/validate/email ', {email})\r\n            .success((emailValidationResponce) => {\r\n                // TODO: check that it real success\r\n                // Response format: {\"valid\":true,\"exist\":true}\r\n                const validity = !emailValidationResponce.exist;\r\n                ctrl.$setValidity('emailAlreadyExists', validity);\r\n                const validityFormat = emailValidationResponce.valid;\r\n                ctrl.$setValidity('email', validityFormat);\r\n\r\n                return email;\r\n            })\r\n            // TODO: handle HTTP errors like 500\r\n            .error((error) => {\r\n                logService.error('There are some issues contacting server. ' + error);\r\n                ctrl.$setValidity('emailAlreadyExists', true);\r\n                return email;\r\n            });\r\n\r\n        return email;\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}