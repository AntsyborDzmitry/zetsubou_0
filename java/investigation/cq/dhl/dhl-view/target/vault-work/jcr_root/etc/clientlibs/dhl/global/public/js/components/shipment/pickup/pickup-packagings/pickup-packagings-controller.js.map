{"version":3,"sources":["components/shipment/pickup/pickup-packagings/pickup-packagings-controller.js"],"names":[],"mappings":";;;qBAIwB,oBAAoB;;AAF5C,wBAAoB,CAAC,OAAO,GAAG,CAAC,uBAAuB,CAAC,CAAC;;AAE1C,aAAS,oBAAoB,CAAC,qBAAqB,EAAE;AAChE,YAAM,EAAE,GAAG,IAAI,CAAC;;AAEhB,YAAM,0BAA0B,GAAG,CAAC,CAAC;;AAErC,cAAM,CAAC,MAAM,CAAC,EAAE,EAAE;AACd,kCAAsB,EAAtB,sBAAsB;AACtB,2BAAe,EAAf,eAAe;AACf,wBAAY,EAAZ,YAAY;AACZ,+BAAmB,EAAnB,mBAAmB;AACnB,qBAAS,EAAT,SAAS;AACT,iCAAqB,EAArB,qBAAqB;;AAErB,sBAAU,EAAE,IAAI;AAChB,0BAAc,EAAE,EAAE;SACrB,CAAC,CAAC;;AAEH,iBAAS,sBAAsB,CAAC,cAAc,EAAE;AAC5C,8BAAkB,CAAC,cAAc,CAAC,CAAC;SACtC;;AAED,iBAAS,kBAAkB,CAAC,cAAc,EAAE;AACxC,mBAAO,qBAAqB,CACvB,mBAAmB,CAAC,MAAM,EAAE,cAAc,EAAE,IAAI,CAAC,CACjD,IAAI,CAAC,oBAAoB,CAAC,CAAC;SACnC;;AAED,iBAAS,oBAAoB,CAAC,aAAa,EAAE;AACzC,cAAE,CAAC,cAAc,GAAG,aAAa,CAAC,aAAa,CAAC;SACnD;;AAED,iBAAS,eAAe,CAAC,SAAS,EAAE;AAChC,gBAAM,YAAY,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;;AAEvD,gBAAI,YAAY,EAAE;AACd,kBAAE,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;aAC7D;SACJ;;AAED,iBAAS,YAAY,GAAG;AACpB,cAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAC,CAAC,CAAC;SAC/C;;AAED,iBAAS,mBAAmB,GAAG;AAC3B,mBAAO,EAAE,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC;SACrC;;AAED,iBAAS,SAAS,CAAC,SAAS,EAAE;AAC1B,gBAAM,aAAa,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,UAAC,IAAI;uBAAK,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE;aAAA,CAAC,CAAC;;AAEjF,mBAAO,aAAa,GAAG,aAAa,CAAC,WAAW,GAAG,EAAE,CAAC;SACzD;;AAED,iBAAS,qBAAqB,CAAC,SAAS,EAAE;AACtC,qBAAS,CAAC,QAAQ,GAAG,0BAA0B,CAAC;SACnD;KACJ","file":"components/shipment/pickup/pickup-packagings/pickup-packagings-controller.js","sourcesContent":["import './../../package-details/package-details-service';\r\n\r\nPickupPackagingsCtrl.$inject = ['packageDetailsService'];\r\n\r\nexport default function PickupPackagingsCtrl(packageDetailsService) {\r\n    const vm = this;\r\n\r\n    const DEFAULT_PACKAGING_QUANTITY = 1;\r\n\r\n    Object.assign(vm, {\r\n        onShipperCountryUpdate,\r\n        removePackaging,\r\n        addPackaging,\r\n        hasOnlyOnePackaging,\r\n        getMaxQty,\r\n        onPackagingTypeChange,\r\n\r\n        packagings: null,\r\n        packagingTypes: []\r\n    });\r\n\r\n    function onShipperCountryUpdate(shipperCountry) {\r\n        loadPackagingTypes(shipperCountry);\r\n    }\r\n\r\n    function loadPackagingTypes(shipperCountry) {\r\n        return packageDetailsService\r\n            .getPackagingDetails('BOTH', shipperCountry, true)\r\n            .then(onPackagingTypesLoad);\r\n    }\r\n\r\n    function onPackagingTypesLoad(packagingData) {\r\n        vm.packagingTypes = packagingData.packagingList;\r\n    }\r\n\r\n    function removePackaging(packaging) {\r\n        const hasPackaging = vm.packagings.includes(packaging);\r\n\r\n        if (hasPackaging) {\r\n            vm.packagings.splice(vm.packagings.indexOf(packaging), 1);\r\n        }\r\n    }\r\n\r\n    function addPackaging() {\r\n        vm.packagings.push({id: null, quantity: 1});\r\n    }\r\n\r\n    function hasOnlyOnePackaging() {\r\n        return vm.packagings.length === 1;\r\n    }\r\n\r\n    function getMaxQty(packaging) {\r\n        const packagingType = vm.packagingTypes.find((type) => type.id === packaging.id);\r\n\r\n        return packagingType ? packagingType.maxQuantity : '';\r\n    }\r\n\r\n    function onPackagingTypeChange(packaging) {\r\n        packaging.quantity = DEFAULT_PACKAGING_QUANTITY;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}