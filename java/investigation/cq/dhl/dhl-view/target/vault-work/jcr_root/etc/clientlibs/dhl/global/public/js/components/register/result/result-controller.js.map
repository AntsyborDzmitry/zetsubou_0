{"version":3,"sources":["components/register/result/result-controller.js"],"names":[],"mappings":";;;qBAAwB,6BAA6B;;AAAtC,aAAS,6BAA6B,GAAG;AACpD,YAAM,EAAE,GAAG,IAAI,CAAC;;AAEhB,cAAM,CAAC,MAAM,CAAC,EAAE,EAAE;AACd,2BAAe,EAAE,KAAK;;AAEtB,qCAAyB,EAAzB,yBAAyB;AACzB,2BAAe,EAAf,eAAe;SAClB,CAAC,CAAC;;AAEH,YAAI,sBAAsB,YAAA,CAAC;;AAE3B,iBAAS,yBAAyB,CAAC,UAAU,EAAE;AAC3C,kCAAsB,GAAG,UAAU,CAAC;AACpC,gBAAM,SAAS,GAAG,sBAAsB,CAAC,eAAe,EAAE,CAAC;AAC3D,cAAE,CAAC,eAAe,GAAG,SAAS,CAAC,aAAa,CAAC;SAChD;;AAED,iBAAS,eAAe,GAAG;AACvB,kCAAsB,CAAC,6BAA6B,EAAE,CAAC;SAC1D;KACJ","file":"components/register/result/result-controller.js","sourcesContent":["export default function RegistrationSuccessController() {\r\n    const vm = this;\r\n\r\n    Object.assign(vm, {\r\n        isAccountHolder: false,\r\n\r\n        setRegistrationController,\r\n        activateAccount\r\n    });\r\n\r\n    let registrationController;\r\n\r\n    function setRegistrationController(controller) {\r\n        registrationController = controller;\r\n        const regResult = registrationController.getActivationId();\r\n        vm.isAccountHolder = regResult.accountHolder;\r\n    }\r\n\r\n    function activateAccount() {\r\n        registrationController.navigateToEmailActivationPage();\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}