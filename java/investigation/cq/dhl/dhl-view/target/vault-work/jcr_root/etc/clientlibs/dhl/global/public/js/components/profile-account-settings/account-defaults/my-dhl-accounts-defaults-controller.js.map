{"version":3,"sources":["components/profile-account-settings/account-defaults/my-dhl-accounts-defaults-controller.js"],"names":[],"mappings":"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","file":"components/profile-account-settings/account-defaults/my-dhl-accounts-defaults-controller.js","sourcesContent":["import './../profile-account-settings-service';\r\nimport './../../../constants/system-settings-constants';\r\n\r\nMyDhlAccountsDefaultsController.$inject = [\r\n    '$timeout',\r\n    '$q',\r\n    'profileAccountSettingsService',\r\n    'nlsService',\r\n    'systemSettings'\r\n];\r\n\r\nexport default function MyDhlAccountsDefaultsController(\r\n    $timeout,\r\n    $q,\r\n    profileAccountSettingsService,\r\n    nlsService,\r\n    systemSettings) {\r\n    const vm = this;\r\n\r\n    vm.accountListUpdated = false;\r\n    vm.isEditing = false;\r\n    vm.cancelEditing = cancelEditing;\r\n\r\n    vm.populateAccountsDefaults = populateAccountsDefaults;\r\n    vm.updateAccountsDefaults = updateAccountsDefaults;\r\n\r\n    function cancelEditing() {\r\n        vm.isEditing = false;\r\n        populateAccountsDefaults();\r\n    }\r\n\r\n    populateAccountsDefaults();\r\n\r\n    function populateAccountsDefaults() {\r\n        profileAccountSettingsService.getMyDhlAccountsDefaults()\r\n            .then((response) => {\r\n                initData(response);\r\n            })\r\n            .catch(errorHandler);\r\n    }\r\n\r\n    function updateAccountsDefaults() {\r\n        profileAccountSettingsService.updateMyDhlAccountsDefaults(vm.selectedAccountInfo, vm.maskDhlAccounts)\r\n            .then(() => {\r\n                populateAccountsDefaults();\r\n                vm.accountListUpdated = true;\r\n                vm.isEditing = false;\r\n                $timeout(() => {\r\n                    vm.accountListUpdated = false;\r\n                }, systemSettings.showInformationHintTimeout);\r\n            })\r\n            .catch(errorHandler);\r\n    }\r\n\r\n    function initData(response) {\r\n        const dutiesAndTaxesOptions = response.dutiesAndTaxesOptions;\r\n        const shipmentOptions = response.shipmentOptions;\r\n        vm.selectedAccountInfo = response.selectedAccountInfo;\r\n        vm.maskDhlAccounts = response.maskDhlAccounts;\r\n        vm.availableForDutiesAndTaxes = response.availableAccounts;\r\n\r\n        getTranslation(shipmentOptions, dutiesAndTaxesOptions)\r\n            .then((translationDictionary) => {\r\n                translateSelectedAccounts(vm.selectedAccountInfo, translationDictionary);\r\n\r\n                vm.availableForShipment = angular.copy(vm.availableForDutiesAndTaxes);\r\n                vm.availableForShipmentImportAccounts = vm.availableForShipment\r\n                    .filter((item) => item.importAccount === true);\r\n\r\n                appendOptions(vm.availableForShipment, shipmentOptions, translationDictionary);\r\n                appendOptions(vm.availableForDutiesAndTaxes, dutiesAndTaxesOptions, translationDictionary);\r\n\r\n                vm.availableForShipmentImportAccounts = vm.availableForShipmentImportAccounts.concat(shipmentOptions);\r\n\r\n                //copy pointers for simplify access to data from controller\r\n                Object.keys(vm.selectedAccountInfo).forEach((field) => {\r\n                    vm[field] = vm.selectedAccountInfo[field];\r\n                });\r\n            });\r\n    }\r\n\r\n    function appendOptions(destination, options, translationDictionary) {\r\n        options.forEach((option, index) => {\r\n            options[index].title = translationDictionary[option.title];\r\n            if (!destination.find((account) => account.key === option.key)) {\r\n                destination.push(option);\r\n            }\r\n        });\r\n    }\r\n\r\n    function translateSelectedAccounts(selectedAccounts, translationDictionary) {\r\n        Object.keys(selectedAccounts).forEach((accountType) => {\r\n            const translation = translationDictionary[selectedAccounts[accountType].data.title];\r\n            if (translation) {\r\n                selectedAccounts[accountType].data.title = translation;\r\n            }\r\n        });\r\n    }\r\n\r\n    function getTranslation(shipmentOptions, dutiesAndTaxesOptions) {\r\n        const translationDefer = $q.defer();\r\n        const translatePromises = [];\r\n        const titles = mergeTitles(shipmentOptions, dutiesAndTaxesOptions);\r\n        const translationDictionary = {};\r\n\r\n        titles.forEach((title) => {\r\n            translatePromises.push(nlsService.getTranslation(`my-accounts.${title}`));\r\n        });\r\n        $q.all(translatePromises)\r\n            .then((translations) => {\r\n                titles.forEach((title, index) => {\r\n                    translationDictionary[title] = translations[index];\r\n                });\r\n                translationDefer.resolve(translationDictionary);\r\n            })\r\n            .catch(errorHandler);\r\n        return translationDefer.promise;\r\n    }\r\n\r\n    function mergeTitles() {\r\n        const allItems = Array.concat(...arguments);\r\n        const result = new Set();\r\n        allItems.forEach((item) => {\r\n            result.add(item.title);\r\n        });\r\n        return [...result];\r\n    }\r\n\r\n    function errorHandler() {\r\n        vm.accountListUpdated = false;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}