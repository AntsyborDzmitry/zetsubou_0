{"version":3,"sources":["services/http_interceptors/errors-interceptor.js"],"names":[],"mappings":";;;;;;;AAEA,qBAAI,OAAO,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;;AAEpD,qBAAiB,CAAC,OAAO,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;;AAEjD,aAAS,iBAAiB,CAAC,EAAE,EAAE,UAAU,EAAE;;;;;;;;;;;AAWvC,iBAAS,UAAU,CAAC,IAAI,EAAE;AACtB,gBAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AACrC,gBAAI,WAAW,EAAE;AACb,sBAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAC,OAAO,EAAK;AAC1C,wBAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;;;;AAIpC,wBAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,8BAAU,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,GAAG,gBAAgB,GAAG,OAAO,CAAC,CAAC;iBACtE,CAAC,CAAC;aACN;;AAED,gBAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,gBAAI,MAAM,EAAE;;;AAGR,oBAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,0BAAU,CAAC,KAAK,CAAC,kBAAkB,GAAG,OAAO,CAAC,CAAC;aAClD;SACJ;;AAED,eAAO;AACH,yBAAa,EAAE,uBAAS,SAAS,EAAE;;AAE/B,oBAAI,SAAS,CAAC,MAAM,KAAK,GAAG,EAAE;AAC1B,wBAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AAC5B,wBAAI,IAAI,YAAY,MAAM,EAAE;AACxB,kCAAU,CAAC,IAAI,CAAC,CAAC;qBACpB;iBACJ;AACD,0BAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAClC,uBAAO,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aAC/B;SACJ,CAAC;KACL","file":"services/http_interceptors/errors-interceptor.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.factory('errorsInterceptor', errorsInterceptor);\r\n\r\nerrorsInterceptor.$inject = ['$q', 'logService'];\r\n\r\nfunction errorsInterceptor($q, logService) {\r\n\r\n    /**\r\n     * @param {Object} data - json response in form:\r\n     * {\r\n     *   \"fieldErrors\": {\r\n     *      \"fieldId\": [\"errCode\"]\r\n     *   },\r\n     *   \"errors\": [\"errCode\"]\r\n     * }\r\n     */\r\n    function showErrors(data) {\r\n        const fieldErrors = data.fieldErrors;\r\n        if (fieldErrors) {\r\n            Object.keys(fieldErrors).forEach((fieldId) => {\r\n                const errors = fieldErrors[fieldId];\r\n\r\n                // TODO: display better\r\n                // TODO: localize!!!\r\n                const errText = errors.join(', ');\r\n                logService.error('field \"' + fieldId + '\" has errors: ' + errText);\r\n            });\r\n        }\r\n\r\n        const errors = data.errors;\r\n        if (errors) {\r\n            // TODO: display better\r\n            // TODO: localize!!!\r\n            const errText = errors.join(', ');\r\n            logService.error('general errors: ' + errText);\r\n        }\r\n    }\r\n\r\n    return {\r\n        responseError: function(rejection) {\r\n            // TODO: think about possible status codes to handle\r\n            if (rejection.status === 400) {\r\n                const data = rejection.data;\r\n                if (data instanceof Object) {\r\n                    showErrors(data);\r\n                }\r\n            }\r\n            logService.log('err interceptor');\r\n            return $q.reject(rejection);\r\n        }\r\n    };\r\n}\r\n"],"sourceRoot":"/source/"}