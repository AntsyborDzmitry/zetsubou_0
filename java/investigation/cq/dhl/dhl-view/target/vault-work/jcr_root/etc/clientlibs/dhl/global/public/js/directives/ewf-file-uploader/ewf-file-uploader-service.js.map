{"version":3,"sources":["directives/ewf-file-uploader/ewf-file-uploader-service.js"],"names":[],"mappings":"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","file":"directives/ewf-file-uploader/ewf-file-uploader-service.js","sourcesContent":["import ewf from 'ewf';\r\nimport angular from 'angular';\r\n\r\newf.service('ewfFileUploaderService', EwfFileUploaderService);\r\n\r\nEwfFileUploaderService.$inject = ['$q', '$window', '$timeout', 'logService'];\r\n\r\nexport default function EwfFileUploaderService($q, $window, $timeout, logService) {\r\n    const serviceApi = {\r\n        uploadFiles,\r\n        uploadAvailable,\r\n        submitForm\r\n    };\r\n\r\n    const somePartUploadedPercent = 37;\r\n    const fullUploadedPercent = 100;\r\n    const httpOkStatus = 200;\r\n    const knownHttpStatuses = {\r\n        413: {\r\n            errors: ['errors.file_size_limit_exceeded']\r\n        }\r\n    };\r\n\r\n    function uploadFiles(files, url, paramsString) {\r\n        const uploadDeferred = $q.defer();\r\n        const formData = new $window.FormData();\r\n\r\n        files.forEach((eachFileItem, index) => {\r\n            formData.append(`file${index}`, eachFileItem);\r\n        });\r\n\r\n        const request = getXmlHttpRequest();\r\n        request.open('POST', `${url}${paramsString}`);\r\n        request.onerror = (error) => uploadDeferred.reject(error);\r\n\r\n        request.upload.addEventListener('uploadProgress', (event) => {\r\n            if (event.lengthComputable) {\r\n                const percentComplete = event.loaded / event.total * 100;\r\n                uploadDeferred.notify(percentComplete.toFixed());\r\n            }\r\n        }, true);\r\n\r\n        request.onload = (event) => {\r\n            const target = event.target;\r\n            const response = parseResponse(target.response);\r\n\r\n            if (target.status === httpOkStatus) {\r\n                uploadDeferred.notify(fullUploadedPercent);\r\n                return uploadDeferred.resolve(response);\r\n            }\r\n            logService.error(response);\r\n            return uploadDeferred.reject(knownHttpStatuses[target.status] || response);\r\n        };\r\n\r\n        request.send(formData);\r\n        return uploadDeferred.promise;\r\n    }\r\n\r\n    function parseResponse(response) {\r\n        let result = response;\r\n        try {\r\n            result = angular.fromJson(result);\r\n        } catch (error) {\r\n            result = {\r\n                errors: [result.toString()]\r\n            };\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getXmlHttpRequest() {\r\n        let xhrRequest;\r\n\r\n        if ($window.XMLHttpRequest) {\r\n            xhrRequest = new $window.XMLHttpRequest();\r\n        } else if ($window.ActiveXObject) {\r\n            try {\r\n                xhrRequest = new $window.ActiveXObject('MSXML2.XMLHttp.3.0');\r\n            } catch (error) {\r\n                xhrRequest = new $window.ActiveXObject('Microsoft.XMLHTTP');\r\n            }\r\n        }\r\n\r\n        return xhrRequest;\r\n    }\r\n\r\n    function uploadAvailable() {\r\n        return !!$window.FormData;\r\n    }\r\n\r\n    function submitForm(submitElements) {\r\n        const uploadDeferred = $q.defer();\r\n\r\n        const frame = angular.element(submitElements.frame);\r\n\r\n        frame.on('load', frameOnLoadHandler);\r\n        frame.on('error', (error) => uploadDeferred.reject(error));\r\n\r\n        submitElements.form.submit();\r\n\r\n        $timeout(() => {\r\n            uploadDeferred.notify(somePartUploadedPercent);\r\n        }, 0);\r\n\r\n        return uploadDeferred.promise;\r\n\r\n        function frameOnLoadHandler() {\r\n            const response = extractResponseFromFrame(this);\r\n            if (!response) {\r\n                return;\r\n            }\r\n            uploadDeferred.notify(fullUploadedPercent);\r\n\r\n            if (response.hasOwnProperty('errors')) {\r\n                uploadDeferred.reject(response);\r\n                return;\r\n            }\r\n            uploadDeferred.resolve(response);\r\n        }\r\n    }\r\n\r\n    function extractResponseFromFrame(frame) {\r\n        try {\r\n            // fixing Opera 10.53\r\n            if (frame.contentDocument &&\r\n                frame.contentDocument.body &&\r\n                frame.contentDocument.body.innerHTML === 'false') {\r\n                return null;\r\n            }\r\n        } catch (error) {\r\n            //IE may throw an \"access is denied\" error when attempting to access contentDocument\r\n            return null;\r\n        }\r\n        const frameDocument = frame.contentDocument || frame.contentWindow.document;\r\n        const extractResponse = (htmBodyText) => {\r\n            const bodyData = /(\\{.*})/.exec(htmBodyText);\r\n            return bodyData && bodyData[0] || null;\r\n        };\r\n        const jsonText = frameDocument.body.textContent || extractResponse(frameDocument.body.innerHTML);\r\n        return angular.fromJson(jsonText);\r\n    }\r\n\r\n    return serviceApi;\r\n}\r\n"],"sourceRoot":"/source/"}