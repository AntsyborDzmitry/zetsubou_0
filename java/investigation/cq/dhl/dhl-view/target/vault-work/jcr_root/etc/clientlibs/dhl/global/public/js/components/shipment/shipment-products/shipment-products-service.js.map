{"version":3,"sources":["components/shipment/shipment-products/shipment-products-service.js"],"names":[],"mappings":"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","file":"components/shipment/shipment-products/shipment-products-service.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.service('shipmentProductsService', ShipmentProductsService);\r\n\r\nShipmentProductsService.$inject = ['$http', '$q', 'logService'];\r\n\r\nexport default function ShipmentProductsService($http, $q, logService) {\r\n    let shipmentProducts = {};\r\n    let shipmentTimezoneOffset = '';\r\n\r\n    angular.extend(this, {\r\n        getShipmentDates,\r\n        getProductsByDate,\r\n        clearProductsCache,\r\n        getFavoriteProduct,\r\n        getProductWithDiscount,\r\n        getShipmentTimezoneOffset\r\n    });\r\n\r\n    function getShipmentDates(countryCode, postalCode, city) {\r\n        return $http.get(`/api/shipment/products/shipmentDates/${countryCode}/${postalCode}/${city}`)\r\n            .then((response) => {\r\n                shipmentTimezoneOffset = response.data.timeZoneOffset;\r\n                return response.data;\r\n            })\r\n            .catch((response) => {\r\n                logService.error('ShipmentProductsService#getShipmentDates: response error', response);\r\n            });\r\n    }\r\n\r\n    function getProductsByDate(dateTimestamp, quotationRequestData) {\r\n        if (shipmentProducts.hasOwnProperty(dateTimestamp)) {\r\n            return $q.when(shipmentProducts[dateTimestamp]);\r\n        }\r\n\r\n        quotationRequestData.readyTime = dateTimestamp;\r\n        //TODO: refactor work with date/time considering timezone and using one general format (preferably milliseconds)\r\n        quotationRequestData.pickupDate = new Date(dateTimestamp).getTime(); //fixme\r\n\r\n        return $http.post('/api/shipment/products/list', quotationRequestData)\r\n            .then((response = {}) => {\r\n                response.data = response.data || {};\r\n                shipmentProducts[dateTimestamp] = sortProducts(response.data.products || []);\r\n                return shipmentProducts[dateTimestamp];\r\n            })\r\n            .catch((response) => {\r\n                logService.error('ShipmentProductsService#getProductsByDate: response error', response);\r\n            });\r\n    }\r\n\r\n    function clearProductsCache() {\r\n        shipmentProducts = {};\r\n        return this;\r\n    }\r\n\r\n    function sortProducts(products) {\r\n        return products.sort((first, second) => {\r\n            return first.estimatedDelivery - second.estimatedDelivery;\r\n        });\r\n    }\r\n\r\n    function getFavoriteProduct() {\r\n        return $http.get('/api/shipment/products/favoriteCode')\r\n            .then((response) => response.data)\r\n            .catch((response) => {\r\n                logService.error('ShipmentProductsService#getFavoriteProduct: response error', response);\r\n            });\r\n    }\r\n\r\n    function getProductWithDiscount(accountNumber, targetProduct, shipmentDate, quotationRequestData) {\r\n        quotationRequestData.accountNumber = accountNumber;\r\n\r\n        return this.getProductsByDate(shipmentDate, quotationRequestData)\r\n            .then((products) => products.find((product) => product.code === targetProduct.code));\r\n    }\r\n\r\n    function getShipmentTimezoneOffset() {\r\n        return shipmentTimezoneOffset;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}