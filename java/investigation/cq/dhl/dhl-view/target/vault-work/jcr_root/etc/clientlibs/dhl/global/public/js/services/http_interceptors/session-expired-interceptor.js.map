{"version":3,"sources":["services/http_interceptors/session-expired-interceptor.js"],"names":[],"mappings":";;;qBAMwB,yBAAyB;;;;;;AAJjD,qBAAI,OAAO,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;;AAEpE,6BAAyB,CAAC,OAAO,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,cAAc,EAAE,mBAAmB,CAAC,CAAC;;AAE/E,aAAS,yBAAyB,CAAC,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,iBAAiB,EAAE;AAC/F,eAAO;AACH,yBAAa,EAAE,uBAAS,SAAS,EAAE;AAC/B,oBAAI,SAAS,CAAC,MAAM,KAAK,GAAG,EAAE;AAC1B,8BAAU,CAAC,GAAG,CAAC,gEAAgE,CAAC,CAAC;AACjF,gCAAY,CAAC,iBAAiB,CAAC,YAAY,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AACtE,qCAAiB,CAAC,eAAe,EAAE,CAAC;iBACvC;AACD,uBAAO,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aAC/B;SACJ,CAAC;KACL","file":"services/http_interceptors/session-expired-interceptor.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.factory('sessionExpiredInterceptor', sessionExpiredInterceptor);\r\n\r\nsessionExpiredInterceptor.$inject = ['$q', 'logService', 'loginService', 'navigationService'];\r\n\r\nexport default function sessionExpiredInterceptor($q, logService, loginService, navigationService) {\r\n    return {\r\n        responseError: function(rejection) {\r\n            if (rejection.status === 401) {\r\n                logService.log('HTTP 401: Session Expired Interceptor - redirect to login page');\r\n                loginService.saveNextFormTitle(loginService.titles.SESSION_TIMED_OUT);\r\n                navigationService.redirectToLogin();\r\n            }\r\n            return $q.reject(rejection);\r\n        }\r\n    };\r\n}\r\n"],"sourceRoot":"/source/"}