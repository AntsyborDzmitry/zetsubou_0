{"version":3,"sources":["directives/ewf-password/ewf-validate-password-equality-directive.js"],"names":[],"mappings":";;;;;qBAIwB,2BAA2B;;;;;;AAFnD,qBAAI,SAAS,CAAC,6BAA6B,EAAE,2BAA2B,CAAC,CAAC;;AAE3D,aAAS,2BAA2B,GAAG;AAClD,eAAO;AACH,oBAAQ,EAAE,GAAG;AACb,mBAAO,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;AAChC,gBAAI,EAAE;AACF,oBAAI,EAAE,QAAQ;aACjB;SACJ,CAAC;;AAEF,iBAAS,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE;8CACjB,WAAW;;gBAArC,SAAS;gBAAE,WAAW;;AAE7B,gBAAM,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;AACpE,gBAAM,aAAa,GAAG,YAAY,CAAC,aAAa,CAAC;AACjD,gBAAM,SAAS,GAAG,YAAY,CAAC,SAAS,IAAI,SAAS,CAAC;AACtD,gBAAM,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;;AAE/C,gBAAM,YAAY,GAAG,SAAS,KAAK,SAAS,GAAG,WAAW,GAAG,WAAW,CAAC;;AAEzE,iBAAK,CAAC,MAAM,CAAC,YAAM;AACf,oBAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;AAC9C,uBAAO,CAAC,UAAU,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC;aAC/C,EAAE,UAAC,MAAM,EAAK;6CAC4C,MAAM;;oBAAtD,iBAAiB;oBAAE,yBAAyB;;AAEnD,oBAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,oBAAI,iBAAiB,IAAI,yBAAyB,EAAE;AAChD,4BAAQ,GAAG,YAAY,CAAC,iBAAiB,EAAE,yBAAyB,CAAC,IACjE,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;iBACjD;AACD,2BAAW,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;aACjD,EAAE,IAAI,CAAC,CAAC;SACZ;;AAED,iBAAS,WAAW,CAAC,UAAU,EAAE,WAAW,EAAE;AAC1C,mBAAO,UAAU,KAAK,WAAW,CAAC;SACrC;;AAED,iBAAS,WAAW,CAAC,UAAU,EAAE,WAAW,EAAE;AAC1C,mBAAO,UAAU,KAAK,WAAW,CAAC;SACrC;KACJ","file":"directives/ewf-password/ewf-validate-password-equality-directive.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.directive('ewfValidatePasswordEquality', EwfValidatePasswordEquality);\r\n\r\nexport default function EwfValidatePasswordEquality() {\r\n    return {\r\n        restrict: 'A',\r\n        require: ['ewfInput', 'ngModel'],\r\n        link: {\r\n            post: postLink\r\n        }\r\n    };\r\n\r\n    function postLink(scope, element, attrs, controllers) {\r\n        const [inputCtrl, ngModelCtrl] = controllers;\r\n\r\n        const equalityInfo = scope.$eval(attrs.ewfValidatePasswordEquality);\r\n        const passwordField = equalityInfo.passwordField;\r\n        const operation = equalityInfo.operation || 'matches';\r\n        const errorMessage = equalityInfo.errorMessage;\r\n\r\n        const testEquality = operation === 'matches' ? testMatches : testDiffers;\r\n\r\n        scope.$watch(() => {\r\n            const evalResult = scope.$eval(passwordField);\r\n            return [evalResult, ngModelCtrl.$viewValue];\r\n        }, (values) => {\r\n            const [passwordInputText, equalityPasswordInputText] = values;\r\n\r\n            let equality = true;\r\n            if (passwordInputText && equalityPasswordInputText) {\r\n                equality = testEquality(passwordInputText, equalityPasswordInputText) ||\r\n                    !!inputCtrl.addErrorMessage(errorMessage);\r\n            }\r\n            ngModelCtrl.$setValidity(operation, equality);\r\n        }, true);\r\n    }\r\n\r\n    function testMatches(firstValue, secondValue) {\r\n        return firstValue === secondValue;\r\n    }\r\n\r\n    function testDiffers(firstValue, secondValue) {\r\n        return firstValue !== secondValue;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}