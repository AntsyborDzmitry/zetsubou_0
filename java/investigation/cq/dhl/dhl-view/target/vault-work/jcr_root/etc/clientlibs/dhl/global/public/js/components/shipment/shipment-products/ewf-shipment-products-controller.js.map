{"version":3,"sources":["components/shipment/shipment-products/ewf-shipment-products-controller.js"],"names":[],"mappings":"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","file":"components/shipment/shipment-products/ewf-shipment-products-controller.js","sourcesContent":["import ewf from 'ewf';\r\nimport EwfShipmentStepBaseController from './../ewf-shipment-step-base-controller';\r\nimport './../ewf-shipment-service';\r\nimport './shipment-products-service';\r\nimport './shipment-product-presenter-factory';\r\nimport './../../../services/date-time-service';\r\n\r\nEwfShipmentProductsController.prototype = new EwfShipmentStepBaseController('shipment-products');\r\nEwfShipmentProductsController.$inject = [\r\n    '$scope',\r\n    '$filter',\r\n    '$timeout',\r\n    '$document',\r\n    'shipmentService',\r\n    'shipmentProductsService',\r\n    'shipmentProductPresenterFactory',\r\n    'nlsService',\r\n    'dateTimeService'\r\n];\r\n\r\newf.controller('EwfShipmentProductsController', EwfShipmentProductsController);\r\nexport default function EwfShipmentProductsController(\r\n    $scope,\r\n    $filter,\r\n    $timeout,\r\n    $document,\r\n    shipmentService,\r\n    shipmentProductsService,\r\n    shipmentProductPresenterFactory,\r\n    nlsService,\r\n    dateTimeService\r\n) {\r\n    // view model\r\n    const vm = this;\r\n\r\n    const DATE_FORMAT = 'yyyy-MM-dd';\r\n    const DATE_FORMAT_FULL = 'yyyy-MM-ddTHH:mm:ss.sss';\r\n    const DATE_FORMAT_HOURS = 'HH:mm';\r\n    const DATE_FORMAT_ESTIMATE = 'MMM dd, y, h:mm a';\r\n    const PREVIEW_COUNT = 6;\r\n    const MAX_SHIPMENT_INTERVAL = 90;\r\n\r\n    // properties\r\n    Object.assign(vm, {\r\n        shipmentDates: [],\r\n        shipmentTimeZone: null,\r\n        userTimeZone: null,\r\n        products: [],\r\n        productsOrigin: [],\r\n        activeDate: null,\r\n        selectedProduct: null,\r\n        disclaimerVisible: false,\r\n        visibleDetailsIndex: null,\r\n        isFasterMessageShown: false,\r\n        timeMask: '',\r\n        shipmentEstimateMessage: '',\r\n\r\n        disabledDates: [],\r\n        enabledDates: [],\r\n        disabledDays: [],\r\n        timeZoneOffset: null,\r\n        favoriteProduct: '',\r\n\r\n        calendarSelectedDate: null,\r\n        dctErrorMessageShown: false,\r\n        dctNotFoundMessageShown: false,\r\n\r\n        // methods\r\n        onInit,\r\n        loadShipmentDates,\r\n        generateShipmentDates,\r\n        addWatchers,\r\n        onEditClick,\r\n        onEdit,\r\n        displayProductsByDate,\r\n        selectProduct,\r\n        showDisclaimer,\r\n        toggleDetails,\r\n        isDetailsVisible,\r\n        getCurrentFastestProductName,\r\n        getFasterMessageTranslation,\r\n        openCalendar,\r\n        formatShipmentDate,\r\n        isDateDisabled,\r\n        normalizeDate,\r\n        datesEquals,\r\n        getMinDate,\r\n        formatDateFull,\r\n        updateShipmentEstimateMessage,\r\n        countMaxDate,\r\n        getFavoriteProduct,\r\n        formatShipmentMonth,\r\n        loadShipmentData\r\n    });\r\n\r\n    function onInit() {\r\n        initLocalizedTimeMask();\r\n\r\n        vm.userTimeZone = formatTZOffsetToStrTZ(-(new Date().getTimezoneOffset() * 60 * 1000));\r\n        vm.maxShipmentDate = vm.countMaxDate(new Date(), MAX_SHIPMENT_INTERVAL);\r\n\r\n        vm.addWatchers();\r\n        vm.updateShipmentEstimateMessage(new Date());\r\n        nlsService.getDictionary('datetime');\r\n    }\r\n\r\n    function countMaxDate(date, interval) {\r\n        date.setDate(date.getDate() + interval);\r\n        return date;\r\n    }\r\n\r\n    function addWatchers() {\r\n        $scope.$watch(() => {\r\n            return vm.calendarOpened;\r\n        }, onCalendarOpenedChanged);\r\n\r\n        $scope.$watch(() => {\r\n            return vm.calendarSelectedDate;\r\n        }, onCalendarSelectedDateChanged);\r\n    }\r\n\r\n    function initLocalizedTimeMask() {\r\n        vm.timeMask = nlsService.getTranslationSync('shipment.shipment_products_delivery_by_time_mask');\r\n    }\r\n\r\n    function onCalendarOpenedChanged(value) {\r\n        if (value) {\r\n            $document.bind('click', closeCalendar);\r\n        } else {\r\n            $document.unbind('click', closeCalendar);\r\n        }\r\n    }\r\n\r\n    function onCalendarSelectedDateChanged(date) {\r\n        if (date) {\r\n            let realDate = date;\r\n            let alreadyAdded = vm.shipmentDates.find((dt) => datesEquals(realDate, dt));\r\n            if (alreadyAdded) {\r\n                realDate = alreadyAdded;\r\n            } else {\r\n                vm.shipmentDates[PREVIEW_COUNT] = realDate;\r\n            }\r\n            vm.displayProductsByDate(realDate);\r\n            vm.calendarOpened = false;\r\n        }\r\n    }\r\n\r\n    function loadShipmentDates() {\r\n        shipmentProductsService.getShipmentDates(\r\n            shipmentService.getShipmentCountry(),\r\n            shipmentService.getShipmentPostCode(),\r\n            shipmentService.getShipmentCityName()\r\n        )\r\n            .then((data) => {\r\n                const dateSelectedFromCalendar = vm.shipmentDates && vm.shipmentDates[PREVIEW_COUNT];\r\n\r\n                vm.disabledDays = data.disabledDays || [];\r\n                vm.shipmentTimeZoneOffset = data.timeZoneOffset;\r\n                vm.shipmentTimeZone = formatTZOffsetToStrTZ(data.timeZoneOffset);//date.timeZone;\r\n                vm.disabledDates = data.disabledDates || [];\r\n                vm.enabledDates = data.enabledDates || [];\r\n\r\n                vm.shipmentDates = vm.generateShipmentDates(PREVIEW_COUNT);\r\n\r\n                if (dateSelectedFromCalendar) {\r\n                    vm.shipmentDates.push(dateSelectedFromCalendar);\r\n                }\r\n\r\n                vm.displayProductsByDate(vm.shipmentDates && (vm.activeDate || vm.shipmentDates[0]));\r\n            });\r\n    }\r\n\r\n    function formatTZOffsetToStrTZ(timezoneOffset = 0) {\r\n        let date = new Date(Math.abs(timezoneOffset));\r\n        date.setTime(date.getTime() + date.getTimezoneOffset() / 60 * 3600000);\r\n        let strTime = $filter('date')(date, DATE_FORMAT_HOURS);\r\n        return timezoneOffset < 0\r\n            ? `-${strTime}`\r\n            : `+${strTime}`;\r\n    }\r\n\r\n    function getMinDate() {\r\n        return vm.shipmentDates.length && vm.shipmentDates[0];\r\n    }\r\n\r\n    function updateShipmentEstimateMessage(date) {\r\n        let message = nlsService.getTranslationSync('shipment.shipment_rate_estimate_message');\r\n        let formattedDate = $filter('date')(new Date(date), DATE_FORMAT_ESTIMATE);\r\n\r\n        vm.shipmentEstimateMessage = message.replace('{date}', formattedDate);\r\n    }\r\n\r\n    function generateShipmentDates(count = 0) {\r\n        const dates = [];\r\n\r\n        for (let i = 0, j = 0; i < count; ++j) {\r\n            let date = new Date();\r\n            date.setDate(date.getDate() + j);\r\n            date = normalizeDate(date);\r\n\r\n            if (!isDateDisabled(date, null, false)) {\r\n                i++;\r\n                dates.push(date);\r\n            }\r\n        }\r\n\r\n        return dates;\r\n    }\r\n\r\n    function normalizeDate(date) {\r\n        return dateTimeService.normalizeDate(date, vm.shipmentTimeZoneOffset);\r\n    }\r\n\r\n    function datesEquals(date1, date2) {\r\n        let fullDate1 = date1;\r\n        if (fullDate1 instanceof Date) {\r\n            fullDate1 = formatDate(fullDate1);\r\n        }\r\n\r\n        let fullDate2 = date2;\r\n        if (fullDate2 instanceof Date) {\r\n            fullDate2 = formatDate(fullDate2);\r\n        }\r\n\r\n        return getDateFromFullDate(fullDate1) === getDateFromFullDate(fullDate2);\r\n    }\r\n\r\n    function getDateFromFullDate(fullDate) {\r\n        return fullDate.substring(0, DATE_FORMAT.length);\r\n    }\r\n\r\n    function formatDate(date, format = DATE_FORMAT) {\r\n        return $filter('date')(date, format);\r\n    }\r\n\r\n    function formatDateFull(date) {\r\n        return formatDate(date, DATE_FORMAT_FULL) + vm.shipmentTimeZone;\r\n    }\r\n\r\n    function nullifyTime(date) {\r\n        const dateWithoutTime = new Date(date);\r\n        dateWithoutTime.setHours(0);\r\n        dateWithoutTime.setMinutes(0);\r\n        dateWithoutTime.setSeconds(0);\r\n        dateWithoutTime.setMilliseconds(0);\r\n        return dateWithoutTime;\r\n    }\r\n\r\n    function openCalendar() {\r\n        $timeout(() => {\r\n            vm.calendarOpened = true;\r\n        }, 100);\r\n    }\r\n\r\n    function closeCalendar() {\r\n        $scope.$apply(() => {\r\n            vm.calendarOpened = false;\r\n        });\r\n    }\r\n\r\n    function isDateDisabled(date, mode, normalize) {\r\n        if (vm.enabledDates.some((dt) => datesEquals(date, dt))) {\r\n            return false;\r\n        }\r\n\r\n        return (date > vm.maxShipmentDate)\r\n            || vm.disabledDates.some((dt) => datesEquals(date, dt))\r\n            || vm.disabledDays.some((day) => {\r\n                const normalizedDate = normalize ? normalizeDate(date) : date;\r\n                return normalizedDate.getDay() === (day - 1);\r\n            });\r\n    }\r\n\r\n    function selectProduct(product, index) {\r\n        const productOrigin = vm.productsOrigin[index];\r\n        shipmentService.setShipmentProduct(productOrigin);\r\n        shipmentService.setShipmentDate(vm.formatDateFull(nullifyTime(vm.activeDate)));\r\n        vm.selectedProduct = product;\r\n        vm.nextCallback();\r\n    }\r\n\r\n    function displayProductsByDate(date) {\r\n        vm.activeDate = date;\r\n        vm.products = [];\r\n        vm.toggleDetails(null);\r\n        vm.dctErrorMessageShown = false;\r\n        vm.dctNotFoundMessageShown = false;\r\n\r\n        const formattedDate = formatDateFull(nullifyTime(date));\r\n        shipmentProductsService.getProductsByDate(formattedDate, shipmentService.getQuotesRequestData(date))\r\n            .then((products) => {\r\n                vm.productsOrigin = products;\r\n                if (products) {\r\n                    vm.products = applyProductPresenter(products);\r\n                } else {\r\n                    vm.dctNotFoundMessageShown = true;\r\n                }\r\n            })\r\n            .catch((response) => {\r\n                vm.productsOrigin = [];\r\n                vm.products = [];\r\n                if (response.status === 404) {\r\n                    vm.dctNotFoundMessageShown = true;\r\n                } else if (response.status >= 400) {\r\n                    vm.dctErrorMessageShown = true;\r\n                }\r\n            });\r\n    }\r\n\r\n    function applyProductPresenter(products) {\r\n        return products.map((prod) => shipmentProductPresenterFactory.createProductPresenter(prod, vm.userTimeZone));\r\n    }\r\n\r\n    function onEditClick() {\r\n        vm.editCallback();\r\n    }\r\n\r\n    function onEdit() {\r\n        vm.disclaimerVisible = false;\r\n        shipmentProductsService.clearProductsCache();\r\n        vm.loadShipmentDates();\r\n        if (vm.activeDate) {\r\n            vm.displayProductsByDate(vm.activeDate);\r\n        }\r\n        vm.getFavoriteProduct();\r\n    }\r\n\r\n    function showDisclaimer() {\r\n        vm.disclaimerVisible = true;\r\n    }\r\n\r\n    function toggleDetails(index) {\r\n        if (vm.visibleDetailsIndex === index) {\r\n            vm.visibleDetailsIndex = null;\r\n        } else {\r\n            vm.visibleDetailsIndex = index;\r\n        }\r\n    }\r\n\r\n    function isDetailsVisible(index) {\r\n        return (vm.visibleDetailsIndex === index);\r\n    }\r\n\r\n    function getCurrentFastestProductName() {\r\n        if (vm.products && vm.products[0]) {\r\n            return vm.products[0].name;\r\n        }\r\n    }\r\n\r\n    function getFasterMessageTranslation() {\r\n        const productName = vm.getCurrentFastestProductName();\r\n        const message = nlsService.getTranslationSync('shipment.shipment_products_get_it_there_faster_message');\r\n        return message.replace('{product_name}', productName);\r\n    }\r\n\r\n    function formatShipmentDate(date) {\r\n        return dateTimeService.getFormattedDay(date, vm.shipmentTimeZoneOffset);\r\n    }\r\n\r\n    function getFavoriteProduct() {\r\n        return shipmentProductsService.getFavoriteProduct()\r\n            .then((productCode) => {\r\n                vm.favoriteProduct = productCode;\r\n            })\r\n            .catch(() => {\r\n                vm.favoriteProduct = '';\r\n            });\r\n    }\r\n\r\n    function formatShipmentMonth(date) {\r\n        return dateTimeService.getLocalizedMonth(date);\r\n    }\r\n\r\n    function loadShipmentData(data) {\r\n        Object.assign(vm, shipmentService.getShipmentProductsModelData(data));\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}