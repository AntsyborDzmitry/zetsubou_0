{"version":3,"sources":["components/packaging-settings/packaging-defaults/packaging-defaults-controller.js"],"names":[],"mappings":"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","file":"components/packaging-settings/packaging-defaults/packaging-defaults-controller.js","sourcesContent":["PackagingDefaultsController.$inject = ['profileShipmentService'];\r\n\r\nexport default function PackagingDefaultsController(profileShipmentService) {\r\n    const vm = this;\r\n\r\n    const PACKAGE_TYPE = {\r\n        DOCUMENT: 'DOCUMENT',\r\n        PACKAGE: 'PACKAGE',\r\n        BOTH: 'BOTH'\r\n    };\r\n\r\n    const emptyModel = {\r\n        addToPieces: false,\r\n        dhlShippingDocuments: [],\r\n        dhlShippingPackages: [],\r\n        distributeWeight: false,\r\n        pallet: false,\r\n        selectedShippingDocumentKey: null,\r\n        selectedShippingPackageKey: null,\r\n        shippingPackagesNumber: null\r\n    };\r\n\r\n    const documentByKey = (shippingDocument) => shippingDocument.key === vm.defaults.selectedShippingDocumentKey;\r\n    const packageByKey = (shippingPackage) => shippingPackage.key === vm.defaults.selectedShippingPackageKey;\r\n    const filterDocument = (item) => item.type === PACKAGE_TYPE.DOCUMENT || item.type === PACKAGE_TYPE.BOTH;\r\n    const filterPackage = (item) => item.type === PACKAGE_TYPE.PACKAGE || item.type === PACKAGE_TYPE.BOTH;\r\n\r\n    let isEditModeFlag = false;\r\n    let defaultsBackup = null;\r\n\r\n    let cachedGridData = null;\r\n    let cachedAvailableDocuments = [];\r\n    let cachedAvailablePackages = [];\r\n\r\n    Object.assign(vm, {\r\n        init,\r\n\r\n        isEditMode,\r\n        setEditMode,\r\n\r\n        isViewMode,\r\n\r\n        applyChanges,\r\n        cancelChanges,\r\n\r\n        defaults: angular.copy(emptyModel),\r\n\r\n        getSelectedDocumentName,\r\n        getSelectedPackageName,\r\n\r\n        mapOptionKey,\r\n\r\n        getAvailableDocuments,\r\n        getAvailablePackages\r\n    });\r\n\r\n    function init() {\r\n        profileShipmentService.getPackagesData()\r\n            .then(applyData);\r\n    }\r\n\r\n    function applyData(data) {\r\n        vm.defaults = data;\r\n\r\n        cachedGridData = null;\r\n    }\r\n\r\n    function isEditMode() {\r\n        return isEditModeFlag;\r\n    }\r\n\r\n    function setEditMode() {\r\n        defaultsBackup = angular.copy(vm.defaults);\r\n\r\n        isEditModeFlag = true;\r\n    }\r\n\r\n    function isViewMode() {\r\n        return !isEditModeFlag;\r\n    }\r\n\r\n    function setViewMode() {\r\n        isEditModeFlag = false;\r\n    }\r\n\r\n    function mapOptionKey(option) {\r\n        if (option) {\r\n            if (angular.isObject(option) && option.key !== undefined) {\r\n                return option.key;\r\n            }\r\n\r\n            return option;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function applyChanges(packagingDefaultsForm, ewfFormCtrl) {\r\n        ewfFormCtrl.ewfValidation();\r\n\r\n        if (packagingDefaultsForm.$valid) {\r\n            profileShipmentService.updatePackagesData(vm.defaults)\r\n                .then(applyData)\r\n                .then(setViewMode);\r\n        }\r\n    }\r\n\r\n    function cancelChanges() {\r\n        applyData(defaultsBackup);\r\n\r\n        setViewMode();\r\n    }\r\n\r\n    function mapUserData(gridData) {\r\n        return gridData.map((item) => ({\r\n            key: item.key,\r\n            name: item.nickName,\r\n            type: item.packagingType\r\n        }));\r\n    }\r\n\r\n    function cacheData(gridData) {\r\n        if (angular.equals(gridData, cachedGridData)) {\r\n            return;\r\n        }\r\n\r\n        cachedGridData = angular.copy(gridData);\r\n\r\n        const userData = mapUserData(cachedGridData);\r\n        const userDocuments = userData.filter(filterDocument);\r\n        const userPackages = userData.filter(filterPackage);\r\n\r\n        cachedAvailableDocuments = vm.defaults.dhlShippingDocuments.concat(userDocuments);\r\n        cachedAvailablePackages = vm.defaults.dhlShippingPackages.concat(userPackages);\r\n    }\r\n\r\n    function getAvailableDocuments(gridData) {\r\n        cacheData(gridData);\r\n\r\n        return cachedAvailableDocuments;\r\n    }\r\n\r\n    function getAvailablePackages(gridData) {\r\n        cacheData(gridData);\r\n\r\n        return cachedAvailablePackages;\r\n    }\r\n\r\n    function getSelectedDocumentName(gridData) {\r\n        const selectedDocument = getAvailableDocuments(gridData).find(documentByKey);\r\n\r\n        return selectedDocument && selectedDocument.name;\r\n    }\r\n\r\n    function getSelectedPackageName(gridData) {\r\n        const selectedPackage = getAvailablePackages(gridData).find(packageByKey);\r\n\r\n        return selectedPackage && selectedPackage.name;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}