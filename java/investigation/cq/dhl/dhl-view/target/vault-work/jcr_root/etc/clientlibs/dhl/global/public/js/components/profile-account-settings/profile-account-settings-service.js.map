{"version":3,"sources":["components/profile-account-settings/profile-account-settings-service.js"],"names":[],"mappings":";;;qBAOwB,6BAA6B;;;;;;AALrD,qBAAI,OAAO,CAAC,+BAA+B,EAAE,6BAA6B,CAAC,CAAC;;AAE5E,iCAA6B,CAAC,OAAO,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;;;;AAGvD,aAAS,6BAA6B,CAAC,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE;;AAEzE,eAAO;AACH,oCAAwB,EAAxB,wBAAwB;AACxB,uCAA2B,EAA3B,2BAA2B;SAC9B,CAAC;;AAEF,iBAAS,wBAAwB,GAAG;AAChC,mBAAO,KAAK,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAC/C,IAAI,CAAC,UAAC,QAAQ,EAAK;;AAEhB,0BAAU,CAAC,GAAG,oCAAkC,QAAQ,CAAC,IAAI,CAAG,CAAC;AACjE,oBAAM,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;AAClD,oBAAM,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;AACtD,oBAAM,qBAAqB,GAAG,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC;AAClE,oBAAM,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;AACtD,uBAAO,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;AAC/B,uBAAO,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;AACrC,uBAAO,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC;AAC3C,uBAAO,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;AACrC,uBAAO;AACH,qCAAiB,EAAjB,iBAAiB;AACjB,mCAAe,EAAf,eAAe;AACf,yCAAqB,EAArB,qBAAqB;AACrB,mCAAe,EAAf,eAAe;AACf,uCAAmB,EAAE,QAAQ,CAAC,IAAI;iBACrC,CAAC;aACL,CAAC,SACI,CAAC,UAAC,QAAQ,EAAK;AACjB,oBAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC3B,0BAAU,CAAC,KAAK,CAAC,oCAAoC,GAAG,IAAI,CAAC,CAAC;AAC9D,kBAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACnB,CAAC,CAAC;SACV;;AAED,iBAAS,2BAA2B,CAAC,mBAAmB,EAAE,eAAe,EAAE;;AAEvE,kBAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,UAAC,SAAS,EAAK;AACpD,mCAAmB,CAAC,SAAS,CAAC,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;aAC5E,CAAC,CAAC;AACH,+BAAmB,CAAC,eAAe,GAAG,eAAe,CAAC;AACtD,mBAAO,KAAK,CAAC,IAAI,CAAC,yCAAyC,EAAE,mBAAmB,CAAC,CAC5E,IAAI,CAAC,UAAC,QAAQ,EAAK;;AAEhB,uBAAO,QAAQ,CAAC,IAAI,CAAC;aACxB,CAAC,SACI,CAAC,UAAC,QAAQ,EAAK;AACjB,oBAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC3B,0BAAU,CAAC,KAAK,CAAC,oCAAoC,GAAG,IAAI,CAAC,CAAC;AAC9D,uBAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC1B,CAAC,CAAC;SACV;KACJ","file":"components/profile-account-settings/profile-account-settings-service.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.service('profileAccountSettingsService', profileAccountSettingsService);\r\n\r\nprofileAccountSettingsService.$inject = ['$http', '$q', 'logService'];\r\n\r\n// TODO: add jsdoc\r\nexport default function profileAccountSettingsService($http, $q, logService) {\r\n\r\n    return {\r\n        getMyDhlAccountsDefaults,\r\n        updateMyDhlAccountsDefaults\r\n    };\r\n\r\n    function getMyDhlAccountsDefaults() {\r\n        return $http.get('/api/myprofile/accounts/defaults')\r\n            .then((response) => {\r\n                // TODO: check 'data' validity\r\n                logService.log(`Default accounts from server: ${response.data}`);\r\n                const availableAccounts = response.data.available;\r\n                const maskDhlAccounts = response.data.maskDhlAccounts;\r\n                const dutiesAndTaxesOptions = response.data.dutiesAndTaxesOptions;\r\n                const shipmentOptions = response.data.shipmentOptions;\r\n                delete response.data.available;\r\n                delete response.data.maskDhlAccounts;\r\n                delete response.data.dutiesAndTaxesOptions;\r\n                delete response.data.shipmentOptions;\r\n                return {\r\n                    availableAccounts,\r\n                    maskDhlAccounts,\r\n                    dutiesAndTaxesOptions,\r\n                    shipmentOptions,\r\n                    selectedAccountInfo: response.data\r\n                };\r\n            })\r\n            .catch((response) => {\r\n                const data = response.data;\r\n                logService.error('LangSelector failed to get langs! ' + data);\r\n                $q.reject(data);\r\n            });\r\n    }\r\n\r\n    function updateMyDhlAccountsDefaults(selectedAccountInfo, maskDhlAccounts) {\r\n        //reducing amount of posting data\r\n        Object.keys(selectedAccountInfo).forEach((selection) => {\r\n            selectedAccountInfo[selection] = selectedAccountInfo[selection].data.key;\r\n        });\r\n        selectedAccountInfo.maskDhlAccounts = maskDhlAccounts;\r\n        return $http.post('/api/myprofile/accounts/defaults/modify', selectedAccountInfo)\r\n            .then((response) => {\r\n                // TODO: check 'data' validity\r\n                return response.data;\r\n            })\r\n            .catch((response) => {\r\n                const data = response.data;\r\n                logService.error('LangSelector failed to get langs! ' + data);\r\n                return $q.reject(data);\r\n            });\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}