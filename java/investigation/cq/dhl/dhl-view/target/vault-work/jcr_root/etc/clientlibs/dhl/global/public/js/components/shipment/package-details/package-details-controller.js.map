{"version":3,"sources":["components/shipment/package-details/package-details-controller.js"],"names":[],"mappings":"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","file":"components/shipment/package-details/package-details-controller.js","sourcesContent":["import '../../../directives/ewf-input/ewf-input-directive';\r\nimport '../../../directives/ewf-validate/ewf-validate-pattern-directive';\r\nimport '../../../services/user-service';\r\nimport '../../../services/confirmation/confirmation-dialog-service';\r\nimport '../../shipment/ewf-shipment-service';\r\nimport './package-details-service';\r\nimport EwfShipmentStepBaseController from './../../shipment/ewf-shipment-step-base-controller';\r\nimport angular from 'angular';\r\n\r\nPackageDetailsController.$inject = ['$timeout',\r\n                                    '$filter',\r\n                                    'nlsService',\r\n                                    'userService',\r\n                                    'navigationService',\r\n                                    'packageDetailsService',\r\n                                    'shipmentService',\r\n                                    'confirmationDialogService'];\r\n\r\nPackageDetailsController.prototype = new EwfShipmentStepBaseController('package-details');\r\n\r\nexport default function PackageDetailsController($timeout,\r\n                                                 $filter,\r\n                                                 nlsService,\r\n                                                 userService,\r\n                                                 navigationService,\r\n                                                 packageDetailsService,\r\n                                                 shipmentService,\r\n                                                 confirmationDialogService) {\r\n    const vm = this;\r\n    let uomConverter;\r\n    let rowId = 0;\r\n    let isSavingCustomPackaging = false;\r\n    let confirmationSaveMessage;\r\n    let fixedWeightMsg = '';\r\n    let shipperCountrySom, weightConvertionRate;\r\n    const MAX_TOTAL_QUANTITY = 999;\r\n    let isShipmentLoaded = false;\r\n\r\n    Object.assign(vm, {\r\n        PACKAGING_TYPES: {\r\n            DHL: 'DHL',\r\n            CUSTOM: 'CUSTOM',\r\n            USER_PROFILE: 'USER_PROFILE'\r\n        },\r\n        UNITS: {\r\n            METRIC: 'METRIC',\r\n            IMPERIAL: 'IMPERIAL'\r\n        },\r\n        PATTERNS: {\r\n            quantity: '(^[1-9][0-9]*$)|(?:^$)',\r\n            dimension: '^(([1-9]+\\\\d*)|(\\\\d+\\\\.\\\\d+))$|^$'\r\n        },\r\n        formErrors: [],\r\n        packagingList: [],\r\n        packagesRows: [],\r\n        totalWeight: 0,\r\n        totalQuantity: 0,\r\n        maxTotalWeight: 0,\r\n        maxTotalQuantity: MAX_TOTAL_QUANTITY,\r\n        uomKeys: {\r\n            dimensions: {\r\n                METRIC: 'shipment.package_details_cm',\r\n                IMPERIAL: 'shipment.package_details_in'\r\n            },\r\n            weight: {\r\n                METRIC: 'shipment.package_details_kg',\r\n                IMPERIAL: 'shipment.package_details_lb'\r\n            }\r\n        },\r\n        generator: {\r\n            weight: '',\r\n            piecesAmount: ''\r\n        },\r\n\r\n        onInit,\r\n        onEdit,\r\n        addAnotherPackage,\r\n        deletePackageRow,\r\n        pickPackage,\r\n        hideRowPackagingList,\r\n        copyPackageRow,\r\n        isTotalWeightValid,\r\n        isTotalQuantityValid,\r\n        isConvertedValuesVisible,\r\n        onNextClick,\r\n        getPackageIconUrl,\r\n        onEditClick,\r\n        onKnownDimensionsChange,\r\n        saveCustomPackaging,\r\n        handleSaveAction,\r\n        updateSaveButtonState,\r\n        triggerPackagingListVisibility,\r\n        filteringPackagingList,\r\n        generateRowsWithPredefinedWeight,\r\n        generateFixedWeightMsg,\r\n        showReadOnlyDimensions,\r\n        calcGeneratorMaxWeight,\r\n        calcGeneratorMaxPiecesAmount,\r\n        isQuantityCorrectForCopy,\r\n        getCurrentIncompleteData,\r\n        loadShipmentData\r\n    });\r\n\r\n    function onInit() {\r\n        vm.initialized = true;\r\n        vm.isAuthorized = userService.isAuthorized();\r\n\r\n        const countrySomParameters = shipmentService.getCountrySomParameters();\r\n        shipperCountrySom = countrySomParameters.shipperCountrySom;\r\n        vm.userProfileCountrySom = countrySomParameters.userProfileCountrySom || countrySomParameters.shipperCountrySom;\r\n\r\n        weightConvertionRate = countrySomParameters.weightConvertionRate;\r\n        vm.weightConvertionReverseRate = 1 / weightConvertionRate;\r\n        vm.dimensionConvertionRate = countrySomParameters.dimensionConvertionRate;\r\n        vm.dimensionConvertionReverseRate = 1 / vm.dimensionConvertionRate;\r\n\r\n        vm.shipperCountryConversionPrecision = countrySomParameters.shipperCountryConversionPrecision;\r\n        vm.userProfileCountryConversionPrecision = countrySomParameters.userProfileCountryConversionPrecision;\r\n\r\n        vm.somAreDifferent = shipperCountrySom !== vm.userProfileCountrySom;\r\n        uomConverter = $filter('convertUomToOpposite');\r\n        setUomParams();\r\n\r\n        if (isShipmentLoaded) {\r\n            packageDetailsService.getPackagingDetails(vm.shipmentType, vm.shipmentCountry)\r\n                .then((packagingDetails) => {\r\n                    vm.packagingList = packagingDetails.packagingList;\r\n                    generatePackagesForLoadedShipment();\r\n                    translateCustomPackagingName();\r\n                    isShipmentLoaded = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    function generatePackagesForLoadedShipment() {\r\n        const customPackagingMsg = nlsService.getTranslationSync('shipment.package_details_own_packaging_label');\r\n        vm.packagesRows.forEach((row) => {\r\n            const packageForRow = vm.packagingList.find((item) => item.id && item.id === row.packageId);\r\n\r\n            if (packageForRow) {\r\n                packageForRow.weight = row.weight;\r\n                mapPackagingAttributes(row, packageForRow);\r\n                row.packagingName = packageForRow.name;\r\n            } else {\r\n                mapPackagingAttributes(row, row);\r\n                row.packagingName = customPackagingMsg;\r\n            }\r\n        });\r\n    }\r\n\r\n    function setUomParams() {\r\n        vm.userProfileWeightUomKey = vm.uomKeys.weight[vm.userProfileCountrySom];\r\n        vm.userProfileDimensionsUomKey = vm.uomKeys.dimensions[vm.userProfileCountrySom];\r\n\r\n        vm.shipperCountryWeightUomKey = vm.uomKeys.weight[shipperCountrySom];\r\n        vm.shipperCountryDimensionsUomKey = vm.uomKeys.dimensions[shipperCountrySom];\r\n    }\r\n\r\n    function getPackagingDetails(shipmentType, shipmentCountry) {\r\n        packageDetailsService.getPackagingDetails(shipmentType, shipmentCountry)\r\n            .then(onGetPackagingDetails);\r\n    }\r\n\r\n    function onGetPackagingDetails(response) {\r\n        vm.packagingList = response.packagingList;\r\n        vm.maxTotalWeight = getMaxTotalWeight(response.maxTotalWeight, response.maxTotalWeightSom);\r\n        vm.maxTotalQuantity = response.maxTotalQuantity || MAX_TOTAL_QUANTITY;\r\n        vm.packageGeneratorOn = response.packageGeneratorOn;\r\n        generatePackagingRows(response.defaultPiecesAmount || 1);\r\n        translateCustomPackagingName();\r\n    }\r\n\r\n    function translateCustomPackagingName() {\r\n        const customPackaging = vm.packagingList.find((packaging) =>\r\n            packaging.packageType === vm.PACKAGING_TYPES.CUSTOM\r\n        );\r\n        if (customPackaging) {\r\n            customPackaging.name = nlsService.getTranslationSync(customPackaging.name);\r\n        }\r\n    }\r\n\r\n    function getMaxTotalWeight(maxTotalWeight, maxTotalWeightSom) {\r\n        let total = maxTotalWeight;\r\n        if (maxTotalWeightSom !== vm.userProfileCountrySom) {\r\n            total = uomConverter(maxTotalWeight, weightConvertionRate, vm.userProfileCountryConversionPrecision);\r\n        }\r\n        return total;\r\n    }\r\n\r\n    function calcGeneratorMaxWeight() {\r\n        return (vm.maxTotalWeight - vm.totalWeight) / (vm.generator.piecesAmount || 1);\r\n    }\r\n\r\n    function calcGeneratorMaxPiecesAmount() {\r\n        return vm.maxTotalQuantity - vm.totalQuantity;\r\n    }\r\n\r\n    function generatePackagingRow() {\r\n        return {\r\n            rowId: ++rowId,\r\n            isPackagesListVisible: false,\r\n            isFilteredPackagingListNotEmpty: true,\r\n            packageId: '',\r\n            packagingName: '',\r\n            packagingNameOriginal: '',\r\n            ownPackage: true,\r\n            quantity: 1,\r\n            weight: '',\r\n            weightOriginal: '',\r\n            maxWeight: '',\r\n            unit: '',\r\n            reference: '',\r\n            dimensionsEditable: true,\r\n            packageType: vm.PACKAGING_TYPES.USER_PROFILE,\r\n            width: '',\r\n            height: '',\r\n            length: ''\r\n        };\r\n    }\r\n\r\n    function generatePackagingRows(piecesAmount) {\r\n        const defaultPackaging = vm.packagingList.find((packaging) => packaging.defaultPackaging);\r\n        while (vm.packagesRows.length < piecesAmount) {\r\n            const row = generatePackagingRow();\r\n            if (defaultPackaging) {\r\n                vm.pickPackage(row, defaultPackaging);\r\n            }\r\n            vm.packagesRows.push(row);\r\n        }\r\n    }\r\n\r\n    function addAnotherPackage() {\r\n        vm.packagesRows.push(generatePackagingRow());\r\n    }\r\n\r\n    function deletePackageRow(row) {\r\n        const position = vm.packagesRows.indexOf(row);\r\n        vm.packagesRows.splice(position, 1);\r\n    }\r\n\r\n    function copyPackageRow(row) {\r\n        let copiedRow = angular.copy(row);\r\n        copiedRow.rowId = ++rowId;\r\n        copiedRow.packagingName = '';\r\n        vm.packagesRows.splice(vm.packagesRows.indexOf(row) + 1, 0, copiedRow);\r\n    }\r\n\r\n    function pickPackage(row, chosenPackage) {\r\n        row.packageId = chosenPackage.id;\r\n        row.packagingName = chosenPackage.name;\r\n        row.packagingNameOriginal = chosenPackage.name;\r\n        row.packageType = chosenPackage.packageType;\r\n        row.maxQuantity = chosenPackage.maxQuantity;\r\n        row.fixedWeight = chosenPackage.fixedWeight;\r\n        row.dimensionsEditable = row.packageType === vm.PACKAGING_TYPES.USER_PROFILE;\r\n        row.isPackagesListVisible = false;\r\n\r\n        mapPackagingAttributes(row, chosenPackage);\r\n    }\r\n\r\n    function mapPackagingAttributes(row, chosenPackage) {\r\n        if (chosenPackage.units !== vm.userProfileCountrySom && row.packageType !== vm.PACKAGING_TYPES.CUSTOM) {\r\n            invokeAfterTimeout(() => {\r\n                row.weight = row.weightOriginal = uomConverter(\r\n                    chosenPackage.weight,\r\n                    weightConvertionRate,\r\n                    vm.userProfileCountryConversionPrecision\r\n                );\r\n            });\r\n            row.maxWeight = chosenPackage.maxWeight\r\n                            ? uomConverter(\r\n                                chosenPackage.maxWeight,\r\n                                weightConvertionRate,\r\n                                vm.userProfileCountryConversionPrecision\r\n                            )\r\n                            : '';\r\n            row.width = row.widthOriginal = uomConverter(\r\n                chosenPackage.width,\r\n                vm.dimensionConvertionRate,\r\n                vm.userProfileCountryConversionPrecision\r\n            );\r\n            row.height = row.heightOriginal = uomConverter(\r\n                chosenPackage.height,\r\n                vm.dimensionConvertionRate,\r\n                vm.userProfileCountryConversionPrecision\r\n            );\r\n            row.length = row.lengthOriginal = uomConverter(\r\n                chosenPackage.length,\r\n                vm.dimensionConvertionRate,\r\n                vm.userProfileCountryConversionPrecision\r\n            );\r\n        } else {\r\n            invokeAfterTimeout(() => {\r\n                row.weight = row.weightOriginal = chosenPackage.weight;\r\n            });\r\n            row.maxWeight = chosenPackage.maxWeight ? chosenPackage.maxWeight : '';\r\n            row.width = row.widthOriginal = chosenPackage.width;\r\n            row.height = row.heightOriginal = chosenPackage.height;\r\n            row.length = row.lengthOriginal = chosenPackage.length;\r\n        }\r\n    }\r\n\r\n    function invokeAfterTimeout(setter) {\r\n        $timeout(setter);\r\n    }\r\n\r\n    function hideRowPackagingList(row) {\r\n        row.isPackagesListVisible = false;\r\n        if (row.packageType !== vm.PACKAGING_TYPES.USER_PROFILE && isPackagingNameChanged(row)) {\r\n            convertRowToUserProfilePackagingType(row);\r\n        }\r\n        updateSaveButtonState(row);\r\n    }\r\n\r\n    function convertRowToUserProfilePackagingType(row) {\r\n        row.packageType = vm.PACKAGING_TYPES.USER_PROFILE;\r\n        row.dimensionsEditable = true;\r\n        row.widthOriginal = row.width;\r\n        row.width = '';\r\n        row.heightOriginal = row.height;\r\n        row.height = '';\r\n        row.lengthOriginal = row.length;\r\n        row.length = '';\r\n    }\r\n\r\n    function updateSaveButtonState(row) {\r\n        row.isSaveButtonAvailable = !!row.packagingName &&\r\n                                        !isSavingCustomPackaging &&\r\n                                        row.packageType === vm.PACKAGING_TYPES.USER_PROFILE &&\r\n                                        (isPackagingNameChanged(row) || isPackagingDetailsChanged(row));\r\n        if (row.isSaveButtonAvailable) {\r\n            row.saved = false;\r\n        }\r\n    }\r\n\r\n    function isPackagingDetailsChanged(row) {\r\n        return row.weight !== row.weightOriginal\r\n            || row.width !== row.widthOriginal\r\n            || row.height !== row.heightOriginal\r\n            || row.length !== row.lengthOriginal;\r\n    }\r\n\r\n    function isPackagingNameChanged(row) {\r\n        return row.packagingName !== row.packagingNameOriginal;\r\n    }\r\n\r\n    function isTotalWeightValid() {\r\n        return vm.maxTotalWeight === 0 || vm.totalWeight <= vm.maxTotalWeight;\r\n    }\r\n\r\n    function isTotalQuantityValid() {\r\n        return vm.totalQuantity <= vm.maxTotalQuantity;\r\n    }\r\n\r\n    function isConvertedValuesVisible(row) {\r\n        return vm.somAreDifferent && !!(row.width || row.height || row.length || row.weight);\r\n    }\r\n\r\n    function onNextClick(form, ewfFormCtrl) {\r\n        if (form.$invalid && ewfFormCtrl.ewfValidation()) {\r\n            return;\r\n        }\r\n\r\n        if (vm.packagesRows.length && vm.isTotalWeightValid() && vm.isTotalQuantityValid()) {\r\n            setRowsData();\r\n            shipmentService.setTotalWeight(vm.totalWeight, vm.userProfileWeightUomKey);\r\n            vm.nextCallback();\r\n        }\r\n    }\r\n\r\n    function getCurrentIncompleteData() {\r\n        setRowsData();\r\n    }\r\n\r\n    function setRowsData() {\r\n        let rows = angular.copy(vm.packagesRows);\r\n        rows.forEach((row) => {\r\n            row.unit = shipperCountrySom;\r\n            if (vm.somAreDifferent) {\r\n                row.weight = uomConverter(\r\n                    row.weight,\r\n                    vm.weightConvertionReverseRate,\r\n                    vm.shipperCountryConversionPrecision\r\n                );\r\n                if (row.knownDimensions || row.packageType !== vm.PACKAGING_TYPES.CUSTOM) {\r\n                    row.width = uomConverter(\r\n                        row.width,\r\n                        vm.dimensionConvertionReverseRate,\r\n                        vm.shipperCountryConversionPrecision\r\n                    );\r\n                    row.height = uomConverter(\r\n                        row.height,\r\n                        vm.dimensionConvertionReverseRate,\r\n                        vm.shipperCountryConversionPrecision\r\n                    );\r\n                    row.length = uomConverter(\r\n                        row.length,\r\n                        vm.dimensionConvertionReverseRate,\r\n                        vm.shipperCountryConversionPrecision\r\n                    );\r\n                } else {\r\n                    Object.assign(row, {\r\n                        width: null,\r\n                        height: null,\r\n                        length: null\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        shipmentService.setPackageDetails(rows);\r\n    }\r\n\r\n    function onEditClick() {\r\n        vm.editCallback();\r\n    }\r\n\r\n    function triggerPackagingListVisibility(row) {\r\n        row.isPackagesListVisible = !row.isPackagesListVisible;\r\n    }\r\n\r\n    // TODO: add packaging images to sprite\r\n    function getPackageIconUrl(pkg) {\r\n        let imgUrl = '';\r\n        if (pkg.packageType === vm.PACKAGING_TYPES.DHL) {\r\n            const origin = navigationService.getOriginFromUrl();\r\n            imgUrl = `${origin}/etc/clientlibs/dhl/global/public/img/packaging/${pkg.id}.png`;\r\n        }\r\n        return imgUrl;\r\n    }\r\n\r\n    function onEdit() {\r\n        vm.editModeActive = true;\r\n\r\n        let shipmentDetailsChanged = false;\r\n        const shipmentCountry = shipmentService.getShipmentCountry();\r\n        const shipmentType = shipmentService.getShipmentType();\r\n\r\n        shipmentDetailsChanged = vm.shipmentCountry !== shipmentCountry || vm.shipmentType !== shipmentType;\r\n        vm.shipmentType = shipmentType;\r\n        vm.shipmentCountry = shipmentCountry;\r\n\r\n        if ((!vm.packagingList.length || shipmentDetailsChanged) && !isShipmentLoaded) {\r\n            updatePackagingDetails();\r\n        }\r\n    }\r\n\r\n    function updatePackagingDetails() {\r\n        vm.packagesRows = [];\r\n        getPackagingDetails(vm.shipmentType, vm.shipmentCountry);\r\n    }\r\n\r\n    function onKnownDimensionsChange(row) {\r\n        row.dimensionsEditable = row.knownDimensions;\r\n        if (row.knownDimensions) {\r\n            row.width = '';\r\n            row.height = '';\r\n            row.length = '';\r\n        } else {\r\n            row.width = null;\r\n            row.height = null;\r\n            row.length = null;\r\n        }\r\n    }\r\n\r\n    function handleSaveAction(row, form, ewfFormCtrl) {\r\n        confirmationSaveMessage = confirmationSaveMessage ||\r\n                                  nlsService.getTranslationSync('shipment.package_details_save_confirmation_message');\r\n        if (isSavingCustomPackaging || (form.$invalid && ewfFormCtrl.ewfValidation())) {\r\n            return;\r\n        }\r\n\r\n        const existingPackagingIndex = getExistingPackagingIndex(row.packagingName);\r\n        if (existingPackagingIndex >= 0) {\r\n            confirmationDialogService.showConfirmationDialog(confirmationSaveMessage)\r\n                .then(() => {\r\n                    vm.packagingList.splice(existingPackagingIndex, 1);\r\n                    vm.saveCustomPackaging(row);\r\n                });\r\n        } else {\r\n            vm.saveCustomPackaging(row);\r\n        }\r\n    }\r\n\r\n    function saveCustomPackaging(row) {\r\n        const customPackaging = {\r\n            name: row.packagingName,\r\n            shipmentType: vm.shipmentType,\r\n            width: row.width,\r\n            height: row.height,\r\n            length: row.length,\r\n            weight: row.weight,\r\n            units: vm.userProfileCountrySom,\r\n            packageType: vm.PACKAGING_TYPES.USER_PROFILE\r\n        };\r\n\r\n        isSavingCustomPackaging = true;\r\n        row.saved = true;\r\n\r\n        packageDetailsService.saveCustomPackaging(customPackaging)\r\n            .then((id) => {\r\n                customPackaging.id = id;\r\n                vm.packagingList.splice(1, 0, customPackaging);\r\n                vm.pickPackage(row, customPackaging);\r\n                isSavingCustomPackaging = false;\r\n            });\r\n        row.isSaveButtonAvailable = false;\r\n    }\r\n\r\n    function getExistingPackagingIndex(packagingName) {\r\n        return vm.packagingList.findIndex((packaging) => packaging.name === packagingName);\r\n    }\r\n\r\n    function filteringPackagingList(row) {\r\n        row.isFilteredPackagingListNotEmpty = vm.packagingList.some((item) => item.name.includes(row.packagingName));\r\n    }\r\n\r\n    function generateRowsWithPredefinedWeight(form, ewfFormCtrl) {\r\n        if (form.$invalid && ewfFormCtrl.ewfValidation()) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < vm.generator.piecesAmount; i++) {\r\n            const row = generatePackagingRow();\r\n            row.weight = vm.generator.weight;\r\n            vm.packagesRows.push(row);\r\n        }\r\n    }\r\n\r\n    function showReadOnlyDimensions(row) {\r\n        return !row.dimensionsEditable && !row.fixedWeight && row.packageId !== '';\r\n    }\r\n\r\n    function generateFixedWeightMsg(row) {\r\n        const userProfileWeightUom = nlsService.getTranslationSync(vm.userProfileWeightUomKey);\r\n        const userProfileDimensionUom = nlsService.getTranslationSync(vm.userProfileDimensionsUomKey);\r\n\r\n        fixedWeightMsg =\r\n            fixedWeightMsg || nlsService.getTranslationSync('shipment.package_details_fixed_weight_message');\r\n        return fixedWeightMsg.replace('{weight}', row.weight + userProfileWeightUom)\r\n                             .replace('{width}', row.width + userProfileDimensionUom)\r\n                             .replace('{height}', row.height + userProfileDimensionUom)\r\n                             .replace('{length}', row.length + userProfileDimensionUom);\r\n    }\r\n\r\n    function isQuantityCorrectForCopy(row) {\r\n        const totalQuantityBeforeCopy = $filter('calculateTotal')(vm.packagesRows, 'quantity');\r\n        const lessTotalQuantity = ((parseInt(row.quantity, 10) || 0) + totalQuantityBeforeCopy) <= vm.maxTotalQuantity;\r\n\r\n        return lessTotalQuantity;\r\n    }\r\n\r\n    function loadShipmentData(data) {\r\n        isShipmentLoaded = true;\r\n        Object.assign(vm, shipmentService.getPackageDetailsModelData(data));\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}