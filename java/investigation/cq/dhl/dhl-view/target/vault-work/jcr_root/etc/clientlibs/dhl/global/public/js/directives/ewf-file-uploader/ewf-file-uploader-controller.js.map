{"version":3,"sources":["directives/ewf-file-uploader/ewf-file-uploader-controller.js"],"names":[],"mappings":"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","file":"directives/ewf-file-uploader/ewf-file-uploader-controller.js","sourcesContent":["import ewf from 'ewf';\r\nimport angular from 'angular';\r\nimport './ewf-file-uploader-service';\r\n\r\newf.controller('ewfFileUploaderController', EwfFileUploaderController);\r\n\r\nEwfFileUploaderController.$inject = ['$scope', '$attrs', 'attrsService', 'ewfFileUploaderService'];\r\n\r\nexport default function EwfFileUploaderController($scope, $attrs, attrsService, ewfFileUploaderService) {\r\n    const vm = this;\r\n    const filesToUpload = [];\r\n    const multiFileMode = $attrs.hasOwnProperty('multiFileMode');\r\n\r\n    let submitElements;\r\n\r\n    Object.assign(vm, {\r\n        filesUploaded: false,\r\n        uploadStarted: false,\r\n        uploadProgress: 0,\r\n\r\n        onFilesReadyToUpload,\r\n        onFilesUploaded,\r\n        onProgress,\r\n        onUploadError,\r\n        getFilesList,\r\n        clearFilesList,\r\n        canShowFileList,\r\n        uploadFiles,\r\n        onFormReady\r\n    });\r\n\r\n    function onFilesReadyToUpload(filesList) {\r\n        if (!multiFileMode) {\r\n            filesToUpload.length = 0;\r\n        }\r\n        vm.filesUploaded = false;\r\n        filesToUpload.push(...getFilesIterator(filesList));\r\n    }\r\n\r\n    function onFormReady(preparedSubmitElements) {\r\n        submitElements = preparedSubmitElements;\r\n    }\r\n\r\n    function onFilesUploaded(fileInfo) {\r\n        vm.filesUploaded = true;\r\n        vm.uploadStarted = false;\r\n        onProgress(100);\r\n        attrsService.trigger($scope, $attrs, 'filesUploaded', fileInfo);\r\n    }\r\n\r\n    function onProgress(percentComplete) {\r\n        vm.uploadProgress = percentComplete;\r\n    }\r\n\r\n    function getFilesList() {\r\n        return filesToUpload;\r\n    }\r\n\r\n    function clearFilesList() {\r\n        filesToUpload.length = 0;\r\n        vm.filesUploaded = false;\r\n    }\r\n\r\n    function canShowFileList() {\r\n        return getFilesList().length > 0 && !vm.filesUploaded;\r\n    }\r\n\r\n    function uploadFiles() {\r\n        vm.filesUploaded = false;\r\n        vm.uploadStarted = true;\r\n        const uploadPromise = ewfFileUploaderService.uploadAvailable()\r\n            ? ewfFileUploaderService.uploadFiles(filesToUpload, submitElements.url, submitElements.urlParameters)\r\n            : ewfFileUploaderService.submitForm(submitElements);\r\n\r\n        uploadPromise.then(onFilesUploaded, onUploadError, onProgress);\r\n    }\r\n\r\n    function onUploadError(response) {\r\n        const errorObject = mapResponseErrors(response);\r\n\r\n        vm.filesUploaded = false;\r\n        vm.uploadStarted = false;\r\n        attrsService.trigger($scope, $attrs, 'filesUploadError', errorObject);\r\n    }\r\n\r\n    function mapResponseErrors(response) {\r\n        const errors = response && response.errors || [];\r\n        const fieldErrors = response && response.fieldErrors;\r\n        if (fieldErrors) {\r\n            Object.keys(fieldErrors).forEach((eachErrorField) => {\r\n                errors.push(...fieldErrors[eachErrorField]);\r\n            });\r\n        }\r\n        return {\r\n            errors,\r\n            fieldErrors\r\n        };\r\n    }\r\n\r\n    function getFilesIterator(fileObject) {\r\n        if (angular.isString(fileObject)) {\r\n            return singFileIterator();\r\n        }\r\n        if (!multiFileMode) {\r\n            return singleFileModeIterator();\r\n        }\r\n        return filesObjectIterator();\r\n\r\n        function* singFileIterator() {\r\n            yield {\r\n                name: fileObject.replace(/^.*[\\\\\\/]/, '')\r\n            };\r\n        }\r\n\r\n        function* singleFileModeIterator() {\r\n            yield fileObject[0];\r\n        }\r\n\r\n        function* filesObjectIterator() {\r\n            for (let i = 0; i < fileObject.length; i++) {\r\n                yield fileObject[i];\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}