{"version":3,"sources":["directives/save-to-local-storage/save-to-local-storage-directive.js"],"names":[],"mappings":";;;;;;;;;AAIA,qBAAI,SAAS,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;;AAExD,sBAAkB,CAAC,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC;;AAEzC,aAAS,kBAAkB,CAAC,OAAO,EAAE;AACjC,eAAO;AACH,oBAAQ,EAAE,GAAG;AACb,iBAAK,EAAE,IAAI;AACX,sBAAU,0CAA8B;AACxC,wBAAY,EAAE,oBAAoB;AAClC,gBAAI,EAAE;AACF,oBAAI,EAAE,QAAQ;aACjB;SACJ,CAAC;;AAEF,iBAAS,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,sBAAsB,EAAE;AAC7D,gBAAM,qBAAqB,GAAG,gBAAgB,CAAC;AAC/C,gBAAM,YAAY,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC;AAChD,gBAAM,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC;;AAEjC,gBAAI,mBAAmB,GAAG,IAAI,CAAC;AAC/B,kCAAsB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;AAE1C,6BAAiB,CAAC,IAAI,CAAC,CAAC;;AAExB,aAAC,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,WAAW,CAAA,CAAE,cAAc,EAAE,YAAW;AACzE,oBAAI,mBAAmB,EAAE;AACrB,0CAAsB,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;iBACvD;aACJ,CAAC,CAAC;;AAEH,mBAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAM;AACvB,sCAAsB,CAAC,gBAAgB,EAAE,CAAC;AAC1C,mCAAmB,GAAG,KAAK,CAAC;aAC/B,CAAC,CAAC;;AAEH,qBAAS,iBAAiB,CAAC,YAAY,EAAE;AACrC,sBAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG,EAAK;AACpC,wBAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,KAAK,qBAAqB,EAAE;AACxD,4BAAM,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC;AACpC,8CAAsB,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;AACxD,6BAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;AAC/C,+BAAO,IAAI,CAAC;qBACf;iBACJ,CAAC,CAAC;aACN;;AAED,qBAAS,YAAY,CAAC,OAAO,EAAE;AAC3B,oBAAI,OAAO,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACzE,qCAAiB,CAAC,OAAO,CAAC,CAAC;iBAC9B;AACD,sCAAsB,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;aAChE;SACJ;KACJ","file":"directives/save-to-local-storage/save-to-local-storage-directive.js","sourcesContent":["import ewf from 'ewf';\r\nimport SaveToLocalStorageController from './save-to-local-storage-controller';\r\nimport './exclude-from-local-storage-directive';\r\n\r\newf.directive('saveToLocalStorage', SaveToLocalStorage);\r\n\r\nSaveToLocalStorage.$inject = ['$window'];\r\n\r\nfunction SaveToLocalStorage($window) {\r\n    return {\r\n        restrict: 'A',\r\n        scope: true,\r\n        controller: SaveToLocalStorageController,\r\n        controllerAs: 'saveToLocalStorage',\r\n        link: {\r\n            post: postLink\r\n        }\r\n    };\r\n\r\n    function postLink(scope, element, attrs, localStorageController) {\r\n        const formObjectCheckString = '$removeControl';\r\n        const rootFormName = attrs.ngForm || attrs.name;\r\n        const form = scope[rootFormName];\r\n\r\n        let canSaveBeforeReload = true;\r\n        localStorageController.init(rootFormName);\r\n\r\n        applyFormListener(form);\r\n\r\n        ($window.addEventListener || $window.attachEvent)('beforeunload', function() {\r\n            if (canSaveBeforeReload) {\r\n                localStorageController.saveDataToLocalStorage(form);\r\n            }\r\n        });\r\n\r\n        element.on('submit', () => {\r\n            localStorageController.clearStorageData();\r\n            canSaveBeforeReload = false;\r\n        });\r\n\r\n        function applyFormListener(formToListen) {\r\n            Object.keys(formToListen).some((key) => {\r\n                if (key.charAt(0) !== '$' || key === formObjectCheckString) {\r\n                    const formName = formToListen.$name;\r\n                    localStorageController.addFormToExclusionList(formName);\r\n                    scope.$watchCollection(formName, formListener);\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n\r\n        function formListener(newForm) {\r\n            if (newForm && !localStorageController.isFormInExclusionList(newForm.$name)) {\r\n                applyFormListener(newForm);\r\n            }\r\n            localStorageController.populateFormFromLocalStorage(newForm);\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}