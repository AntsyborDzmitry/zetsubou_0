{"version":3,"sources":["components/shipment/ewf-shipment-service.js"],"names":[],"mappings":"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","file":"components/shipment/ewf-shipment-service.js","sourcesContent":["import ewf from 'ewf';\r\nimport './../../services/date-time-service';\r\nimport './payment-type/payment-type-service';\r\n\r\nShipmentService.$inject = ['$http', '$q', 'logService', 'dateTimeService', 'paymentTypeService'];\r\newf.service('shipmentService', ShipmentService);\r\n\r\nexport default function ShipmentService($http, $q, logService, dateTimeService, paymentTypeService) {\r\n    // private\r\n    let countriesNames = {\r\n        from: '',\r\n        to: ''\r\n    };\r\n    let shipmentType = '';\r\n    let customsInvoiceType = null;\r\n    let currenciesList = [];\r\n\r\n    let totalWeight = {\r\n        value: '',\r\n        unit: ''\r\n    };\r\n\r\n    const SHIPMENT_TYPES = {\r\n        DOCUMENT: 'DOCUMENT',\r\n        PACKAGE: 'PACKAGE'\r\n    };\r\n\r\n    function Address(data = {}) {\r\n        data.addressDetails = data.addressDetails || {};\r\n        data.addressDetails.countryCode = data.addressDetails.countryCode || null;\r\n        return {\r\n            countryCode: data.addressDetails.countryCode || '', // US, UA\r\n            countryDivisionName: '',\r\n            countryDHLName: '',\r\n            stateOrProvince: data.addressDetails.stateOrProvince,\r\n            cityName: data.addressDetails.city,\r\n            citySuburbName: '',\r\n            postCode: data.addressDetails.zipOrPostCode,\r\n            addressLine1: data.addressDetails.addrLine1 ?\r\n                                                    data.addressDetails.addrLine1.fullAddress ||\r\n                                                    data.addressDetails.addrLine1 : undefined,\r\n            addressLine2: data.addressDetails.addrLine2,\r\n            addressLine3: data.addressDetails.addrLine3,\r\n            addressType: '',\r\n            geoPositionLatitude: '',\r\n            geoPositionLongitude: '',\r\n            geoPositionAltitude: '',\r\n            resAttrOpts: ''\r\n        };\r\n    }\r\n\r\n    function Phone(data = {}) {\r\n        const {phoneDetails = {}} = data;\r\n        return {\r\n            phoneType: phoneDetails.phoneType,\r\n            phoneCountryCode: phoneDetails.phoneCountryCode,\r\n            phone: phoneDetails.phone ? (phoneDetails.phone).replace(/\\s/g, '') : null,\r\n            phoneExt: phoneDetails.phoneExt,\r\n            smsEnabled: phoneDetails.smsEnabled\r\n        };\r\n    }\r\n\r\n    function Piece(packageRow) {\r\n        this.height = packageRow.height;\r\n        this.width = packageRow.width;\r\n        this.length = packageRow.length;\r\n        this.weight = packageRow.weight;\r\n        this.unit = packageRow.unit;\r\n        this.quantity = packageRow.quantity;\r\n        this.packageId = packageRow.packageId;\r\n        this.refNum = packageRow.reference;\r\n    }\r\n\r\n    const shipmentData = {\r\n        // Address Details - START\r\n        fromAddress: new Address(),\r\n        toAddress: new Address(),\r\n        fromName: '',\r\n        toName: '',\r\n        fromEmail: '',\r\n        toEmail: '',\r\n        fromCompany: '',\r\n        toCompany: '',\r\n        fromVatTax: '',\r\n        toVatTax: '',\r\n        // Address Details - END\r\n\r\n        // Shipment Type - START\r\n        type: 'DOCUMENT',\r\n        documentDescription: 'document description', // required\r\n        references: [],\r\n        extendedLiability: false, // Boolean\r\n        // Shipment Type - END\r\n\r\n        // Customs Invoice - START\r\n        customsInvoice: null,\r\n        itar: null,\r\n        // Customs Invoice - END\r\n\r\n        // Packaging Details - START\r\n        pieces: [],\r\n        // Packaging Details - END\r\n\r\n        // Payment Info - START\r\n        paymentInfo: {\r\n            dutiesPaymentType: '',\r\n            dutiesPaymentAccountNumber: '',\r\n            taxesPaymentType: '',\r\n            taxesPaymentAccountNumber: '',\r\n            transportationPaymentType: '',\r\n            transportationPaymentAccountNumber: '',\r\n            quotationType: '',\r\n            quotationAccountNumber: '',\r\n            splitDutyAndTaxPayment: false // Boolean\r\n        },\r\n        // Payment Info - END\r\n\r\n        // Shipment Product - START\r\n        product: {},\r\n        // Shipment Product - END\r\n\r\n        // Shipment Date - START\r\n        date: null,\r\n        // Shipment Date - END\r\n\r\n        // Optional Services - START\r\n        optionalServices: [\r\n            {\r\n                //private Boolean holdShipmentForRecipient;\r\n                //private Boolean neutralDeliveryService;\r\n                //private Boolean dangerousGoods;\r\n            }\r\n        ],\r\n        digitalCustomsInvoice: {\r\n            document: null,\r\n            additionalDocuments: []\r\n        },\r\n        // Optional Services - END\r\n\r\n        // Pick Up - START\r\n        pickup: {\r\n            pickupDetails: {\r\n                pickupLocation: {\r\n                    name: '',\r\n                    company: '',\r\n                    pickupAddress: {\r\n                        countryCode: '',\r\n                        addressLine1: '',\r\n                        postCode: '',\r\n                        cityName: '',\r\n                        stateOrProvince: ''\r\n                    }\r\n                },\r\n                pickupLocationType: '',\r\n                pickupLocationOtherDescription: '',\r\n                instructions: '',\r\n                pickupDate: '',\r\n                pickupWindow: {\r\n                    earliestTime: '',\r\n                    latestTime: ''\r\n                }\r\n            },\r\n            totalWeight: {\r\n                unit: '',\r\n                value: ''\r\n            }\r\n        },\r\n        // Pick Up - END\r\n\r\n        // Associate with contact id - START\r\n        associateWithContactId: '',\r\n        // Associate with contact id - END\r\n\r\n        //Incoterm - START\r\n        incoterm: '',\r\n        //Incoterm - END\r\n\r\n        // Reward Card - START\r\n        promotionCode: '',\r\n        rewardCode: '',\r\n        rewardCard: '',\r\n        // Reward Card - END\r\n        creditCardPaymentInfo: {}\r\n    };\r\n\r\n    const publicAPI = {\r\n        getCountrySomParameters,\r\n        setCountrySomParameters,\r\n        getCurrencies,\r\n        setCurrencies,\r\n        setAddressDetails,\r\n        setPhoneDetails,\r\n        getCustomsInvoice,\r\n        setCustomsInvoice,\r\n        setCustomsInvoicePurpose,\r\n        getCustomsInvoiceType,\r\n        setCustomsInvoiceType,\r\n        setItar,\r\n        setPackageDetails,\r\n        setShipmentReferences,\r\n        getShipmentCountry,\r\n        getShipmentPostCode,\r\n        setShipmentProduct,\r\n        getShipmentCityName,\r\n        getShipmentProduct,\r\n        setShipmentDate,\r\n        getShipmentDate,\r\n        setContactsKeys,\r\n        getContactsKeys,\r\n        setShipmentType,\r\n        getShipmentType,\r\n        getShipmentData,\r\n        getDestinationCountry,\r\n        setAssociateWithContactId,\r\n        setPaymentInfo,\r\n        getPaymentInfo,\r\n        setIncoterm,\r\n        getIncoterm,\r\n        setTotalWeight,\r\n        getTotalWeight,\r\n        setPickupData,\r\n        getPickupData,\r\n        saveShipment,\r\n        getQuotesRequestData,\r\n        isPackage,\r\n        isShipmentWithInvoice,\r\n        chargeShipment,\r\n        saveShipmentForLater,\r\n        setPaymentProductInfo,\r\n        completeShipmentPayment,\r\n        getSavedShipmentData,\r\n        getAddressDetails,\r\n        getFromContactFields,\r\n        getToContactFields,\r\n        getReceiverContactDetails,\r\n        getInvolvedPartiesAddressDetails,\r\n        getShipmentTypeData,\r\n        getPickupModelData,\r\n        getPaymentTypeModelData,\r\n        getPackageDetailsModelData,\r\n        getShipmentProductsModelData,\r\n        setRewardCard,\r\n        getRewardCard,\r\n        setCreditCardPaymentInfo,\r\n        getCreditCardPaymentInfo,\r\n        getFormattedShipperAddress,\r\n        getShipperAddress\r\n    };\r\n\r\n    function getCountrySomParameters() {\r\n        return {\r\n            shipperCountrySom: shipmentData.shipperCountrySom,\r\n            userProfileCountrySom: shipmentData.userProfileCountrySom,\r\n            weightConvertionRate: shipmentData.weightConvertionRate,\r\n            dimensionConvertionRate: shipmentData.dimensionConvertionRate,\r\n            shipperCountryConversionPrecision: shipmentData.shipperCountryConversionPrecision,\r\n            userProfileCountryConversionPrecision: shipmentData.userProfileCountryConversionPrecision\r\n        };\r\n    }\r\n\r\n    function setCountrySomParameters(shipperCountrySom, userProfileCountrySom,\r\n                                     weightConvertionRate = 1, dimensionConvertionRate = 1,\r\n                                     shipperCountryConversionPrecision = 2, userProfileCountryConversionPrecision = 2) {\r\n        Object.assign(shipmentData, {\r\n            shipperCountrySom,\r\n            userProfileCountrySom,\r\n            weightConvertionRate,\r\n            dimensionConvertionRate,\r\n            shipperCountryConversionPrecision,\r\n            userProfileCountryConversionPrecision\r\n        });\r\n    }\r\n\r\n    function getCurrencies() {\r\n        return currenciesList;\r\n    }\r\n\r\n    function setCurrencies(currencies) {\r\n        currenciesList = currencies;\r\n    }\r\n\r\n    function setAddressDetails(fromData, toData) {\r\n        shipmentData.fromAddress = new Address(fromData);\r\n        shipmentData.toAddress = new Address(toData);\r\n        shipmentData.fromName = fromData.name;\r\n        shipmentData.toName = toData.name;\r\n        shipmentData.fromEmail = fromData.email;\r\n        shipmentData.toEmail = toData.email;\r\n        shipmentData.fromCompany = fromData.company || '';\r\n        shipmentData.toCompany = toData.company || '';\r\n        shipmentData.fromVatTax = fromData.vatTax || '';\r\n        shipmentData.toVatTax = toData.vatTax || '';\r\n        shipmentData.toResidentialAddress = toData.addressDetails.residentialAddress;\r\n        shipmentData.toNickname = toData.nickname;\r\n        countriesNames.from = fromData.addressDetails.countryName;\r\n        countriesNames.to = toData.addressDetails.countryName;\r\n    }\r\n\r\n    function setPhoneDetails(fromData, toData) {\r\n        Object.assign(shipmentData, {\r\n            fromPhone: new Phone(fromData),\r\n            toPhone: new Phone(toData)\r\n        });\r\n    }\r\n\r\n    function getCustomsInvoice() {\r\n        return shipmentData.customsInvoice;\r\n    }\r\n\r\n    function setCustomsInvoice(customsInvoiceModel) {\r\n        if (!customsInvoiceModel) {\r\n            shipmentData.customsInvoice = null;\r\n            return;\r\n        }\r\n\r\n        shipmentData.customsInvoice = {\r\n            description: customsInvoiceModel.invoiceDescription,\r\n            totalPiece: customsInvoiceModel.totalQuantity,\r\n            totalWeight: customsInvoiceModel.totalNetWeight,\r\n            totalGrossWeight: customsInvoiceModel.totalGrossWeight,\r\n            totalDeclareValue: customsInvoiceModel.totalDeclareValue,\r\n            currencyCode: customsInvoiceModel.currentCurrency.type,\r\n            items: customsInvoiceModel.productList\r\n        };\r\n    }\r\n\r\n    function setCustomsInvoicePurpose(purpose) {\r\n        shipmentData.customsInvoice = shipmentData.customsInvoice || {};\r\n        shipmentData.customsInvoice.reasonForExport = purpose;\r\n    }\r\n\r\n    function getCustomsInvoiceType() {\r\n         return customsInvoiceType;\r\n    }\r\n\r\n    function setCustomsInvoiceType(type) {\r\n        customsInvoiceType = type;\r\n    }\r\n\r\n    function setItar(itar) {\r\n        shipmentData.itar = itar || null;\r\n    }\r\n\r\n    function setPackageDetails(packagesRows) {\r\n        shipmentData.pieces = packagesRows.map((row) => new Piece(row));\r\n    }\r\n\r\n    function setShipmentReferences(references) {\r\n        shipmentData.references = references;\r\n    }\r\n\r\n    function getShipmentCountry() {\r\n        if (!shipmentData.fromAddress || !shipmentData.fromAddress.countryCode) {\r\n            return null;\r\n        }\r\n        return shipmentData.fromAddress.countryCode;\r\n    }\r\n\r\n    function getDestinationCountry() {\r\n        if (!shipmentData.toAddress || !shipmentData.toAddress.countryCode) {\r\n            return null;\r\n        }\r\n        return shipmentData.toAddress.countryCode;\r\n    }\r\n\r\n    function getShipmentPostCode() {\r\n        if (!shipmentData.fromAddress || !shipmentData.fromAddress.postCode) {\r\n            return null;\r\n        }\r\n        return shipmentData.fromAddress.postCode;\r\n    }\r\n\r\n    function getShipmentCityName() {\r\n        if (!shipmentData.fromAddress || !shipmentData.fromAddress.cityName) {\r\n            return null;\r\n        }\r\n        return shipmentData.fromAddress.cityName;\r\n    }\r\n\r\n    function setShipmentProduct(product) {\r\n        shipmentData.product = product;\r\n    }\r\n\r\n    function getShipmentProduct() {\r\n        return shipmentData.product;\r\n    }\r\n\r\n    function setContactsKeys(keys) {\r\n        Object.assign(shipmentData, keys);\r\n    }\r\n\r\n    function getContactsKeys() {\r\n        const {fromContactKey, toContactKey} = shipmentData;\r\n        return {\r\n            fromContactKey,\r\n            toContactKey\r\n        };\r\n    }\r\n\r\n    function setShipmentType(type) {\r\n        shipmentData.type = shipmentType = type;\r\n    }\r\n\r\n    function getShipmentType() {\r\n        return shipmentType;\r\n    }\r\n\r\n    function setShipmentDate(date) {\r\n        shipmentData.date = date;\r\n    }\r\n\r\n    function getShipmentDate() {\r\n        return shipmentData.date;\r\n    }\r\n\r\n    function getShipmentData() {\r\n        return shipmentData;\r\n    }\r\n\r\n    function setAssociateWithContactId(id) {\r\n        shipmentData.asociateWithContactId = id;\r\n    }\r\n\r\n    function setPaymentInfo(data) {\r\n        angular.extend(shipmentData.paymentInfo, {\r\n            splitDutyAndTaxPayment: data.splitDutyAndTaxPayment,\r\n            dutiesPaymentType: data.dutiesPaymentType,\r\n            dutiesPaymentAccountNumber: data.dutiesPaymentAccountNumber,\r\n            taxesPaymentType: data.taxesPaymentType,\r\n            taxesPaymentAccountNumber: data.taxesPaymentAccountNumber,\r\n            transportationPaymentType: data.transportationPaymentType,\r\n            transportationPaymentAccountNumber: data.transportationPaymentAccountNumber,\r\n            quotationType: data.quotationType,\r\n            quotationAccountNumber: data.quotationAccountNumber\r\n        });\r\n    }\r\n\r\n    function getPaymentInfo() {\r\n        return shipmentData.paymentInfo;\r\n    }\r\n\r\n    function setIncoterm(data) {\r\n        shipmentData.incoterm = data;\r\n    }\r\n\r\n    function getIncoterm() {\r\n        return shipmentData.incoterm;\r\n    }\r\n\r\n    function setTotalWeight(weight, uom) {\r\n        totalWeight = {\r\n            value: weight,\r\n            unit: uom\r\n        };\r\n    }\r\n\r\n    function getTotalWeight() {\r\n        return totalWeight;\r\n    }\r\n\r\n    function setPickupData(data) {\r\n        Object.assign(shipmentData.pickup, data);\r\n    }\r\n\r\n    function getPickupData() {\r\n        return shipmentData.pickup;\r\n    }\r\n\r\n    function setRewardCard(data) {\r\n        Object.assign(shipmentData, data);\r\n    }\r\n\r\n    function getRewardCard() {\r\n        return {\r\n            promotionCode: shipmentData.promotionCode,\r\n            rewardCode: shipmentData.rewardCode,\r\n            rewardCard: shipmentData.rewardCard\r\n        };\r\n    }\r\n\r\n    function saveShipment() {\r\n        return $http.post('/api/shipment', shipmentData)\r\n            .then((response) => response.data)\r\n            .catch((response) => {\r\n                logService.error('ShipmentService#saveShipment: response error', response);\r\n                return $q.reject(response);\r\n            });\r\n    }\r\n\r\n    function getAddress(currentShipmentData, fromOrTo) {\r\n        let address = currentShipmentData[fromOrTo + 'Address'];\r\n        return {\r\n            countryCode: address.countryCode,\r\n            zipOrPostCode: address.postCode,\r\n            stateOrProvince: address.stateOrProvince,\r\n            city: address.cityName,\r\n            addrLine1: address.addressLine1,\r\n            addrLine2: address.addressLine2,\r\n            addrLine3: address.addressLine3,\r\n            contactName: currentShipmentData[fromOrTo + 'Name'],\r\n            companyName: currentShipmentData[fromOrTo + 'Company']\r\n        };\r\n    }\r\n\r\n    function getFormattedShipperAddress(currentShipmentData = shipmentData) {\r\n        return getAddress(currentShipmentData, 'from');\r\n    }\r\n\r\n    function getFormattedReceiverAddress(currentShipmentData) {\r\n        return getAddress(currentShipmentData, 'to');\r\n    }\r\n\r\n    function getShipperAddress() {\r\n        const addressDetails = shipmentData.fromAddress;\r\n        return {\r\n            addressDetails: {\r\n                addrLine1: addressDetails.addressLine1,\r\n                city: addressDetails.cityName,\r\n                countryCode: addressDetails.countryCode,\r\n                countryName: countriesNames.from,\r\n                stateOrProvince: addressDetails.stateOrProvince,\r\n                zipOrPostCode: addressDetails.postCode\r\n            },\r\n            company: shipmentData.fromCompany,\r\n            name: shipmentData.fromName\r\n        };\r\n    }\r\n\r\n    function getQuotesRequestData(date) {\r\n        const data = {\r\n            //readyTime: date, // @todo: find out from where this date is coming\r\n            pickupDate: date ? date.getTime() : 0,\r\n            accountNumber: '',\r\n            pieces: shipmentData.pieces,\r\n            shipperAddress: getFormattedShipperAddress(shipmentData),\r\n            payerAddress: getFormattedShipperAddress(shipmentData),\r\n            receiverAddress: getFormattedReceiverAddress(shipmentData),\r\n\r\n            /**\r\n             * Comes from Shipment Type -> Packages -> Use My Own Customs Invoice ->\r\n             *  -> What is the value of your shipment?\r\n             *\r\n             * Should has special money amount format {\"val\": 10, \"currency\": \"USD\"}\r\n             *\r\n             * @required\r\n             */\r\n            declaredValue: {\r\n                val: 20,\r\n                currency: 'USD'\r\n            },\r\n\r\n            /**\r\n             * Comes from Shipment Type -> Packages -> Use My Own Customs Invoice ->\r\n             *  -> Protect Your Shipment -> I would like to insure my shipment ->\r\n             *  -> What is the value you would like to insure?\r\n             *\r\n             * Should has special money amount format {\"val\": 10, \"currency\": \"USD\"}\r\n             *\r\n             * @required\r\n             */\r\n            insuranceValue: { //\r\n                val: 10,\r\n                currency: 'USD'\r\n            },\r\n\r\n            genericCriteria: {}, // optional\r\n            products: [] // optional\r\n        };\r\n        if (shipmentData.paymentInfo.quotationType === paymentTypeService.PAYMENT_TYPES.DHL_ACCOUNT) {\r\n            data.accountId = shipmentData.paymentInfo.quotationAccountNumber;\r\n        } else {\r\n            data.accountNumber = shipmentData.paymentInfo.quotationAccountNumber;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    function isPackage() {\r\n        return shipmentType === SHIPMENT_TYPES.PACKAGE;\r\n    }\r\n\r\n    function isShipmentWithInvoice() {\r\n        return !!shipmentData.customsInvoice;\r\n    }\r\n\r\n    function chargeShipment() {\r\n        return $http.post(`/api/shipment/payment/register`, shipmentData)\r\n            .then((response) => response.data.callbackUrl || $q.reject());\r\n    }\r\n\r\n    function saveShipmentForLater(shipmentName) {\r\n        const incompleteShipmentData = angular.copy(shipmentData);\r\n        incompleteShipmentData.name = shipmentName;\r\n        return $http.post('/api/shipment/partial', incompleteShipmentData)\r\n            .catch((response) => {\r\n                logService.error(response);\r\n                return $q.reject(response.data);\r\n            });\r\n    }\r\n\r\n    function completeShipmentPayment(shipmentId, hostedCheckoutId) {\r\n        const url = '/api/shipment/payment/complete';\r\n        return $http\r\n            .post(url, {shipmentId, hostedCheckoutId})\r\n            .then((response) => response.data);\r\n    }\r\n\r\n    function setPaymentProductInfo(paymentProduct) {\r\n        Object.assign(shipmentData.paymentInfo, {paymentProduct});\r\n    }\r\n\r\n    function getSavedShipmentData(shipmentId) {\r\n        return $http.get(`/api/shipment/${shipmentId}`)\r\n            .then((response) => response.data)\r\n            .catch((error) => {\r\n                logService.error(error);\r\n                return $q.reject(error);\r\n            });\r\n    }\r\n\r\n    function getAddressDetails(data) {\r\n        return {\r\n            countryCode: data.countryCode,\r\n            city: data.cityName,\r\n            stateOrProvince: data.stateOrProvince,\r\n            zipOrPostCode: data.postCode,\r\n            addrLine1: data.addressLine1,\r\n            addrLine2: data.addressLine2,\r\n            addrLine3: data.addressLine3\r\n        };\r\n    }\r\n\r\n    function getFromContactFields(data) {\r\n        return {\r\n            name: data.fromName,\r\n            email: data.fromEmail,\r\n            company: data.fromCompany,\r\n            vatTax: data.fromVatTax,\r\n            addressDetails: Object.assign(publicAPI.getAddressDetails(data.fromAddress), {\r\n                key: data.fromContactKey\r\n            }),\r\n            phoneDetails: data.fromPhone\r\n        };\r\n    }\r\n\r\n    function getToContactFields(data) {\r\n        return {\r\n            name: data.toName,\r\n            email: data.toEmail,\r\n            company: data.toCompany,\r\n            vatTax: data.toVatTax,\r\n            addressDetails: Object.assign(publicAPI.getAddressDetails(data.toAddress), {\r\n                key: data.toContactKey\r\n            }),\r\n            phoneDetails: data.toPhone\r\n        };\r\n    }\r\n\r\n    function getReceiverContactDetails() {\r\n        return {\r\n            name: shipmentData.toName,\r\n            email: shipmentData.toEmail,\r\n            company: shipmentData.toCompany,\r\n            vatTax: shipmentData.toVatTax,\r\n            addressDetails: Object.assign(publicAPI.getAddressDetails(shipmentData.toAddress), {\r\n                key: shipmentData.toContactKey,\r\n                countryName: countriesNames.to,\r\n                residentialAddress: shipmentData.toResidentialAddress\r\n            }),\r\n            phone: {\r\n                phoneDetails: shipmentData.toPhone\r\n            },\r\n            nickName: shipmentData.toNickname\r\n        };\r\n    }\r\n\r\n    function getInvolvedPartiesAddressDetails() {\r\n        return {\r\n            shipper: {\r\n                name: shipmentData.fromName,\r\n                company: shipmentData.fromCompany,\r\n                address: shipmentData.fromAddress.cityName + ' ' + shipmentData.fromAddress.addressLine1,\r\n                country: countriesNames.from,\r\n                email: shipmentData.fromEmail,\r\n                vat: shipmentData.fromVatTax\r\n            },\r\n            receiver: {\r\n                name: shipmentData.toName,\r\n                company: shipmentData.toCompany,\r\n                address: shipmentData.toAddress.cityName + ' ' + shipmentData.toAddress.addressLine1,\r\n                country: countriesNames.to,\r\n                email: shipmentData.toEmail,\r\n                vat: shipmentData.toVatTax\r\n            }\r\n        };\r\n    }\r\n\r\n    function getShipmentTypeData(data) {\r\n        let [primaryReference, ...additionalReferences] = data.references;\r\n        return {\r\n            shipmentType: data.type,\r\n            documentDescription: data.documentDescription,\r\n            extendedLiability: data.extendedLiability,\r\n            primaryReference,\r\n            additionalReferences\r\n        };\r\n    }\r\n\r\n    function getPickupModelData(data) {\r\n        const {pickupDetails} = data.pickup;\r\n        return {\r\n            pickupLocation: {\r\n                name: pickupDetails.pickupLocationType\r\n            },\r\n            pickupLocationOtherDescription: pickupDetails.pickupLocationOtherDescription,\r\n            pickupSpecialInstructions: pickupDetails.instructions,\r\n            pickupTime: {\r\n                readyTime: dateTimeService.msToMin(pickupDetails.pickupWindow.earliestTime),\r\n                closeTime: dateTimeService.msToMin(pickupDetails.pickupWindow.latestTime)\r\n            },\r\n            totalPickupWeight: data.pickup.totalWeight\r\n        };\r\n    }\r\n\r\n    function getPaymentTypeModelData({paymentInfo}) {\r\n        return {\r\n            transportationPaymentType: {\r\n                paymentType: paymentInfo.transportationPaymentType,\r\n                accountId: paymentInfo.transportationPaymentAccountNumber\r\n            },\r\n            quotationType: {\r\n                paymentType: paymentInfo.quotationType,\r\n                accountId: paymentInfo.quotationAccountNumber\r\n            },\r\n            splitDutyAndTaxPayment: paymentInfo.splitDutyAndTaxPayment,\r\n            dutiesPaymentType: {\r\n                paymentType: paymentInfo.dutiesPaymentType,\r\n                accountId: paymentInfo.dutiesPaymentAccountNumber\r\n            },\r\n            taxesPaymentType: {\r\n                paymentType: paymentInfo.taxesPaymentType,\r\n                accountId: paymentInfo.taxesPaymentAccountNumber\r\n            }\r\n        };\r\n    }\r\n\r\n    function setCreditCardPaymentInfo(billingInfo) {\r\n        const {name, company, email, addressDifferent, paymentProduct} = billingInfo;\r\n        const address = billingInfo.addressDetails || {};\r\n\r\n        shipmentData.creditCardPaymentInfo = {\r\n            name,\r\n            company,\r\n            email,\r\n            addressDifferent,\r\n            paymentProduct,\r\n            billingAddress: {\r\n                countryCode: address.countryCode,\r\n                cityName: address.city,\r\n                stateOrProvince: address.stateOrProvince,\r\n                postCode: address.zipOrPostCode,\r\n                addressLine1: address.addrLine1,\r\n                addressLine2: address.addrLine2\r\n            }\r\n        };\r\n\r\n        if (billingInfo.phone) {\r\n            const {\r\n                phoneCountryCode,\r\n                phoneNumber\r\n            } = billingInfo.phone.phoneDetails || {phoneCountryCode: '', phoneNumber: ''};\r\n\r\n            Object.assign(shipmentData.creditCardPaymentInfo, {phoneCountryCode, phoneNumber});\r\n        }\r\n    }\r\n\r\n    function getPackageDetailsModelData(data) {\r\n        let rowId = 0;\r\n        const packagesRows = data.pieces.map((item) => {\r\n            return {\r\n                rowId: ++rowId,\r\n                height: item.height,\r\n                width: item.width,\r\n                length: item.length,\r\n                weight: item.weight,\r\n                unit: item.unit,\r\n                quantity: item.quantity,\r\n                packageId: item.packageId,\r\n                reference: item.refNum\r\n            };\r\n        });\r\n        return {\r\n            shipmentCountry: data.fromAddress.countryCode,\r\n            shipmentType: data.type,\r\n            packagesRows\r\n        };\r\n    }\r\n\r\n    function getShipmentProductsModelData(data) {\r\n        return {\r\n            activeDate: new Date(data.date)\r\n        };\r\n    }\r\n\r\n    function getCreditCardPaymentInfo() {\r\n        return shipmentData.creditCardPaymentInfo;\r\n    }\r\n\r\n    return publicAPI;\r\n}\r\n"],"sourceRoot":"/source/"}