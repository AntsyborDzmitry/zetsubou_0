{"version":3,"sources":["components/shipment/shipment-type/itar/eei/ewf-itar-eei-controller.js"],"names":[],"mappings":"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","file":"components/shipment/shipment-type/itar/eei/ewf-itar-eei-controller.js","sourcesContent":["import './../../../../../services/nls-service';\r\nimport './../../../ewf-shipment-service';\r\nimport './../../shipment-type-service';\r\nimport './../../../package-details/package-details-service';\r\nimport './../ewf-itar-service';\r\n\r\nItarEeiController.$inject = [\r\n    '$filter',\r\n    'nlsService',\r\n    'shipmentService',\r\n    'shipmentTypeService',\r\n    'itarService',\r\n    'packageDetailsService'\r\n];\r\n\r\nexport default function ItarEeiController($filter,\r\n                                          nlsService,\r\n                                          shipmentService,\r\n                                          shipmentTypeService,\r\n                                          itarService,\r\n                                          packageDetailsService) {\r\n    const vm = this;\r\n\r\n    const exportCodes = [\r\n        {key: 'CH', nls: 'shipment.shipment_type_itar_eei_export_code_ch_label'},\r\n        {key: 'CR', nls: 'shipment.shipment_type_itar_eei_export_code_cr_label'},\r\n        {key: 'DD', nls: 'shipment.shipment_type_itar_eei_export_code_dd_label'},\r\n        {key: 'DP', nls: 'shipment.shipment_type_itar_eei_export_code_dp_label'},\r\n        {key: 'FS', nls: 'shipment.shipment_type_itar_eei_export_code_fs_label'},\r\n        {key: 'GP', nls: 'shipment.shipment_type_itar_eei_export_code_gp_label'},\r\n        {key: 'GS', nls: 'shipment.shipment_type_itar_eei_export_code_gs_label'},\r\n        {key: 'HH', nls: 'shipment.shipment_type_itar_eei_export_code_hh_label'},\r\n        {key: 'IC', nls: 'shipment.shipment_type_itar_eei_export_code_ic_label'},\r\n        {key: 'IP', nls: 'shipment.shipment_type_itar_eei_export_code_ip_label'},\r\n        {key: 'IR', nls: 'shipment.shipment_type_itar_eei_export_code_ir_label'},\r\n        {key: 'IS', nls: 'shipment.shipment_type_itar_eei_export_code_is_label'},\r\n        {key: 'LC', nls: 'shipment.shipment_type_itar_eei_export_code_lc_label'},\r\n        {key: 'LV', nls: 'shipment.shipment_type_itar_eei_export_code_lv_label'},\r\n        {key: 'MS', nls: 'shipment.shipment_type_itar_eei_export_code_ms_label'},\r\n        {key: 'OS', nls: 'shipment.shipment_type_itar_eei_export_code_os_label'},\r\n        {key: 'SC', nls: 'shipment.shipment_type_itar_eei_export_code_sc_label'},\r\n        {key: 'TE', nls: 'shipment.shipment_type_itar_eei_export_code_te_label'},\r\n        {key: 'TL', nls: 'shipment.shipment_type_itar_eei_export_code_tl_label'},\r\n        {key: 'TP', nls: 'shipment.shipment_type_itar_eei_export_code_tp_label'},\r\n        {key: 'UG', nls: 'shipment.shipment_type_itar_eei_export_code_ug_label'},\r\n        {key: 'ZD', nls: 'shipment.shipment_type_itar_eei_export_code_zd_label'}\r\n    ];\r\n    const licenseTypes = [\r\n        {key: '', nls: 'shipment.select_one'},\r\n        {key: 'APR', nls: 'shipment.shipment_type_itar_eei_license_type_apr_label'},\r\n        {key: 'AVS', nls: 'shipment.shipment_type_itar_eei_license_type_avs_label'},\r\n        {key: 'BAG', nls: 'shipment.shipment_type_itar_eei_license_type_bag_label'},\r\n        {key: 'BIS', nls: 'shipment.shipment_type_itar_eei_license_type_bis_label'},\r\n        {key: 'CIV', nls: 'shipment.shipment_type_itar_eei_license_type_civ_label'},\r\n        {key: 'CTP', nls: 'shipment.shipment_type_itar_eei_license_type_ctp_label'},\r\n        {key: 'ENC', nls: 'shipment.shipment_type_itar_eei_license_type_enc_label'},\r\n        {key: 'GBS', nls: 'shipment.shipment_type_itar_eei_license_type_gbs_label'},\r\n        {key: 'GFT', nls: 'shipment.shipment_type_itar_eei_license_type_gft_label'},\r\n        {key: 'GOV', nls: 'shipment.shipment_type_itar_eei_license_type_gov_label'},\r\n        {key: 'KMI', nls: 'shipment.shipment_type_itar_eei_license_type_kmi_label'},\r\n        {key: 'KPC', nls: 'shipment.shipment_type_itar_eei_license_type_kpc_label'},\r\n        {key: 'LIC', nls: 'shipment.shipment_type_itar_eei_license_type_lic_label'},\r\n        {key: 'LVS', nls: 'shipment.shipment_type_itar_eei_license_type_lvs_label'},\r\n        {key: 'NLR', nls: 'shipment.shipment_type_itar_eei_license_type_nlr_label'},\r\n        {key: 'RPL', nls: 'shipment.shipment_type_itar_eei_license_type_rpl_label'},\r\n        {key: 'SCL', nls: 'shipment.shipment_type_itar_eei_license_type_scl_label'},\r\n        {key: 'TMP', nls: 'shipment.shipment_type_itar_eei_license_type_tmp_label'},\r\n        {key: 'TSR', nls: 'shipment.shipment_type_itar_eei_license_type_tsr_label'},\r\n        {key: 'TSU', nls: 'shipment.shipment_type_itar_eei_license_type_tsu_label'},\r\n        {key: 'VEU', nls: 'shipment.shipment_type_itar_eei_license_type_veu_label'}\r\n    ];\r\n    const originTypes = {\r\n        domestic: 'DOMESTIC',\r\n        international: 'INTERNATIONAL'\r\n    };\r\n    const WEIGHT_UOM = {\r\n        METRIC: 'kg',\r\n        IMPERIAL: 'lb'\r\n    };\r\n\r\n    Object.assign(vm, {\r\n        init,\r\n        addEmptyCommodityRow,\r\n        addNewCommodityRow,\r\n        deleteCommodityRow,\r\n        calculateTotalWeight,\r\n\r\n        //TODO: use ewf-pattern-service\r\n        PATTERNS: {\r\n            EIN: '^(\\\\d{9}([a-zA-Z]{2}|\\\\d{2}))?$',\r\n            LIC: '^([a-zA-Z0-9]{12})?$',\r\n            NUMBER: '(^[1-9][0-9]*$)|(?:^$)'\r\n        },\r\n        commodityList: [],\r\n        quantityUnits: [],\r\n        isUnitsMismatched: false,\r\n        maxTotalWeight: '',\r\n        maxTotalValue: '',\r\n        currentWeightUnit: '',\r\n        ein: '',\r\n        isRelated: false,\r\n        originTypes,\r\n        exportCodes,\r\n        licenseTypes\r\n    });\r\n\r\n    function init() {\r\n        const customsInvoice = shipmentService.getCustomsInvoice();\r\n        if (customsInvoice && customsInvoice.items) {\r\n            mapCustomsInvoiceToList(customsInvoice.items);\r\n        }\r\n        if (!vm.commodityList.length) {\r\n            addEmptyCommodityRow();\r\n        }\r\n\r\n        const fromCountry = shipmentService.getShipmentCountry();\r\n        const toCountry = shipmentService.getDestinationCountry();\r\n\r\n        //TODO: remove package details service when max-total-weight parameter will move to shipment parameters\r\n        const shipmentCountry = shipmentService.getShipmentCountry();\r\n        const shipmentType = shipmentService.getShipmentType();\r\n        packageDetailsService.getPackagingDetails(shipmentType, shipmentCountry)\r\n            .then(({maxTotalWeight}) => {\r\n                vm.maxTotalWeight = maxTotalWeight;\r\n            });\r\n\r\n        itarService.getCriticalShipmentItem(fromCountry)\r\n            .then((criticalPrice) => {\r\n                vm.maxTotalValue = criticalPrice;\r\n                vm.descriptionContinuing = nlsService\r\n                    .getTranslationSync('shipment.shipment_type_itar_eei_description_continuing')\r\n                    .replace('{number}', $filter('number')(criticalPrice));\r\n            });\r\n\r\n        shipmentTypeService.getShipmentParameters(fromCountry, toCountry)\r\n            .then(({units}) => {\r\n                vm.quantityUnits = units.map((unit) => unit.name);\r\n\r\n                const defaultUnit = units.find((unit) => unit.default).name;\r\n                vm.commodityList.forEach((code) => {\r\n                    code.quantityUnit = defaultUnit;\r\n                });\r\n            });\r\n\r\n        getSomParameters();\r\n\r\n        translateList(exportCodes);\r\n        translateList(licenseTypes);\r\n    }\r\n\r\n    function generateEmptyCommodityRow() {\r\n        return {\r\n            description: '',\r\n            licenseType: '',\r\n            licenseNumber: '',\r\n            ECCN: '',\r\n            quantity: 1,\r\n            quantityUnit: '',\r\n            exportCode: '',\r\n            origin: '',\r\n            totalWeight: '',\r\n            totalValue: '',\r\n            editable: true\r\n        };\r\n    }\r\n\r\n    function mapCustomsInvoiceToList(customsInvoiceList) {\r\n        vm.commodityList = [];\r\n        customsInvoiceList.forEach((item) => {\r\n            const existingItem = vm.commodityList.find((commodity) => commodity.commodityCode === item.commodityCode);\r\n\r\n            const quantity = +item.quantity || 1;\r\n            const totalWeight = (+item.netWeight || 0) * quantity;\r\n            const totalValue = (+item.value || 0) * quantity;\r\n\r\n            if (existingItem) {\r\n                existingItem.quantity += quantity;\r\n                existingItem.totalWeight += totalWeight;\r\n                existingItem.totalValue += totalValue;\r\n            } else {\r\n                let newCommodityRow = generateEmptyCommodityRow();\r\n                newCommodityRow = Object.assign(newCommodityRow, {\r\n                    commodityCode: item.commodityCode,\r\n                    description: `${item.commodityCode}/${item.description}`,\r\n                    quantityUnit: item.quantityUnits,\r\n                    quantity,\r\n                    totalWeight,\r\n                    totalValue,\r\n                    editable: false\r\n                });\r\n                vm.commodityList.push(newCommodityRow);\r\n            }\r\n        });\r\n    }\r\n\r\n    function getSomParameters() {\r\n        const SOM = shipmentService.getCountrySomParameters();\r\n        vm.currentWeightUnit = WEIGHT_UOM[SOM.shipperCountrySom];\r\n        vm.oppositeWeightUnit = WEIGHT_UOM[SOM.userProfileCountrySom];\r\n\r\n        vm.weightConvertionRate = SOM.weightConvertionRate;\r\n        vm.userProfileCountryConversionPrecision = SOM.userProfileCountryConversionPrecision;\r\n        vm.isUnitsMismatched = SOM.shipperCountrySom !== SOM.userProfileCountrySom;\r\n    }\r\n\r\n    function translateList(list) {\r\n        list.forEach((item) => {\r\n            item.value = nlsService.getTranslationSync(item.nls);\r\n        });\r\n    }\r\n\r\n    function addEmptyCommodityRow() {\r\n        vm.commodityList.push(generateEmptyCommodityRow());\r\n    }\r\n\r\n    function addNewCommodityRow(form, ewfFormCtrl) {\r\n        if (form.$valid || !ewfFormCtrl.ewfValidation()) {\r\n            vm.addEmptyCommodityRow();\r\n        }\r\n    }\r\n\r\n    function deleteCommodityRow(row) {\r\n        vm.commodityList.splice(vm.commodityList.indexOf(row), 1);\r\n    }\r\n\r\n    function calculateTotalWeight() {\r\n        return $filter('calculateTotal')(vm.commodityList, 'totalWeight', 'quantity');\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}