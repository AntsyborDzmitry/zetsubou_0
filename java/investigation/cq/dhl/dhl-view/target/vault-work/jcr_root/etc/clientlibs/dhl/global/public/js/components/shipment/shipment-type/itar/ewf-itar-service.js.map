{"version":3,"sources":["components/shipment/shipment-type/itar/ewf-itar-service.js"],"names":[],"mappings":";;;qBAQwB,WAAW;;;;;;AAJnC,qBAAI,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;;AAExC,eAAW,CAAC,OAAO,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,eAAe,EAAE,sBAAsB,CAAC,CAAC;;AAE9E,aAAS,WAAW,CAAC,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE,aAAa,EAAE,oBAAoB,EAAE;AAC5F,YAAM,SAAS,GAAG;AACd,0BAAc,EAAd,cAAc;AACd,mCAAuB,EAAvB,uBAAuB;AACvB,8BAAkB,EAAlB,kBAAkB;SACrB,CAAC;;AAEF,iBAAS,cAAc,CAAC,kBAAkB,EAAE;AACxC,mBAAO,KAAK,CAAC,GAAG,iCAA+B,kBAAkB,CAAG,CAC/D,IAAI,CAAC,UAAC,QAAQ;uBAAK,QAAQ,CAAC,IAAI;aAAA,CAAC,SAC5B,CAAC,UAAC,QAAQ,EAAK;AACjB,0BAAU,CAAC,KAAK,+CAA6C,QAAQ,CAAC,IAAI,CAAG,CAAC;AAC9E,uBAAO,oBAAoB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;aAC1D,CAAC,CAAC;SACV;;AAED,iBAAS,uBAAuB,CAAC,OAAO,EAAE;AACtC,mBAAO,aAAa,CAAC,QAAQ,CAAC,mDAAmD,EAAE,OAAO,CAAC,CACtF,IAAI,CAAC,UAAC,oBAAoB;uBAAK,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;aAAA,CAAC,CAAC;SAC5F;;AAED,iBAAS,kBAAkB,CAAC,OAAO,EAAE;AACjC,mBAAO,aAAa,CAAC,UAAU,CAAC,iCAAiC,EAAE,OAAO,CAAC,CAAC;SAC/E;;AAED,eAAO,SAAS,CAAC;KACpB","file":"components/shipment/shipment-type/itar/ewf-itar-service.js","sourcesContent":["import ewf from 'ewf';\r\nimport './../../ewf-shipment-error-service';\r\nimport './../../../../services/config-service';\r\n\r\newf.service('itarService', ItarService);\r\n\r\nItarService.$inject = ['$http', '$q', 'logService', 'configService', 'shipmentErrorService'];\r\n\r\nexport default function ItarService($http, $q, logService, configService, shipmentErrorService) {\r\n    const publicAPI = {\r\n        getItarDetails,\r\n        getCriticalShipmentItem,\r\n        getEnableItarValue\r\n    };\r\n\r\n    function getItarDetails(destinationCountry) {\r\n        return $http.get(`/api/shipment/itar/details/${destinationCountry}`)\r\n            .then((response) => response.data)\r\n            .catch((response) => {\r\n                logService.error(`Critical shipment item price failed with ${response.data}`);\r\n                return shipmentErrorService.processErrorCode(response);\r\n            });\r\n    }\r\n\r\n    function getCriticalShipmentItem(country) {\r\n        return configService.getValue('Shipment Details.EEI.critical.shipment.item.value', country)\r\n            .then((criticalShipmentItem) => criticalShipmentItem.data.value.replace(/\\D+/g, ''));\r\n    }\r\n\r\n    function getEnableItarValue(country) {\r\n        return configService.getBoolean('Shipment Details.EEI.enable.eei', country);\r\n    }\r\n\r\n    return publicAPI;\r\n}\r\n"],"sourceRoot":"/source/"}