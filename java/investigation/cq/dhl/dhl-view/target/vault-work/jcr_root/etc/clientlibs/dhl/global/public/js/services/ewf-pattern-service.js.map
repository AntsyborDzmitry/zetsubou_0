{"version":3,"sources":["services/ewf-pattern-service.js"],"names":[],"mappings":";;;yBAIwB,iBAAiB;;;;;;AAFzC,yBAAI,OAAO,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;;AAErC,iBAAS,iBAAiB,GAAG;AACxC,oBAAM,UAAU,GAAG;AACf,6BAAK,EAAE,eAAC,cAAc,EAAK;AACvB,oCAAM,YAAY,GAAG,cAAc,GAAG,KAAK,GAAG,EAAE,CAAC;;AAEjD,8GAA4E,YAAY,0CAC9E,YAAY,cAAW;yBACpC;;AAED,sCAAc,EAAE,iBAAiB;;AAEjC,+BAAO,EAAE,iBAAC,WAAW;uCAAK,WAAW,GAAG,wCAAwC,GAAG,eAAe;yBAAA;;AAElG,qCAAa,EAAE,uBAAC,UAAU,EAAK;AAC3B,oCAAM,YAAY,GAAG,UAAU,GAAG,KAAK,GAAG,EAAE,CAAC;;AAE7C,uCAAU,YAAY,wBAAqB;yBAC9C;;AAED,oCAAY,EAAE,sBAAC,UAAU,EAAK;AAC1B,oCAAM,YAAY,GAAG,UAAU,GAAG,KAAK,GAAG,EAAE,CAAC;;AAE7C,uCAAU,YAAY,6CAA0C;yBACnE;;AAED,0CAAkB,EAAE,+BAA+B;;AAEnD,iDAAyB,EAAE,aAAa;;AAExC,8BAAM,EAAE,gBAAgB;;AAExB,0CAAkB,EAAE,mBAAmB;;AAEvC,2BAAG,EAAE,eAAe;;AAEpB,6CAAqB,EAAE,qBAAqB;;AAE5C,0CAAkB,EAAE,qBAAqB;;AAEzC,iCAAS,EAAE,wBAAwB;;AAEnC,gCAAQ,EAAE,wBAAwB;;AAElC,sCAAc,EAAE,+BAA+B;;AAE/C,iCAAS,EAAE,wEAAwE;;AAEnF,4BAAI,EAAE,aAAa;;AAEnB,uCAAe,EAAE,uBAAuB;;AAExC,sCAAc,EAAE,YAAY;;AAE5B,oDAA4B,EAAE,+BAA+B;;AAE7D,mDAA2B,EAAE,6BAA6B;iBAC7D,CAAC;;AAEF,oBAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;AAE7B,yBAAS,UAAU,CAAC,GAAG,EAAE,QAAQ,EAAE;AAC/B,4BAAM,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;;AAEhC,4BAAI,OAAO,EAAE;AACT,oCAAI,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AAC7B,+CAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;iCAC5B;;AAED,uCAAO,OAAO,CAAC;yBAClB;;AAED,+BAAO,GAAG,CAAC;iBACd;SACJ","file":"services/ewf-pattern-service.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.service('ewfPatternService', EwfPatternService);\r\n\r\nexport default function EwfPatternService() {\r\n    const patternMap = {\r\n        EMAIL: (allowUppercase) => {\r\n            const modification = allowUppercase ? 'A-Z' : '';\r\n\r\n            return `^([\\\\w-]+(?:\\\\.[\\\\w-]+)*)@((?:[\\\\w-]+\\\\.)*\\\\w[\\\\w-]{0,66})\\\\.([a-z${modification}]{2,6}(?:\\\\.\r\n                [a-z${modification}]{2})?)$`;\r\n        },\r\n\r\n        UNSIGNED_FLOAT: /^(\\d+(\\.\\d+)?)$/,\r\n\r\n        NUMERIC: (signedFloat) => signedFloat ? '^$|^[+-]?(?:\\\\d+\\\\.?\\\\d*|\\\\d*\\\\.\\\\d+)$' : '^(\\\\s*|\\\\d+)$',\r\n\r\n        ALPHA_NUMERIC: (allowEmpty) => {\r\n            const modification = allowEmpty ? '^$|' : '';\r\n\r\n            return `${modification}^[a-z\\\\d\\\\-_\\\\s]+$`;\r\n        },\r\n\r\n        PHONE_NUMBER: (allowEmpty) => {\r\n            const modification = allowEmpty ? '^$|' : '';\r\n\r\n            return `${modification}^([\\\\d]+)|(\\\\(\\\\d{3}\\\\) \\\\d{3}-\\\\d{4})$`;\r\n        },\r\n\r\n        PHONE_COUNTRY_CODE: /^$|^[0-9]{1,2}[-]?[0-9]{0,4}$/,\r\n\r\n        NUMERIC_AND_SPECIAL_CHARS: '^[0-9\\\\+]*$',\r\n\r\n        TAX_ID: '^[a-zA-Z\\\\d]*$',\r\n\r\n        CNPJ_OR_CPF_TAX_ID: /^0([0-9]{10,14})$/,\r\n\r\n        ITN: '[x,X]\\\\d{14}$',\r\n\r\n        EXPORT_LICENSE_NUMBER: /^[a-zA-Z0-9]{1,23}$/,\r\n\r\n        ULTIMATE_CONSIGNEE: /^[a-zA-Z0-9]{1,35}$/,\r\n\r\n        FORMATTED: '^([\\\\s\\\\d\\\\-\\\\(\\\\)]+)$',\r\n\r\n        QUANTITY: /(^[1-9][0-9]*$)|(?:^$)/,\r\n\r\n        COMMODITY_CODE: '^\\\\d(?:[\\\\d\\\\-\\\\.]{1,6}\\\\d)?$',\r\n\r\n        DIMENSION: '^(?:0\\\\.\\\\d*[1-9]$)|^(?:[1-9]\\\\d*\\\\.\\\\d*[1-9]$)|^(?:[1-9]\\\\d*$)|(?:^$)',\r\n\r\n        WORD: '^[\\\\w\\\\s]+$',\r\n\r\n        POSITIVE_NUMBER: /^[\\+]?\\d+([,\\.]\\d+)?$/,\r\n\r\n        NATURAL_NUMBER: /^[1-9]\\d*$/,\r\n\r\n        POSITIVE_NUMBER_TWO_DECIMALS: /^[+]?[1-9]\\d*(\\.\\d{1,2})?\\s*$/,\r\n\r\n        POSITIVE_NUMBER_ONE_DECIMAL: /^[+]?[1-9]\\d*(\\.\\d{1})?\\s*$/\r\n    };\r\n\r\n    this.getPattern = getPattern;\r\n\r\n    function getPattern(key, modifier) {\r\n        const pattern = patternMap[key];\r\n\r\n        if (pattern) {\r\n            if (angular.isFunction(pattern)) {\r\n                return pattern(modifier);\r\n            }\r\n\r\n            return pattern;\r\n        }\r\n\r\n        return key;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}