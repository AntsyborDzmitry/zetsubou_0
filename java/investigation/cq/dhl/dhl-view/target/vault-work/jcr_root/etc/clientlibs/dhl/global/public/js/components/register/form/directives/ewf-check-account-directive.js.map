{"version":3,"sources":["components/register/form/directives/ewf-check-account-directive.js"],"names":[],"mappings":";;;qBAMwB,eAAe;;;;;;AAJvC,qBAAI,SAAS,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;;AAElD,mBAAe,CAAC,OAAO,GAAG,CAAC,OAAO,EAAE,mBAAmB,EAAE,sBAAsB,CAAC,CAAC;;AAElE,aAAS,eAAe,CAAC,KAAK,EAAE,iBAAiB,EAAE,oBAAoB,EAAE;AACpF,eAAO;AACH,oBAAQ,EAAE,GAAG;AACb,mBAAO,EAAE,UAAU;AACnB,gBAAI,EAAE,cAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAK;AACnC,wBAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;aAClF;SACJ,CAAC;KACL;;AAED,aAAS,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,iBAAiB,EAAE,oBAAoB,EAAE;AAClG,eAAO,CAAC,IAAI,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC;;AAE5C,iBAAS,oBAAoB,GAAG;AAC5B,gBAAM,WAAW,GAAG,kBAAkB,CAAC,WAAW,CAAC;;AAEnD,gBAAI,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE;AAC7B,uBAAO;aACV;;AAED,gBAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,gBAAM,kBAAkB,GAAM,OAAO,MAAG,CAAC;AACzC,gBAAM,SAAS,GAAG,iBAAiB,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC;;AAE/D,gBAAM,KAAK,GAAG,KAAK,CAAC,eAAe,KAAK,KAAK,CAAC;AAC9C,gBAAM,WAAW,GAAG,oBAAoB,CAAC,+BAA+B,CAAC,SAAS,CAAC,CAAC;AACpF,gBAAM,aAAa,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;;AAEpC,uBAAW,CAAC,YAAY,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;;AAEpD,iBAAK,CAAC,IAAI,CAAC,4BAA4B,EAAE;AACrC,qBAAK,EAAL,KAAK;AACL,2BAAW,EAAX,WAAW;AACX,6BAAa,EAAb,aAAa;aAChB,CAAC,CACD,IAAI,CAAC,UAAC,QAAQ,EAAK;AAChB,oBAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;;AAElB,+BAAW,CAAC,YAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;;AAEnD,sCAAkB,CAAC,kBAAkB,EAAE,CAAC;;AAExC,2BAAO,WAAW,CAAC,UAAU,CAAC;iBACjC;aACJ,CAAC;;qBAEI,CAAC,YAAM;AACT,2BAAW,CAAC,YAAY,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;;AAEpD,kCAAkB,CAAC,0BAA0B,CAAC,6BAA6B,CAAC,CAAC;AAC7E,kCAAkB,CAAC,eAAe,CAAC,6BAA6B,CAAC,CAAC;;AAElE,uBAAO,WAAW,CAAC,UAAU,CAAC;aACjC,CAAC,CAAC;SACN;KACJ","file":"components/register/form/directives/ewf-check-account-directive.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.directive('ewfCheckAccount', EwfCheckAccount);\r\n\r\nEwfCheckAccount.$inject = ['$http', 'navigationService', 'countryCodeConverter'];\r\n\r\nexport default function EwfCheckAccount($http, navigationService, countryCodeConverter) {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ewfInput',\r\n        link: (scope, element, attrs, ctrl) => {\r\n            postLink(element, attrs, ctrl, $http, navigationService, countryCodeConverter);\r\n        }\r\n    };\r\n}\r\n\r\nfunction postLink(element, attrs, ewfInputController, $http, navigationService, countryCodeConverter) {\r\n    element.bind('input', validateAccountToEsb);\r\n\r\n    function validateAccountToEsb() {\r\n        const ngModelCtrl = ewfInputController.ngModelCtrl;\r\n\r\n        if (ngModelCtrl.$error.ewfValid) {\r\n            return;\r\n        }\r\n\r\n        const fieldId = attrs.ewfInput.split('.')[1];\r\n        const validationErrorKey = `${fieldId}A`;\r\n        const countryId = navigationService.getCountryLang().countryId;\r\n\r\n        const isImp = attrs.ewfCheckAccount === 'IMP';\r\n        const countryCode = countryCodeConverter.fromThreeLetterToCatalystFormat(countryId);\r\n        const accountNumber = element.val();\r\n\r\n        ngModelCtrl.$setValidity(validationErrorKey, false);\r\n\r\n        $http.post('/api/user/validate/account', {\r\n            isImp,\r\n            countryCode,\r\n            accountNumber\r\n        })\r\n        .then((response) => {\r\n            if (!response.length) {\r\n                // TODO: check that it real success\r\n                ngModelCtrl.$setValidity(validationErrorKey, true);\r\n\r\n                ewfInputController.cleanErrorMessages();\r\n\r\n                return ngModelCtrl.$viewValue;\r\n            }\r\n        })\r\n        // TODO: handle HTTP error like 500\r\n        .catch(() => {\r\n            ngModelCtrl.$setValidity(validationErrorKey, false);\r\n\r\n            ewfInputController.removeSpecificErrorMessage('errors.account_is_incorrect');\r\n            ewfInputController.addErrorMessage('errors.account_is_incorrect');\r\n\r\n            return ngModelCtrl.$viewValue;\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}