{"version":3,"sources":["directives/nls/nls-controller.js"],"names":[],"mappings":";;;;;qBAIwB,aAAa;;AAFrC,iBAAa,CAAC,OAAO,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;;AAE9B,aAAS,aAAa,CAAC,EAAE,EAAE,UAAU,EAAE;AAClD,YAAM,EAAE,GAAG,IAAI,CAAC;;AAEhB,UAAE,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AACzC,UAAE,CAAC,SAAS,GAAG,SAAS,CAAC;;AAEzB,YAAI,cAAc,YAAA,CAAC;;AAEnB,iBAAS,iBAAiB,CAAC,iBAAiB,EAAE;AAC1C,0BAAc,GAAG,iBAAiB,CAAC;SACtC;;;;;AAKD,iBAAS,SAAS,CAAC,MAAM,EAAE;AACvB,gBAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;AAChC,8BAAc,CAAC,EAAC,IAAI,EAAE,gBAAgB,GAAG,MAAM,GAAG,GAAG,EAAC,CAAC,CAAC;AACxD,uBAAO;aACV;;gCAE2B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;;;;gBAAxC,cAAc;gBAAE,GAAG;;AAExB,sBAAU,CAAC,aAAa,CAAC,cAAc,CAAC,CACnC,IAAI,CAAC,UAAS,UAAU,EAAE;AACvB,oBAAM,YAAY,GAAG,EAAE,CAAC;;AAExB,oBAAM,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AAC7B,oBAAI,IAAI,EAAE;AACN,gCAAY,CAAC,IAAI,GAAG,IAAI,CAAC;iBAC5B;;AAED,mBAAG,IAAI,GAAG,CAAC;AACX,oBAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;AAC7B,sBAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAC,MAAM,EAAK;AACxC,wBAAI,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,GAAG,EAAE;AACrC,4BAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC1C,oCAAY,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;qBAC/C;iBACJ,CAAC,CAAC;;AAEH,oBAAM,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AAC7D,oBAAI,eAAe,EAAE;AACjB,kCAAc,CAAC,YAAY,CAAC,CAAC;iBAChC,MAAM;AACH,kCAAc,CAAC,EAAC,IAAI,EAAE,sBAAsB,GAAG,MAAM,GAAG,GAAG,EAAC,CAAC,CAAC;iBACjE;aACJ,CAAC,SACI,CAAC,YAAW;AACd,8BAAc,CAAC,EAAC,IAAI,EAAE,4BAA4B,GAAG,cAAc,GAAG,GAAG,EAAC,CAAC,CAAC;aAC/E,CAAC,CAAC;SACV;KACJ","file":"directives/nls/nls-controller.js","sourcesContent":["import './../../services/nls-service';\r\n\r\nNLSController.$inject = ['$q', 'nlsService'];\r\n\r\nexport default function NLSController($q, nlsService) {\r\n    const vm = this;\r\n\r\n    vm.setRenderFunction = setRenderFunction;\r\n    vm.translate = translate;\r\n\r\n    let renderFunction;\r\n\r\n    function setRenderFunction(newRenderFunction) {\r\n        renderFunction = newRenderFunction;\r\n    }\r\n\r\n    /**\r\n     * @param {String} nlsKey key in form 'dictionaryName.key'\r\n     */\r\n    function translate(nlsKey) {\r\n        if (!nlsService.isValidKey(nlsKey)) {\r\n            renderFunction({text: 'wrong format \"' + nlsKey + '\"'});\r\n            return;\r\n        }\r\n\r\n        let [dictionaryName, key] = nlsKey.split('.');\r\n\r\n        nlsService.getDictionary(dictionaryName)\r\n            .then(function(dictionary) {\r\n                const translations = {};\r\n\r\n                const text = dictionary[key];\r\n                if (text) {\r\n                    translations.text = text;\r\n                }\r\n\r\n                key += '.';\r\n                const keyLength = key.length;\r\n                Object.keys(dictionary).forEach((theKey) => {\r\n                    if (theKey.substr(0, keyLength) === key) {\r\n                        const attrName = theKey.substr(keyLength);\r\n                        translations[attrName] = dictionary[theKey];\r\n                    }\r\n                });\r\n\r\n                const anyTranslations = Object.keys(translations).length > 0;\r\n                if (anyTranslations) {\r\n                    renderFunction(translations);\r\n                } else {\r\n                    renderFunction({text: 'no translation for \"' + nlsKey + '\"'});\r\n                }\r\n            })\r\n            .catch(function() {\r\n                renderFunction({text: 'can\\'t obtain dictionary \"' + dictionaryName + '\"'});\r\n            });\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}