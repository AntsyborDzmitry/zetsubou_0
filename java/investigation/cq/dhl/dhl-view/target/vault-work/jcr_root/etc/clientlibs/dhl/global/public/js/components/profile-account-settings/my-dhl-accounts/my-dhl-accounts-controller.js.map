{"version":3,"sources":["components/profile-account-settings/my-dhl-accounts/my-dhl-accounts-controller.js"],"names":[],"mappings":"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","file":"components/profile-account-settings/my-dhl-accounts/my-dhl-accounts-controller.js","sourcesContent":["import './../../../services/ewf-crud-service';\r\nimport './../../../services/ewf-spinner-service';\r\n\r\nMyDhlAccountsController.$inject = [\r\n    'logService',\r\n    'ewfCrudService',\r\n    'ewfSpinnerService'\r\n];\r\n\r\nexport default function MyDhlAccountsController(\r\n    logService,\r\n    ewfCrudService,\r\n    ewfSpinnerService) {\r\n    const vm = this;\r\n\r\n    vm.init = init;\r\n    vm.waitMessage = 'Please, wait';\r\n    vm.showDialog = showDialog;\r\n    vm.closeDialog = closeDialog;\r\n    vm.saveOrUpdate = saveOrUpdate;\r\n    vm.showAddDialog = showAddDialog;\r\n    vm.editAction = editAction;\r\n    vm.columnsToDisplay = [\r\n        {alias: 'accountNickname', title: 'my-accounts.account_name'},\r\n        {alias: 'accountNumber', title: 'my-accounts.account_number'},\r\n        {alias: 'accountType', title: 'my-accounts.account_type'},\r\n        {alias: 'billing', title: 'my-accounts.billing'}\r\n    ];\r\n    vm.gridData = [];\r\n\r\n    const emptySingleAccount = {\r\n        key: '',\r\n        accountNumber: '',\r\n        accountNickname: '',\r\n        accountType: '',\r\n        alternative: true\r\n    };\r\n\r\n    vm.singleAccount = deepCopyOfPackage(emptySingleAccount);\r\n\r\n    function init() {\r\n        vm.gridCtrl.editCallback = editAction;\r\n\r\n        const promise = ewfCrudService.getElementList('/api/myprofile/accounts')\r\n            .then((accountsData) => {\r\n                vm.gridData = accountsData;\r\n                // TODO: remove after clarifying requirements reagrding to billing\r\n                vm.gridData.map((gridRow) => {\r\n                     gridRow.billing = accountsData.status === 'APPROVED'\r\n                        ? 'eBilling Enabled'\r\n                        : 'eBilling Pending DHL Approval';\r\n                    return gridRow.billing;\r\n                });\r\n\r\n                vm.gridCtrl.rebuildGrid(vm.gridData);\r\n            });\r\n        return ewfSpinnerService.applySpinner(promise);\r\n    }\r\n\r\n    function saveOrUpdate(accountDetailsForm, ewfFormCtrl) {\r\n        ewfFormCtrl.ewfValidation();\r\n        vm.accountErrors = [];\r\n        if (accountDetailsForm.$valid) {\r\n            const updateKey = vm.singleAccount.key;\r\n            let saveOrUpdatePromise;\r\n\r\n            if (updateKey) {\r\n                saveOrUpdatePromise = ewfCrudService.updateElement('/api/myprofile/accounts/modify', vm.singleAccount)\r\n                    .then((response) => {\r\n                        let packageToUpdate = vm.gridData.find((singleAccount) => singleAccount.key === updateKey);\r\n\r\n                        copyPackageProperties(packageToUpdate, response);\r\n                        vm.gridCtrl.rebuildGrid(vm.gridData);\r\n                        closeDialog();\r\n                        vm.singleAccount = deepCopyOfPackage(emptySingleAccount);\r\n                    })\r\n                    .catch((response) => {\r\n                        vm.accountErrors = response.errors;\r\n                    });\r\n            } else {\r\n                saveOrUpdatePromise = ewfCrudService.addElement('/api/myprofile/accounts/add', vm.singleAccount)\r\n                    .then((response) => {\r\n                        vm.gridData.push(response);\r\n                        // TODO: remove after clarifying requirements reagrding to billing\r\n                        vm.gridData.map((gridRow) => {\r\n                            gridRow.billing = response.status === 'APPROVED'\r\n                                ? 'eBilling Enabled'\r\n                                : 'eBilling Pending DHL Approval';\r\n                            return gridRow.billing;\r\n                        });\r\n\r\n                        vm.gridCtrl.rebuildGrid(vm.gridData);\r\n                        closeDialog();\r\n                        vm.singleAccount = deepCopyOfPackage(emptySingleAccount);\r\n                    })\r\n                    .catch((response) => {\r\n                        vm.accountErrors = response.data.errors;\r\n                    });\r\n            }\r\n            return saveOrUpdatePromise;\r\n        }\r\n    }\r\n\r\n    function showDialog() {\r\n        vm.showEditPopup = true;\r\n    }\r\n\r\n    function showAddDialog() {\r\n        vm.singleAccount = deepCopyOfPackage(emptySingleAccount);\r\n        showDialog();\r\n    }\r\n\r\n    function closeDialog() {\r\n        vm.showEditPopup = false;\r\n    }\r\n\r\n    function editAction(key) {\r\n        vm.singleAccount = deepCopyOfPackage(vm.gridData.find((singleAccount) => singleAccount.key === key));\r\n        showDialog();\r\n    }\r\n\r\n    function deepCopyOfPackage(singleAccount) {\r\n        return angular.copy(singleAccount);\r\n    }\r\n\r\n    function copyPackageProperties(to, from) {\r\n        Object.assign(to, from);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}