{"version":3,"sources":["components/packaging-settings/packaging-measures-service.js"],"names":[],"mappings":"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","file":"components/packaging-settings/packaging-measures-service.js","sourcesContent":["import './../../services/ewf-pattern-service';\r\nimport ewf from 'ewf';\r\n\r\newf.service('packagingMeasuresService', PackagingMeasuresService);\r\n\r\nPackagingMeasuresService.$inject = ['ewfPatternService'];\r\n\r\nexport default function PackagingMeasuresService(ewfPatternService) {\r\n    const IMPERIAL = 'IMPERIAL';\r\n    const METRIC = 'METRIC';\r\n\r\n    const WEIGHT = 'WEIGHT';\r\n    const DIMENSION = 'DIMENSION';\r\n\r\n    const defaultSystem = IMPERIAL;\r\n\r\n    const units = [\r\n        {\r\n            key: 'KG',\r\n            title: 'kg',\r\n            system: METRIC,\r\n            type: WEIGHT,\r\n            factor: 1\r\n        },\r\n        {\r\n            key: 'LB',\r\n            title: 'lb',\r\n            system: IMPERIAL,\r\n            type: WEIGHT,\r\n            factor: 0.45359237\r\n        },\r\n        {\r\n            key: 'CM',\r\n            title: 'cm',\r\n            system: METRIC,\r\n            type: DIMENSION,\r\n            factor: 0.01\r\n        },\r\n        {\r\n            key: 'IN',\r\n            title: 'in',\r\n            system: IMPERIAL,\r\n            type: DIMENSION,\r\n            factor: 0.0254\r\n        }\r\n    ];\r\n\r\n    const unitsMap = {};\r\n\r\n    const UNSIGNED_FLOAT = ewfPatternService.getPattern('UNSIGNED_FLOAT');\r\n\r\n    units.forEach((item) => {\r\n        unitsMap[item.key] = item;\r\n    });\r\n\r\n    function convertValue(fromUnit, toUnit, value) {\r\n        if (!UNSIGNED_FLOAT.test(value)) {\r\n            return value;\r\n        }\r\n\r\n        const convertedValue = Number.parseFloat(value) * unitsMap[fromUnit].factor / unitsMap[toUnit].factor;\r\n\r\n        return Math.round(convertedValue * 100) / 100;\r\n    }\r\n\r\n    function getWeightUnits() {\r\n        return units.filter((item) => item.type === WEIGHT);\r\n    }\r\n\r\n    function getDimensionUnits() {\r\n        return units.filter((item) => item.type === DIMENSION);\r\n    }\r\n\r\n    function getDefaultWeightUnit() {\r\n        return units.find((item) => item.type === WEIGHT && item.system === defaultSystem);\r\n    }\r\n\r\n    function getDefaultDimensionUnit() {\r\n        return units.find((item) => item.type === DIMENSION && item.system === defaultSystem);\r\n    }\r\n\r\n    function getUnitInfo(unitKey) {\r\n        return unitsMap[unitKey];\r\n    }\r\n\r\n    return {\r\n        convertValue,\r\n\r\n        getWeightUnits,\r\n        getDimensionUnits,\r\n\r\n        getDefaultWeightUnit,\r\n        getDefaultDimensionUnit,\r\n\r\n        getUnitInfo\r\n    };\r\n}\r\n"],"sourceRoot":"/source/"}