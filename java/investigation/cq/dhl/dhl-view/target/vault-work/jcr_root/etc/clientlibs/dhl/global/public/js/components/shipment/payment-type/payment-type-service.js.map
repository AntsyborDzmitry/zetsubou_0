{"version":3,"sources":["components/shipment/payment-type/payment-type-service.js"],"names":[],"mappings":"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","file":"components/shipment/payment-type/payment-type-service.js","sourcesContent":["import ewf from 'ewf';\r\nimport './../ewf-shipment-error-service';\r\n\r\newf.service('paymentTypeService', paymentTypeService);\r\n\r\npaymentTypeService.$inject = ['$http', '$q', 'logService', 'shipmentErrorService', 'nlsService'];\r\n\r\nexport default function paymentTypeService($http, $q, logService, shipmentErrorService, nlsService) {\r\n    const SHIPMENT_TYPES = {\r\n        IMPORT: 'import',\r\n        EXPORT: 'export',\r\n        DOMESTIC: 'domestic'\r\n    };\r\n\r\n    const INCOTERMS_DEFAULTS = {\r\n        RECEIVER_WILL_PAY: 'DAP',\r\n        EXPORT_ACCOUNT_NUMBER: 'DTP',\r\n        IMPORT_ACCOUNT_NUMBER: 'DAP',\r\n        ALTERNATE_DHLACCOUNT: 'DAP'\r\n    };\r\n\r\n    const DUTIES_DEFAULT_TITLES = {\r\n        IMPORT: 'importDutiesAndTaxesAccount',\r\n        EXPORT: 'exportDutiesAndTaxesAccount',\r\n        RETURN: 'returnDutiesAndTaxesAccount'\r\n    };\r\n\r\n    const USER_PROFILE_DEFAULT_VALUES = {\r\n        DHL_ACCOUNT: 'account',\r\n        ALTERNATE_DHLACCOUNT: 'alternate',\r\n        RECEIVER_WILL_PAY: 'receiverPay'\r\n    };\r\n\r\n    const PAYMENT_TYPES = {\r\n        DHL_ACCOUNT: 'DHL_ACCOUNT',\r\n        ALTERNATE_DHLACCOUNT: 'ALTERNATE_DHLACCOUNT',\r\n        CREDIT_CARD: 'CREDIT_CARD',\r\n        PAYPAL: 'PAYPAL',\r\n        CASH: 'CASH',\r\n        RECEIVER_WILL_PAY: 'RECEIVER_WILL_PAY'\r\n    };\r\n\r\n    const publicApi = {\r\n        getPaymentTypeList,\r\n        validatePaymentAccount,\r\n        getIncoterms,\r\n        getIncotermDefaultValueForDutiesAndTaxes,\r\n        getAssociatedOption,\r\n        hasAccounts,\r\n        isCreditCardPayment,\r\n        getPaymentProducts,\r\n        getCreditBuffer,\r\n        PAYMENT_TYPES,\r\n        SHIPMENT_TYPES\r\n    };\r\n\r\n    let paymentOptionsList = [];\r\n\r\n    function getPaymentTypeList(shipmentCountry, keys, shipmentType, filterDutiesAndTaxes = false) {\r\n        const data = {\r\n            shipmentCountry,\r\n            fromContactKey: keys.fromContactKey || '',\r\n            toContactKey: keys.toContactKey || ''\r\n        };\r\n        return $http.post(`/api/shipment/payment/list`, data)\r\n            //@todo Remove credit card payment method mapping once BE is updated\r\n            .then((response) => {\r\n                response.data.paymentOptions.map((paymentOption) => {\r\n                    if (paymentOption.paymentType === PAYMENT_TYPES.CREDIT_CARD) {\r\n                        PAYMENT_TYPES.CREDIT_CARD = 'CRC';\r\n                        paymentOption.paymentType = PAYMENT_TYPES.CREDIT_CARD;\r\n                    }\r\n                    return paymentOption;\r\n                });\r\n                return response;\r\n            })\r\n            .then((response) => {\r\n                paymentOptionsList = response.data.paymentOptions;\r\n                return filterPaymentTypeListResponse(response.data, shipmentType, filterDutiesAndTaxes);\r\n            })\r\n            .catch((response) => {\r\n                logService.log(`Payment type failed with ${response.data}`);\r\n                return $q.reject(response.data);\r\n            });\r\n    }\r\n\r\n    function validatePaymentAccount(data, shipmentType) {\r\n        data.isDomestic = shipmentType === SHIPMENT_TYPES.DOMESTIC;\r\n        data.isExport = shipmentType === SHIPMENT_TYPES.EXPORT;\r\n        data.isImport = shipmentType === SHIPMENT_TYPES.IMPORT;\r\n\r\n        return $http.post('/api/shipment/payment/account/validate', data)\r\n            .then((response) => response.data)\r\n            .catch((response) => {\r\n                logService.log(`Validation failed ${response.data}`);\r\n                return shipmentErrorService.processErrorCode(response);\r\n            });\r\n    }\r\n\r\n    function getIncoterms(shipmentCountry) {\r\n        return $http.get(`/api/shipment/payment/incoterm/list/${shipmentCountry}`)\r\n            .then((response) => ({\r\n                incoterms: sortIncoterms(response.data.incoterms),\r\n                defaultIncotermCode: response.data.defaultIncotermCode\r\n            }))\r\n            .catch((response) => {\r\n                logService.log(`Custom terms of trade failed with ${response.data}`);\r\n            });\r\n    }\r\n\r\n    function sortIncoterms(list) {\r\n        return list.sort((first, second) => {\r\n            if (first.code < second.code) {\r\n                return -1;\r\n            } else if (first.code > second.code) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    function getIncotermDefaultValueForDutiesAndTaxes(data) {\r\n        const incotermForDuties = getAssosiatedIncoterm(data.dutiesTypeSelected);\r\n        let incotermForTaxes;\r\n        if (data.splitDutiesAndTaxes) {\r\n            incotermForTaxes = getAssosiatedIncoterm(data.taxesTypeSelected);\r\n        }\r\n        if ((!incotermForTaxes && incotermForDuties) || (incotermForDuties === incotermForTaxes)) {\r\n            return {code: incotermForDuties};\r\n        }\r\n    }\r\n\r\n    function getAssosiatedIncoterm(option) {\r\n        let incotermDefault;\r\n        const dutiesPaymentType = option.paymentType;\r\n        if (dutiesPaymentType === PAYMENT_TYPES.RECEIVER_WILL_PAY) {\r\n            incotermDefault = INCOTERMS_DEFAULTS.RECEIVER_WILL_PAY;\r\n        } else if (dutiesPaymentType === PAYMENT_TYPES.ALTERNATE_DHLACCOUNT) {\r\n            incotermDefault = INCOTERMS_DEFAULTS.ALTERNATE_DHLACCOUNT;\r\n        } else if (dutiesPaymentType === PAYMENT_TYPES.DHL_ACCOUNT) {\r\n            if (option.isImport) {\r\n                incotermDefault = INCOTERMS_DEFAULTS.IMPORT_ACCOUNT_NUMBER;\r\n            } else if (!option.isLocal) {\r\n                incotermDefault = INCOTERMS_DEFAULTS.EXPORT_ACCOUNT_NUMBER;\r\n            }\r\n        }\r\n        return incotermDefault;\r\n    }\r\n\r\n    function filterPaymentTypeListResponse(data, shipmentType, filterDutiesAndTaxes) {\r\n        let response = {};\r\n        data.paymentOptions = getValidPaymentOptions(data.paymentOptions, shipmentType);\r\n        if (filterDutiesAndTaxes) {\r\n            response.defaults = getDutiesAndTaxesDefaults(data, shipmentType);\r\n        }\r\n        response.paymentOptions = data.paymentOptions;\r\n        return response;\r\n    }\r\n\r\n    function getValidPaymentOptions(data, shipmentType) {\r\n        return data.filter(isValidPaymentType.bind(this, shipmentType));\r\n    }\r\n\r\n    function isValidPaymentType(shipmentType, item) {\r\n        return shipmentType !== SHIPMENT_TYPES.IMPORT || item.paymentType !== PAYMENT_TYPES.DHL_ACCOUNT ||\r\n            (shipmentType === SHIPMENT_TYPES.IMPORT && item.isImport);\r\n    }\r\n\r\n    function formatContactSettingsDefaults(paymentSettings) {\r\n        const settings = paymentSettings || {};\r\n        const defaults = {};\r\n\r\n        Object.keys(settings).forEach((key) => {\r\n            if (settings[key]) {\r\n                defaults[key] = formatContactSettingsPaymentOption(settings[key]);\r\n            }\r\n        });\r\n        return defaults;\r\n    }\r\n\r\n    function formatContactSettingsPaymentOption(option) {\r\n        let optionFormatted = {};\r\n        optionFormatted.paymentType = option.type;\r\n        if (option.type === PAYMENT_TYPES.DHL_ACCOUNT) {\r\n            optionFormatted.key = option.key;\r\n        }\r\n        return optionFormatted;\r\n    }\r\n\r\n    function filterUserProfileDutiesAndTaxesDefaults(data, shipmentType) {\r\n        let defaultValue;\r\n        if (data) {\r\n            const type = shipmentType.toUpperCase();\r\n            defaultValue = data[DUTIES_DEFAULT_TITLES[type]];\r\n        }\r\n        let defaultOption = {};\r\n        if (defaultValue && defaultValue.type === USER_PROFILE_DEFAULT_VALUES.ALTERNATE_DHLACCOUNT) {\r\n            defaultOption.paymentType = PAYMENT_TYPES.ALTERNATE_DHLACCOUNT;\r\n        } else if (defaultValue && defaultValue.type === USER_PROFILE_DEFAULT_VALUES.DHL_ACCOUNT) {\r\n            defaultOption.paymentType = PAYMENT_TYPES.DHL_ACCOUNT;\r\n            defaultOption.key = defaultValue.data.key;\r\n        } else {\r\n            defaultOption.paymentType = PAYMENT_TYPES.RECEIVER_WILL_PAY;\r\n        }\r\n        return defaultOption;\r\n    }\r\n\r\n    function getDutiesAndTaxesDefaults(data, shipmentType) {\r\n        const defaults = filterResponseDefaultValues(data, shipmentType);\r\n        const paymentOptions = data.paymentOptions;\r\n        let dutiesAndTaxesDefaults = getDutiesAndTaxesContactDefaultValues(defaults, paymentOptions);\r\n\r\n        if (!dutiesAndTaxesDefaults.duties && defaults.userProfile) {\r\n            dutiesAndTaxesDefaults.duties = getAssociatedOption(paymentOptions, defaults.userProfile);\r\n        }\r\n\r\n        dutiesAndTaxesDefaults.duties = dutiesAndTaxesDefaults.duties ||\r\n                getAssociatedOption(paymentOptions, {paymentType: PAYMENT_TYPES.RECEIVER_WILL_PAY});\r\n        dutiesAndTaxesDefaults.taxes = dutiesAndTaxesDefaults.taxes || dutiesAndTaxesDefaults.duties;\r\n\r\n        return dutiesAndTaxesDefaults;\r\n    }\r\n\r\n    function getDutiesAndTaxesContactDefaultValues(defaults, paymentOptions) {\r\n        let dutiesAndTaxesDefaults = {};\r\n        ['toContact', 'fromContact'].forEach((item) => {\r\n            if (!dutiesAndTaxesDefaults.duties && defaults[item]) {\r\n                dutiesAndTaxesDefaults = {\r\n                    duties: getAssociatedOption(paymentOptions, defaults[item].accountForDuties),\r\n                    taxes: getAssociatedOption(paymentOptions, defaults[item].accountForTaxes)\r\n                };\r\n            }\r\n        });\r\n        return dutiesAndTaxesDefaults;\r\n    }\r\n\r\n    function filterResponseDefaultValues(data, shipmentType) {\r\n        return {\r\n            toContact: formatContactSettingsDefaults(data.toPaymentSetting),\r\n            fromContact: formatContactSettingsDefaults(data.fromPaymentSetting),\r\n            userProfile: filterUserProfileDutiesAndTaxesDefaults(data.userDefaults, shipmentType)\r\n        };\r\n    }\r\n\r\n    function getAssociatedOption(options, selectedOption) {\r\n        if (selectedOption) {\r\n            return options.find((item) => (selectedOption.key && selectedOption.key === item.key) ||\r\n                (!selectedOption.key && selectedOption.paymentType === item.paymentType));\r\n        }\r\n    }\r\n\r\n    function hasAccounts() {\r\n        return paymentOptionsList && paymentOptionsList.some((item) => item.paymentType === PAYMENT_TYPES.DHL_ACCOUNT);\r\n    }\r\n\r\n    function isCreditCardPayment(payment) {\r\n        return payment.paymentType === PAYMENT_TYPES.CREDIT_CARD;\r\n    }\r\n\r\n    function getPaymentProducts(countryId) {\r\n        return $http.get(`/api/payment/list?country=${countryId}`)\r\n            .then((response) => Array.isArray(response.data) ? response.data : $q.reject(response))\r\n            .then((creditCards) => creditCards.map(attachCreditCardLabel))\r\n            .catch((response) => {\r\n                shipmentErrorService.processErrorCode(response);\r\n\r\n                /** mock, to be removed */\r\n                return [\r\n                    {\r\n                        paymentProductId: '1',\r\n                        paymentProduct: 'visa',\r\n                        img: '/etc/clientlibs/dhl/global/public/img/credit-cards/visa.png',\r\n                        label: 'Visa'\r\n                    },\r\n                    {\r\n                        paymentProductId: '2',\r\n                        paymentProduct: 'maestro',\r\n                        img: '/etc/clientlibs/dhl/global/public/img/credit-cards/maestro.png',\r\n                        label: 'Maestro'\r\n                    },\r\n                    {\r\n                        paymentProductId: '3',\r\n                        paymentProduct: 'amex',\r\n                        img: '/etc/clientlibs/dhl/global/public/img/credit-cards/amex.png',\r\n                        label: 'American Express'\r\n                    }\r\n                ];\r\n            });\r\n    }\r\n\r\n    function attachCreditCardLabel(card) {\r\n        card.label = nlsService.getTranslationSync(`shipment.credit_card_${card.paymentProduct}`);\r\n        return card;\r\n    }\r\n\r\n    function getCreditBuffer(countryId) {\r\n        const url = `/api/payment/buffer?country=${countryId}`;\r\n\r\n        return $http.get(url)\r\n            .then((response) => response.data.buffer || $q.reject(response))\r\n            .catch((response) => {\r\n                shipmentErrorService.processErrorCode(response);\r\n\r\n                /** mock, to be removed */\r\n                return 20;\r\n            });\r\n    }\r\n\r\n    return publicApi;\r\n}\r\n"],"sourceRoot":"/source/"}