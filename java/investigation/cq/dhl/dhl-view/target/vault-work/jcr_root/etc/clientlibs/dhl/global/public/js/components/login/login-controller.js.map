{"version":3,"sources":["components/login/login-controller.js"],"names":[],"mappings":"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","file":"components/login/login-controller.js","sourcesContent":["import './../../services/user-service';\r\nimport './../../services/nls-service';\r\nimport './../../services/modal/modal-service';\r\n\r\nLoginController.$inject = [\r\n    '$scope',\r\n    'modalService',\r\n    'navigationService',\r\n    'userService',\r\n    'loginService',\r\n    'nlsService'\r\n];\r\n\r\n/**\r\n * Login form controller\r\n */\r\nexport default function LoginController(\r\n    $scope,\r\n    modalService,\r\n    navigationService,\r\n    userService,\r\n    loginService,\r\n    nlsService) {\r\n    const vm = this;\r\n\r\n    Object.assign(vm, {\r\n        username: userService.getUsername() || '',\r\n        password: '',\r\n        rememberMe: false,\r\n        userInactive: false,\r\n        loginErrors: [],\r\n        formTitle: vm.formTitle || loginService.resolveFormTitle(),\r\n        ewfFormCtrl: null,\r\n        activationSuccessMessage: '',\r\n\r\n        logIn,\r\n        resendActivationEmail,\r\n        startPasswordChangeProcess,\r\n        closeStopCreditDialog\r\n    });\r\n    let dialogPromise;\r\n\r\n    function logIn(validationState) {\r\n        if (validationState.$valid) {\r\n            $scope.submitted = true;\r\n            $scope.$broadcast('ValidateForm');\r\n            vm.loginErrors = [];\r\n            return userService.logIn(vm.username, vm.password)\r\n                .then(processCreditStopCheck)\r\n                .then((data) => {\r\n                    checkRememberMe();\r\n                    doRedirect(data);\r\n                })\r\n                .catch(onLogInError);\r\n        }\r\n    }\r\n\r\n    function processCreditStopCheck(data) {\r\n        if (data.accountCreditStopMsg) {\r\n            showCreditStopNotification();\r\n            return dialogPromise.result\r\n                .then(() => data);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    function checkRememberMe() {\r\n        if (vm.rememberMe) {\r\n            userService.setUsername(vm.username);\r\n        }\r\n    }\r\n\r\n    function doRedirect(data) {\r\n        let location = 'user-profile.html';\r\n\r\n        if (data.shipmentExpert) {\r\n            location = 'shipment.html';\r\n        }\r\n\r\n        if (data.paperlessTrading) {\r\n            location = 'dashboard.html';\r\n        }\r\n\r\n        navigationService.location(location);\r\n    }\r\n\r\n    function onLogInError(errors) {\r\n        vm.ewfFormCtrl.setErrorsFromResponse(errors);\r\n\r\n        if (errors.errors) {\r\n            if (loginService.isPasswordExpired(errors.errors)) {\r\n                handleExpiredPassword();\r\n            } else if (loginService.isUserInactive(errors.errors)) {\r\n                vm.formTitle = loginService.titles.DEFAULT;\r\n                vm.userInactive = true;\r\n            } else if (loginService.isUserInactiveAndActivationExpired(errors.errors)) {\r\n                vm.formTitle = loginService.titles.ACTIVATION_EMAIL_EXPIRED;\r\n                vm.userInactive = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    function resendActivationEmail() {\r\n        userService.resendActivationEmail(vm.username)\r\n            .then(() => {\r\n                vm.formTitle = loginService.titles.ACTIVATION_EMAIL_SENT;\r\n                vm.ewfFormCtrl.cleanFormErrors();\r\n                showActivationResendSuccessMessage();\r\n                vm.userInactive = false;\r\n            })\r\n            .catch((errCode) => {\r\n                vm.formTitle = loginService.titles.DEFAULT;\r\n                vm.ewfFormCtrl.setErrorsFromResponse(errCode);\r\n            });\r\n    }\r\n\r\n    function startPasswordChangeProcess() {\r\n        userService.setPassword(vm.password);\r\n        userService.setUsername(vm.username);\r\n        navigationService.location('/auth/reset-password.html?scenario=change');\r\n    }\r\n\r\n    function showActivationResendSuccessMessage() {\r\n        const loginActivationDaysLimit = loginService.getLoginActivationDaysLimit();\r\n        vm.activationSuccessMessage = nlsService.getTranslationSync('login.activation_resend_success')\r\n            .replace('{number}', loginActivationDaysLimit);\r\n\r\n       modalService.showDialog({\r\n            closeOnEsc: true,\r\n            scope: $scope,\r\n            windowClass: 'ngdialog-theme-default',\r\n            template:'<div ewf-modal><div id=modal_resendActivation><h3 nls=login.activation_email_sent></h3><div class=ngdialog-message>{{loginCtrl.activationSuccessMessage}}</div></div></div>'\r\n        });\r\n    }\r\n\r\n    function showCreditStopNotification() {\r\n        dialogPromise = modalService.showDialog({\r\n            closeOnEsc: false,\r\n            scope: $scope,\r\n            windowClass: 'ngdialog-theme-default',\r\n            showClose: false,\r\n            template:'<div ewf-modal><div class=ngdialog-message nls=login.credit_stop_message></div><button ng-click=loginCtrl.closeStopCreditDialog() nls=login.credit_stop_close_button_lable></button></div>'\r\n        });\r\n    }\r\n\r\n    function handleExpiredPassword() {\r\n        modalService.showDialog({\r\n            closeOnEsc: false,\r\n            scope: $scope,\r\n            windowClass: 'ngdialog-theme-default',\r\n            showClose: false,\r\n            template:'<div ewf-modal><div id=modal_continueExpiredPassword><div class=ngdialog-message nls=login.password_expired_message></div><button ng-click=loginCtrl.startPasswordChangeProcess() nls=login.continue_with_change_expired_password></button></div></div>'\r\n        });\r\n    }\r\n\r\n    function closeStopCreditDialog() {\r\n        dialogPromise.close();\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}