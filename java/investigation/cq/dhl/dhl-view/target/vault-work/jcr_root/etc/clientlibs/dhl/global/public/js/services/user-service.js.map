{"version":3,"sources":["services/user-service.js"],"names":[],"mappings":"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","file":"services/user-service.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.service('userService', userService);\r\n\r\nuserService.$inject = ['$http', '$q', 'logService', 'localStorageService'];\r\n\r\nexport default function userService($http, $q, logService, localStorageService) {\r\n    const publicAPI = {\r\n        logIn,\r\n        logOut,\r\n        setUsername,\r\n        getUsername,\r\n        getPassword,\r\n        setPassword,\r\n        resendActivationEmail,\r\n        clearStoredCredentials,\r\n        whoAmI,\r\n        isAuthorized,\r\n        getUserCountry\r\n    };\r\n\r\n    let whoAmIPromise;\r\n    let userInfo;\r\n\r\n    const storageKey = {\r\n        username: 'dhlUsername',\r\n        password: 'dhlPassword'\r\n    };\r\n\r\n    function logIn(username, password) {\r\n        const credentials = {\r\n            username,\r\n            password\r\n        };\r\n\r\n        return $http.post('/api/auth/login', credentials)\r\n            .then((response) => response.data)\r\n            .catch((response) => {\r\n                const data = response.data || {};\r\n                const errors = data.errors || ['login.server_temporary_unavailable'];\r\n                const errorMsg = 'ERROR: userService#logIn: '\r\n                    + response.status + ' - '\r\n                    + errors.join(',');\r\n                logService.error(errorMsg);\r\n                return $q.reject({errors});\r\n            });\r\n    }\r\n\r\n    function logOut() {\r\n        return $http.post('/api/auth/logout')\r\n            .catch((error) => {\r\n                logService.error('logoutRequest in userService failed' + error);\r\n                return $q.reject(error.data);\r\n            });\r\n    }\r\n\r\n    function resendActivationEmail(email) {\r\n        return $http.post('/api/user/activationEmail/send', {username: email})\r\n            .then((response) => response.data)\r\n            .catch((response) => {\r\n                return $q.reject(response);\r\n            });\r\n    }\r\n\r\n    function setUsername(username) {\r\n        localStorageService.set(storageKey.username, username);\r\n    }\r\n\r\n    function getUsername() {\r\n        return localStorageService.get(storageKey.username);\r\n    }\r\n\r\n    function setPassword(password) {\r\n        localStorageService.set(storageKey.password, password);\r\n    }\r\n\r\n    function getPassword() {\r\n        return localStorageService.get(storageKey.password);\r\n    }\r\n\r\n    function clearStoredCredentials() {\r\n        localStorageService.remove(storageKey.password);\r\n        localStorageService.remove(storageKey.username);\r\n    }\r\n\r\n    function whoAmI() {\r\n        if (!whoAmIPromise) {\r\n            whoAmIPromise = $http.get('/api/auth/whoami')\r\n                .then((response) => {\r\n                    userInfo = response.data;\r\n                    return response.data;\r\n                })\r\n                .catch((response) => {\r\n                    logService(response.data);\r\n                    return $q.reject(response.data);\r\n                });\r\n        }\r\n        return whoAmIPromise;\r\n    }\r\n\r\n    /**\r\n     * Be careful, method 'isAuthorized' is synchronous\r\n     * if you not sure in your code, please use whoAmI method\r\n     */\r\n    function isAuthorized() {\r\n        if (userInfo) {\r\n            return !userInfo.groups.includes('guest');\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getUserCountry() {\r\n        if (userInfo) {\r\n            return userInfo.countryCode2;\r\n        }\r\n        return 'US';\r\n    }\r\n\r\n    return publicAPI;\r\n}\r\n"],"sourceRoot":"/source/"}