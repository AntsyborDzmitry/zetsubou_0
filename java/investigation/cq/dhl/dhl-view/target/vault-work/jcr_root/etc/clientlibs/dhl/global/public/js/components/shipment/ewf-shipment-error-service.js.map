{"version":3,"sources":["components/shipment/ewf-shipment-error-service.js"],"names":[],"mappings":";;;qBAMwB,oBAAoB;;;;;;AAJ5C,qBAAI,OAAO,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,CAAC;;AAE1D,wBAAoB,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;;AAEvB,aAAS,oBAAoB,CAAC,EAAE,EAAE;;AAE7C,YAAI,CAAC,gBAAgB,GAAG,UAAC,QAAQ,EAAK;AAClC,gBAAI,OAAO,YAAA,CAAC;AACZ,gBAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;AACvC,uBAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACrC,MAAM;AACH,uBAAO,GAAG,sCAAsC,CAAC;aACpD;AACD,mBAAO,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC7B,CAAC;KACL","file":"components/shipment/ewf-shipment-error-service.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.service('shipmentErrorService', shipmentErrorService);\r\n\r\nshipmentErrorService.$inject = ['$q'];\r\n\r\nexport default function shipmentErrorService($q) {\r\n\r\n    this.processErrorCode = (response) => {\r\n        let errCode;\r\n        if (response.data && response.data.errors) {\r\n            errCode = response.data.errors[0];\r\n        } else {\r\n            errCode = 'common.service_currently_unavailable';\r\n        }\r\n        return $q.reject(errCode);\r\n    };\r\n}\r\n"],"sourceRoot":"/source/"}