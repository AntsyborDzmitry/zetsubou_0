{"version":3,"sources":["directives/ewf-validate/ewf-validate-pattern-directive.js"],"names":[],"mappings":";;;qBAQwB,kBAAkB;;;;;;AAJ1C,qBAAI,SAAS,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;;AAExD,sBAAkB,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,mBAAmB,EAAE,mBAAmB,CAAC,CAAC;;AAEnE,aAAS,kBAAkB,CAAC,MAAM,EAAE,iBAAiB,EAAE,iBAAiB,EAAE;AACrF,YAAM,cAAc,GAAG;AACnB,2BAAe,EAAE,KAAK;AACtB,2BAAe,EAAE,KAAK;SACzB,CAAC;;AAEF,YAAM,cAAc,GAAG,EAAE,CAAC;;AAE1B,eAAO;AACH,oBAAQ,EAAE,GAAG;AACb,mBAAO,EAAE,UAAU;AACnB,gBAAI,EAAE;AACF,mBAAG,EAAE,aAAS,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,kBAAkB,EAAE;AACrD,wBAAM,qBAAqB,GAAG,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,EAAE,CAAC;;AAExE,wBAAM,iBAAiB,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE,qBAAqB,CAAC,CAAC;;AAEpF,wBAAM,UAAU,GAAG,iBAAiB,CAAC,eAAe,GAChD,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE,GAClC,KAAK,CAAC,kBAAkB,CAAC;;AAE7B,wBAAM,iBAAiB,GAAG,iBAAiB,CAAC,UAAU,CAAC,UAAU,EAAE,iBAAiB,CAAC,eAAe,CAAC,CAAC;;AAEtG,wBAAM,iBAAiB,GAAG,KAAK,CAAC,yBAAyB,IAAI,cAAc,CAAC;;AAE5E,wBAAM,SAAS,GAAG,iBAAiB,CAAC,eAAe,CAAC,SAAS,EAAE;AAC3D,6BAAK,EAAE,iBAAiB;AACxB,2BAAG,EAAE,iBAAiB;qBACzB,CAAC,CAAC;;AAEH,sCAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;iBAC9C;aACJ;SACJ,CAAC;KACL","file":"directives/ewf-validate/ewf-validate-pattern-directive.js","sourcesContent":["import ewf from 'ewf';\r\nimport './../../validation/validators-factory';\r\nimport './../../services/ewf-pattern-service';\r\n\r\newf.directive('ewfValidatePattern', EwfValidatePattern);\r\n\r\nEwfValidatePattern.$inject = ['$parse', 'validatorsFactory', 'ewfPatternService'];\r\n\r\nexport default function EwfValidatePattern($parse, validatorsFactory, ewfPatternService) {\r\n    const defaultOptions = {\r\n        inputAsVariable: false,\r\n        patternModifier: false\r\n    };\r\n\r\n    const defaultMessage = '';\r\n\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ewfInput',\r\n        link: {\r\n            pre: function(scope, element, attrs, ewfInputController) {\r\n                const inputValidationOption = $parse(attrs.ewfValidatePatternOptions)();\r\n\r\n                const validationOptions = angular.extend({}, defaultOptions, inputValidationOption);\r\n\r\n                const patternKey = validationOptions.inputAsVariable ?\r\n                    $parse(attrs.ewfValidatePattern)() :\r\n                    attrs.ewfValidatePattern;\r\n\r\n                const validationPattern = ewfPatternService.getPattern(patternKey, validationOptions.patternModifier);\r\n\r\n                const validationMessage = attrs.ewfValidatePatternMessage || defaultMessage;\r\n\r\n                const validator = validatorsFactory.createValidator('pattern', {\r\n                    value: validationPattern,\r\n                    msg: validationMessage\r\n                });\r\n\r\n                ewfInputController.addValidator(validator);\r\n            }\r\n        }\r\n    };\r\n}\r\n"],"sourceRoot":"/source/"}