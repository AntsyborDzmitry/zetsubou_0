{"version":3,"sources":["services/date-time-service.js"],"names":[],"mappings":"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","file":"services/date-time-service.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.service('dateTimeService', DateTimeService);\r\n\r\nDateTimeService.$inject = ['$filter', 'nlsService'];\r\n\r\nexport default function DateTimeService($filter, nlsService) {\r\n    const publicApi = {\r\n        normalizeDate,\r\n        getFormattedDate,\r\n        getFormattedDay,\r\n        getLocalizedMonth,\r\n        getShortDate,\r\n        getFormattedTime,\r\n        getReadyByTime,\r\n        msToMin,\r\n        minToMs,\r\n        isToday\r\n    };\r\n\r\n    function normalizeDate(date, shipmentTimezoneOffset = 0) {\r\n        let result = new Date(date),\r\n            timeZoneDiff = shipmentTimezoneOffset + (result.getTimezoneOffset() * 60 * 1000);\r\n\r\n        result.setTime(result.getTime() + timeZoneDiff);\r\n        return result;\r\n    }\r\n\r\n    function getFormattedDate(date) {\r\n        const dateNormalized = normalizeDate(date);\r\n        return $filter('date')(dateNormalized, 'd');\r\n    }\r\n\r\n    function getFormattedDay(date, shipmentTimezoneOffset) {\r\n        const localDate = normalizeDate(new Date(), shipmentTimezoneOffset);\r\n        const tomorrow = new Date().setDate(localDate.getDate() + 1);\r\n        const dateFormatted = $filter('date')(date, 'mediumDate');\r\n        const todayFormatted = $filter('date')(localDate, 'mediumDate');\r\n        const tomorrowFormatted = $filter('date')(tomorrow, 'mediumDate');\r\n        let dayFormatted;\r\n        switch (dateFormatted) {\r\n            case todayFormatted:\r\n                dayFormatted = 'today';\r\n                break;\r\n            case tomorrowFormatted:\r\n                dayFormatted = 'tomorrow';\r\n                break;\r\n            default:\r\n                dayFormatted = $filter('date')(date, 'EEEE').toLowerCase();\r\n        }\r\n        return nlsService.getTranslationSync(`datetime.${dayFormatted}`);\r\n    }\r\n\r\n    function getLocalizedMonth(date) {\r\n        const dateNormalized = normalizeDate(date);\r\n        const monthFormatted = $filter('date')(dateNormalized, 'MMMM').toLowerCase();\r\n        return nlsService.getTranslationSync(`datetime.${monthFormatted}`);\r\n    }\r\n\r\n    function getShortDate(date) {\r\n        const dateNormalized = normalizeDate(date);\r\n        return $filter('date')(dateNormalized, 'MM/dd/yyyy');\r\n    }\r\n\r\n    function getFormattedTime(time, withAmPmMarker = false) {\r\n        const date = getClosestQuarter(time, true);\r\n        if (withAmPmMarker) {\r\n            return formatAMPM(date);\r\n        }\r\n        return `${date.getUTCHours()}:${formatMinutes(date)}`;\r\n    }\r\n\r\n    function formatMinutes(date) {\r\n        const minutes = date.getUTCMinutes();\r\n        return (minutes < 10) ? '0' + minutes : minutes;\r\n    }\r\n\r\n    function formatAMPM(date) {\r\n        let hours = date.getUTCHours();\r\n        let minutes = formatMinutes(date);\r\n        const ampm = (hours >= 12) ? 'pm' : 'am';\r\n        hours %= 12;\r\n        hours = hours ? hours : 12;\r\n        return `${hours}:${minutes} ${ampm}`;\r\n    }\r\n\r\n    function getReadyByTime(earliestPickup, offset, pickupDate) {\r\n        const pickupDateNormalized = normalizeDate(pickupDate);\r\n        let date = new Date();\r\n        const currentTime = getHoursMinutesInMs(date) + offset;\r\n        const readyByTime = (currentTime < earliestPickup || pickupDateNormalized > date)\r\n            ? earliestPickup\r\n            : getReadyByTimeFromCurrentTime(currentTime);\r\n        return msToMin(readyByTime);\r\n    }\r\n\r\n    function getReadyByTimeFromCurrentTime(currentTime) {\r\n        const date = getClosestQuarter(currentTime);\r\n        return getHoursMinutesInMs(date);\r\n    }\r\n\r\n    function getHoursMinutesInMs(date) {\r\n        return date.getUTCHours() * 3600000 + date.getUTCMinutes() * 60000;\r\n    }\r\n\r\n    function msToMin(time) {\r\n        return time / 60000;\r\n    }\r\n\r\n    function minToMs(time) {\r\n        return time * 60000;\r\n    }\r\n\r\n    function isToday(date, offset) {\r\n        const localDate = normalizeDate(new Date(), offset);\r\n        const today = $filter('date')(localDate, 'yyyy-MM-dd');\r\n        return today === date;\r\n    }\r\n\r\n    function getClosestQuarter(time, adjustToPastTime = false) {\r\n        const PICKUP_TIME_INTERVAL = 15;\r\n        const date = new Date(time);\r\n        const minutesDiff = date.getMinutes() % PICKUP_TIME_INTERVAL;\r\n        if (minutesDiff) {\r\n            let minutes = date.getMinutes() - minutesDiff;\r\n            minutes = adjustToPastTime ? minutes : minutes + PICKUP_TIME_INTERVAL;\r\n            let hours = date.getHours();\r\n            if (minutes === 60) {\r\n                date.setHours(++hours);\r\n                minutes = 0;\r\n            }\r\n            date.setMinutes(minutes);\r\n        }\r\n        return date;\r\n    }\r\n\r\n    return publicApi;\r\n}\r\n"],"sourceRoot":"/source/"}