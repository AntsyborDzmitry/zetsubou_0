{"version":3,"sources":["directives/ewf-account-field/ewf-account-field-controller.js"],"names":[],"mappings":"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","file":"directives/ewf-account-field/ewf-account-field-controller.js","sourcesContent":["import '../../services/rule-service';\r\n\r\nAccountFieldController.$inject = ['$scope', 'ruleService', '$timeout'];\r\n\r\nexport default function AccountFieldController($scope, ruleService, $timeout) {\r\n    const vm = this;\r\n    const user = vm.user = $scope.regCtrl.user;\r\n    let uuid = 0;\r\n    let rules;\r\n\r\n    vm.maxArrayLengthValid = true;\r\n\r\n    vm.add = addAccount;\r\n    vm.remove = removeAccount;\r\n\r\n    vm.isUserHasMultiplyAccounts = isUserHasMultiplyAccounts;\r\n    vm.isItemFirstInArray = isItemFirstInArray;\r\n\r\n    vm.setFieldId = setFieldId;\r\n\r\n    init();\r\n\r\n    function init() {\r\n        addAccount();\r\n        user.primaryAccountId = user.accountNumbers[0].id;\r\n        $timeout(function() {\r\n           $scope.registrationAccountForm.$invalid = true;\r\n        });\r\n    }\r\n\r\n    function removeAccount(acc) {\r\n        if (isUserHasMultiplyAccounts()) {\r\n            if (!isItemFirstInArray(acc)) {\r\n                const position = user.accountNumbers.indexOf(acc);\r\n                user.accountNumbers.splice(position, 1);\r\n                if (user.primaryAccountId === acc.id) {\r\n                    user.primaryAccountId = user.accountNumbers[0].id;\r\n                }\r\n            }\r\n        }\r\n        validateMaxArrayLength();\r\n    }\r\n\r\n    function addAccount() {\r\n        const acc = {\r\n            id: getUniqueId(),\r\n            account: '',\r\n            primary: false\r\n        };\r\n\r\n        user.accountNumbers.push(acc);\r\n        validateMaxArrayLength();\r\n    }\r\n\r\n    function getUniqueId() {\r\n        return uuid++;\r\n    }\r\n\r\n    function isUserHasMultiplyAccounts() {\r\n        return user.accountNumbers.length > 1;\r\n    }\r\n\r\n    function isItemFirstInArray(item) {\r\n        return user.accountNumbers.indexOf(item) === 0;\r\n    }\r\n\r\n    function setFieldId(fieldId) {\r\n        vm.fieldId = fieldId;\r\n        initializeRules(fieldId);\r\n    }\r\n\r\n    function validateMaxArrayLength() {\r\n        vm.maxArrayLengthValid = true;\r\n        if (rules) {\r\n            for (let rule of rules.validators) {\r\n                const functionName = rule.type;\r\n                if (functionName === 'maxArrayLength') {\r\n                    vm.maxArrayLengthValid = user.accountNumbers.length <= rule.params.value;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function initializeRules(fieldId) {\r\n        // ruleService is async, but we get rule synchronously\r\n        let formFields = ruleService.getFieldRules(fieldId);\r\n        if (formFields) {\r\n            rules = formFields;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}