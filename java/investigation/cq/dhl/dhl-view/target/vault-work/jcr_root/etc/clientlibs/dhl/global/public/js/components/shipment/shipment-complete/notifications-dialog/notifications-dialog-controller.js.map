{"version":3,"sources":["components/shipment/shipment-complete/notifications-dialog/notifications-dialog-controller.js"],"names":[],"mappings":";;;qBAMwB,6BAA6B;;AAFrD,iCAA6B,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,mBAAmB,EAAE,4BAA4B,CAAC,CAAC;;AAEvF,aAAS,6BAA6B,CAAC,MAAM,EAAE,iBAAiB,EAAE,0BAA0B,EAAE;AACzG,YAAM,EAAE,GAAG,IAAI,CAAC;;AAEhB,cAAM,CAAC,MAAM,CAAC,EAAE,EAAE;AACd,2BAAe,EAAf,eAAe;AACf,oCAAwB,EAAxB,wBAAwB;AACxB,8BAAkB,EAAlB,kBAAkB;AAClB,+BAAmB,EAAnB,mBAAmB;AACnB,yBAAa,EAAb,aAAa;SAChB,CAAC,CAAC;;AAEH,YAAM,UAAU,GAAG,iBAAiB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;;AAEnE,YAAM,aAAa,GAAG;AAClB,kBAAM,EAAE,KAAK;AACb,0BAAc,EAAE,KAAK;AACrB,4BAAgB,EAAE,KAAK;AACvB,qBAAS,EAAE,KAAK;AAChB,0BAAc,EAAE,KAAK;AACrB,qBAAS,EAAE,KAAK;SACnB,CAAC;;AAEF,YAAM,wBAAwB,GAAG;AAC7B,gBAAI,EAAE,OAAO;AACb,oBAAQ,EAAE,aAAa;SAC1B,CAAC;;AAEF,YAAM,sBAAsB,GAAG;AAC3B,gBAAI,EAAE,KAAK;AACX,oBAAQ,EAAE,aAAa;SAC1B,CAAC;;AAEF,YAAI,EAAE,CAAC;;AAEP,iBAAS,IAAI,GAAG;AACZ,sCAA0B,CAAC,WAAW,EAAE,CACnC,IAAI,CAAC,UAAC,IAAI,EAAK;AACZ,wCAAwB,CAAC,QAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC;AACnE,sCAAsB,CAAC,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC;AAC/D,kBAAE,CAAC,aAAa,GAAG,CAAC,kBAAkB,EAAE,CAAC,CAAC;aAC7C,CAAC,CAAC;SACV;;AAED,iBAAS,kBAAkB,GAAG;AAC1B,mBAAO,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;SACjD;;AAED,iBAAS,eAAe,GAAG;AACvB,cAAE,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;SAC/C;;AAED,iBAAS,kBAAkB,CAAC,MAAM,EAAE;AAChC,cAAE,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SACtC;;AAED,iBAAS,wBAAwB,CAAC,YAAY,EAAE;AAC5C,gBAAM,mBAAmB,GAAG,YAAY,CAAC,IAAI,KAAK,OAAO,GAAG,wBAAwB,GAAG,sBAAsB,CAAC;AAC9G,wBAAY,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;SACtE;;AAED,iBAAS,mBAAmB,GAAG;AAC3B,kBAAM,CAAC,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC;AAC3C,gBAAI,MAAM,CAAC,iBAAiB,CAAC,QAAQ,EAAE;AACnC,uBAAO;aACV;AACD,sCAA0B,CAAC,mBAAmB,CAAC,UAAU,EAAE,EAAE,CAAC,aAAa,CAAC,CACvE,IAAI,CAAC,YAAM;AACR,sBAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;aAC/B,CAAC,SACI,CAAC,YAAM;AACT,kBAAE,CAAC,KAAK,GAAG,8DAA8D,CAAC;aAC7E,CAAC,CAAC;SACV;;AAED,iBAAS,aAAa,CAAC,KAAK,EAAE;AAC1B,mBAAO,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;uBAAK,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;aAAA,CAAC,CAAC;SACrF;KACJ","file":"components/shipment/shipment-complete/notifications-dialog/notifications-dialog-controller.js","sourcesContent":["import './notifications-dialog-service';\r\nimport './../../../../services/navigation-service';\r\nimport './../../../../directives/ewf-non-empty-validator/ewf-non-empty-validator-directive';\r\n\r\nNotificationsDialogController.$inject = ['$scope', 'navigationService', 'notificationsDialogService'];\r\n\r\nexport default function NotificationsDialogController($scope, navigationService, notificationsDialogService) {\r\n    const vm = this;\r\n\r\n    Object.assign(vm, {\r\n        addNotification,\r\n        onNotificationTypeChange,\r\n        deleteNotification,\r\n        submitNotifications,\r\n        getFieldError\r\n    });\r\n\r\n    const shipmentId = navigationService.getParamFromUrl('shipmentId');\r\n\r\n    const defaultAlerts = {\r\n        pickup: false,\r\n        clearanceDelay: false,\r\n        customsClearance: false,\r\n        exception: false,\r\n        outForDelivery: false,\r\n        delivered: false\r\n    };\r\n\r\n    const defaultEmailNotification = {\r\n        type: 'email',\r\n        settings: defaultAlerts\r\n    };\r\n\r\n    const defaultSmsNotification = {\r\n        type: 'sms',\r\n        settings: defaultAlerts\r\n    };\r\n\r\n    init();\r\n\r\n    function init() {\r\n        notificationsDialogService.getDefaults()\r\n            .then((data) => {\r\n                defaultEmailNotification.settings = data.emailNotificationSettings;\r\n                defaultSmsNotification.settings = data.smsNotificationSettings;\r\n                vm.notifications = [createNotification()];\r\n            });\r\n    }\r\n\r\n    function createNotification() {\r\n        return angular.copy(defaultEmailNotification);\r\n    }\r\n\r\n    function addNotification() {\r\n        vm.notifications.push(createNotification());\r\n    }\r\n\r\n    function deleteNotification($index) {\r\n        vm.notifications.splice($index, 1);\r\n    }\r\n\r\n    function onNotificationTypeChange(notification) {\r\n        const defaultNotification = notification.type === 'email' ? defaultEmailNotification : defaultSmsNotification;\r\n        notification.settings = angular.copy(defaultNotification.settings);\r\n    }\r\n\r\n    function submitNotifications() {\r\n        $scope.notificationsForm.$submitted = true;\r\n        if ($scope.notificationsForm.$invalid) {\r\n            return;\r\n        }\r\n        notificationsDialogService.submitNotifications(shipmentId, vm.notifications)\r\n            .then(() => {\r\n                $scope.ewfModalCtrl.close();\r\n            })\r\n            .catch(() => {\r\n                vm.error = 'shipment.shipment_complete_notifications_dialog_submit_error';\r\n            });\r\n    }\r\n\r\n    function getFieldError(field) {\r\n        return field.$error && Object.keys(field.$error).find((key) => field.$error[key]);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}