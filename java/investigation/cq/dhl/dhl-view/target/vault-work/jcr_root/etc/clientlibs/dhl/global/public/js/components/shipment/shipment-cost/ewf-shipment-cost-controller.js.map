{"version":3,"sources":["components/shipment/shipment-cost/ewf-shipment-cost-controller.js"],"names":[],"mappings":";;;;;qBAwBwB,yBAAyB;;;;;;;;AAfjD,6BAAyB,CAAC,SAAS,GAAG,8CAAkC,eAAe,CAAC,CAAC;AACzF,6BAAyB,CAAC,OAAO,GAAG,CAAC,QAAQ,EACT,SAAS,EACT,IAAI,EACJ,MAAM,EACN,YAAY,EACZ,aAAa,EACb,mBAAmB,EACnB,iBAAiB,EACjB,yBAAyB,EACzB,iCAAiC,EACjC,kBAAkB,EAClB,oBAAoB,CAAC,CAAC;;AAE1D,qBAAI,UAAU,CAAC,2BAA2B,EAAE,yBAAyB,CAAC,CAAC;;AACxD,aAAS,yBAAyB,CAAC,MAAM,EACN,OAAO,EACP,EAAE,EACF,IAAI,EACJ,UAAU,EACV,WAAW,EACX,iBAAiB,EACjB,eAAe,EACf,uBAAuB,EACvB,+BAA+B,EAC/B,gBAAgB,EAChB,kBAAkB,EAAE;AAClE,YAAM,EAAE,GAAG,IAAI,CAAC;;AAEhB,cAAM,CAAC,MAAM,CAAC,EAAE,EAAE;AACd,kBAAM,EAAN,MAAM;AACN,4BAAgB,EAAhB,gBAAgB;AAChB,qCAAyB,EAAzB,yBAAyB;AACzB,0BAAc,EAAd,cAAc;AACd,0CAA8B,EAA9B,8BAA8B;AAC9B,uCAA2B,EAA3B,2BAA2B;AAC3B,0BAAc,EAAd,cAAc;AACd,yBAAa,EAAb,aAAa;AACb,2BAAe,EAAf,eAAe;AACf,0BAAc,EAAd,cAAc;AACd,8BAAkB,EAAlB,kBAAkB;AAClB,+BAAmB,EAAnB,mBAAmB;AACnB,+BAAmB,EAAnB,mBAAmB;AACnB,oCAAwB,EAAxB,wBAAwB;AACxB,uCAA2B,EAA3B,2BAA2B;AAC3B,gCAAoB,EAApB,oBAAoB;AACpB,qCAAyB,EAAzB,yBAAyB;AACzB,2BAAe,EAAf,eAAe;;AAEf,mBAAO,EAAE,IAAI;AACb,yBAAa,EAAE,IAAI;AACnB,mCAAuB,EAAE,KAAK;AAC9B,8BAAkB,EAAE,IAAI;AACxB,qBAAS,EAAE,IAAI;AACf,8BAAkB,EAAE,IAAI;AACxB,0BAAc,EAAE,KAAK;AACrB,4BAAgB,EAAE,KAAK;AACvB,0BAAc,EAAE,IAAI;AACpB,2BAAe,EAAE,KAAK;AACtB,6BAAiB,EAAE,KAAK;AACxB,sBAAU,EAAE;AACR,0BAAU,EAAE,IAAI;AAChB,yBAAS,EAAE,EAAE;aAChB;AACD,oBAAQ,EAAE,cAAc;AACxB,0BAAc,EAAE,IAAI;AACpB,2CAA+B,EAAE,KAAK;AACtC,8BAAkB,EAAE,KAAK;AACzB,+BAAmB,EAAE,EAAE;AACvB,+BAAmB,EAAE,KAAK;AAC1B,gCAAoB,EAAE,EAAE;AACxB,2BAAe,EAAE,EAAE;AACnB,0BAAc,EAAE,IAAI;AACpB,wBAAY,EAAE,IAAI;AAClB,uCAA2B,EAAE,KAAK;AAClC,0BAAc,EAAE;AACZ,qBAAK,EAAE,EAAE;aACZ;SACJ,CAAC,CAAC;;AAEH,iBAAS,MAAM,GAAG;AACd,cAAE,CAAC,aAAa,GAAG,eAAe,CAAC,kBAAkB,EAAE,CAAC;AACxD,cAAE,CAAC,kBAAkB,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,IAAI,CAAA,AAAC,CAAC;;AAEtE,kBAAM,CAAC,MAAM,CAAC;uBAAM,eAAe,CAAC,kBAAkB,EAAE;aAAA,EAAE,sBAAsB,CAAC,CAAC;AAClF,kBAAM,CAAC,MAAM,CAAC;uBAAM,eAAe,CAAC,kBAAkB,EAAE;aAAA,EAAE,eAAe,CAAC,CAAC;AAC3E,kBAAM,CAAC,MAAM,CAAC;uBAAM,EAAE,CAAC,cAAc;aAAA,EAAE,sBAAsB,CAAC,CAAC;;AAE/D,2CAA+B,EAAE,CAAC;SACrC;;AAED,iBAAS,sBAAsB,CAAC,cAAc,EAAE;AAC5C,cAAE,CAAC,cAAc,GAAG,cAAc,CAAC;;AAEnC,gBAAI,EAAE,CAAC,mBAAmB,EAAE,EAAE;AAC1B,kCAAkB,CACb,kBAAkB,CAAC,EAAE,CAAC,cAAc,CAAC,CACrC,IAAI,CAAC,qBAAqB,CAAC,CAAC;;AAEjC,kCAAkB,CACb,eAAe,CAAC,EAAE,CAAC,cAAc,CAAC,CAClC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aACjC;;AAED,mBAAO,UAAU,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;SACvD;;AAED,iBAAS,kBAAkB,CAAC,MAAM,EAAE;AAChC,cAAE,CAAC,YAAY,GAAG,MAAM,CAAC;SAC5B;;AAED,iBAAS,qBAAqB,CAAC,eAAe,EAAE;AAC5C,cAAE,CAAC,eAAe,GAAG,eAAe,CAAC;SACxC;;AAED,iBAAS,sBAAsB,GAAG;AAC9B,gBAAM,gBAAgB,GAAG,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC,cAAc,CAAC,gBAAgB,GAAG,IAAI,CAAC;;AAEvF,gBAAI,gBAAgB,EAAE;AAClB,kBAAE,CAAC,cAAc,CAAC,cAAc,GAAG,gBAAgB,CAAC;AACpD,+BAAe,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;aAC3D;SACJ;;AAED,iBAAS,UAAU,GAAG;AAClB,mBAAO,WAAW,CAAC,yBAAyB,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,cAAc,CAAC,CACvE,IAAI,CAAC,WAAW,CAAC,CACjB,IAAI,CAAC,sBAAsB,CAAC,CAAC;SACrC;;AAED,iBAAS,WAAW,CAAC,QAAQ,EAAE;AAC3B,gBAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,kBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAK;AACxC,qBAAK,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;aAC9C,CAAC,CAAC;;AAEH,mBAAO,KAAK,CAAC;SAChB;;AAED,iBAAS,sBAAsB,CAAC,KAAK,EAAE;AACnC,cAAE,CAAC,+BAA+B,GAAG,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC;AAClF,cAAE,CAAC,kBAAkB,GAAG,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;AACnE,cAAE,CAAC,mBAAmB,GAAG,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC;SACzE;;AAED,iBAAS,eAAe,CAAC,OAAO,EAAE;AAC9B,6BAAiB,CAAC,OAAO,CAAC,CAAC;SAC9B;;AAED,iBAAS,iBAAiB,CAAC,aAAa,EAAE;AACtC,cAAE,CAAC,aAAa,GAAG,aAAa,CAAC;;AAEjC,gBAAI,QAAQ,GAAG,qBAAqB,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC;AAC5D,cAAE,CAAC,OAAO,GAAG,+BAA+B,CAAC,sBAAsB,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;;AAEhG,gBAAI,EAAE,CAAC,gBAAgB,EAAE;AACrB,kBAAE,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC;AACxB,wBAAI,EAAE,UAAU,CAAC,kBAAkB,CAAC,iCAAiC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC;AACvG,yBAAK,EAAE,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAI,CAAC,CAAC,AAAC,IAAI,MAAM;iBAC/E,CAAC,CAAC;aACN;;AAED,cAAE,CAAC,yBAAyB,EAAE,CAAC;SAClC;;;AAGD,iBAAS,qBAAqB,GAAqB;gBAApB,cAAc,yDAAG,CAAC;;AAC7C,gBAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;AAC9C,gBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;AACvE,gBAAI,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC7C,mBAAO,cAAc,GAAG,CAAC,SACf,OAAO,SACP,OAAO,AAAE,CAAC;SACvB;;AAED,iBAAS,yBAAyB,GAAG;AACjC,mCAAuB,CAAC,iBAAiB,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,CACvE,IAAI,CAAC,UAAC,IAAS,EAAK;2CAAd,IAAS;;oBAAR,OAAO;;AACX,oBAAM,OAAO,GAAG,eAAe,CAAC,kBAAkB,EAAE,CAAC;AACrD,kBAAE,CAAC,uBAAuB,GAAG,EAAE,CAAC,+BAA+B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;;AAErG,oBAAI,EAAE,CAAC,uBAAuB,EAAE;wBACY,SAAS,GAAO,OAAO,CAA1D,OAAO,CAAG,OAAO,CAAG,KAAK,CAAG,KAAK;yDACwB,OAAO,CAAhE,OAAO,CAAG,OAAO,CAAG,KAAK;wBAAU,KAAK,kCAAZ,KAAK;wBAAS,QAAQ,kCAAR,QAAQ;;AAEvD,wBAAI,GAAG,GAAG,UAAU,CAAC,kBAAkB,CAAC,4CAA4C,CAAC,CAAC;AACtF,4BAAQ,GAAG,UAAU,CAAC,kBAAkB,iCAA+B,QAAQ,CAAC,WAAW,EAAE,CAAG,CAAC;;AAEjG,sBAAE,CAAC,cAAc,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,SAAS,GAAG,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC9F,sBAAE,CAAC,kBAAkB,GAAG,OAAO,CAAC;iBACnC;aACJ,CAAC,CAAC;SACV;;AAED,iBAAS,gBAAgB,GAAG;;AAExB,gBAAI,EAAE,CAAC,iBAAiB,EAAE;AACtB,uCAAuB,EAAE,CAAC;aAC7B;;AAED,gBAAI,EAAE,CAAC,mBAAmB,EAAE,EAAE;;AAC1B,wBAAM,gBAAgB,GAAG,CAAC,EAAE,CAAC,cAAc,CAAC,gBAAgB,CAAC;;AAE7D,wBAAI,gBAAgB,IAAI,mBAAmB,EAAE,EAAE;AAC3C,uCAAe,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAClF;+BAAO,eAAe,CAAC,cAAc,EAAE,CAClC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAC3B,CAAC,UAAC,QAAQ,EAAK;AACjB,oCAAI,CAAC,gBAAgB,EAAE;AACnB,sCAAE,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iCAC9D;6BACJ,CAAC;0BAAC;qBACV;;;;aACJ,MAAM;AACH,uBAAO,eAAe,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;aACrE;SACJ;;AAED,iBAAS,mBAAmB,GAAG;AAC3B,gBAAM,WAAW,GAAG,EAAE,CAAC,kBAAkB,CAAC;;AAE1C,mBAAO,WAAW,CAAC,QAAQ,EAAE,IAAI,WAAW,CAAC,MAAM,CAAC;SACvD;;AAED,iBAAS,qBAAqB,CAAC,gBAAgB,EAAE;qCACF,EAAE,CAAC,cAAc;gBAArD,cAAc,sBAAd,cAAc;gBAAE,gBAAgB,sBAAhB,gBAAgB;;AAEvC,mBAAO,gBAAgB,GAAG,EAAC,cAAc,EAAd,cAAc,EAAE,gBAAgB,EAAhB,gBAAgB,EAAC,GAAG,EAAE,CAAC,cAAc,CAAC;SACpF;;AAED,iBAAS,uBAAuB,GAAG;AAC/B,gBAAM,IAAI,GAAG;AACT,6BAAa,EAAE,EAAE,CAAC,UAAU,CAAC,SAAS;AACtC,0BAAU,EAAE,aAAa;AACzB,0BAAU,OAAK,gBAAgB,CAAC,kBAAkB,GAAG,EAAE,CAAC,UAAU,CAAC,UAAU,AAAE;aAClF,CAAC;AACF,2BAAe,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACvC;;AAED,iBAAS,qBAAqB,GAAY;gBAAX,IAAI,yDAAG,EAAE;;AACpC,gBAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;;AAEnC,6BAAiB,CAAC,QAAQ,qCAAmC,UAAU,CAAG,CAAC;SAC9E;;AAED,iBAAS,cAAc,GAAG;AACtB,2BAAe,CAAC,kBAAkB,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC;SAC7D;;AAED,iBAAS,+BAA+B,GAAG;AACvC,4BAAgB,CAAC,wBAAwB,EAAE,CACtC,IAAI,CAAC,UAAC,MAAM,EAAK;AACd,kBAAE,CAAC,UAAU,CAAC,UAAU,GAAG,MAAM,CAAC;aACrC,CAAC,CAAC;SACV;;AAED,iBAAS,cAAc,GAAG;AACtB,gBAAI,CAAC,EAAE,CAAC,SAAS,EAAE;AACf,kBAAE,CAAC,cAAc,GAAG,KAAK,CAAC;AAC1B,uBAAO;aACV;;AAED,cAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC;;;AAG5B,gBAAM,WAAW,GAAG,KAAK,CAAC;AAC1B,gBAAM,aAAa,GAAG,SAAS,CAAC;AAChC,gBAAM,kBAAkB,GAAG,eAAe,CAAC,kBAAkB,EAAE,CAAC;AAChE,gBAAM,sBAAsB,GAAG,eAAe,CAAC,qBAAqB,EAAE,CAAC;;AAEvE,4BAAgB,CAAC,iBAAiB,CAAC,EAAE,CAAC,SAAS,EACZ,aAAa,EACb,WAAW,EACX,kBAAkB,EAClB,sBAAsB,CAAC,CACrD,IAAI,CAAC,UAAC,IAAI;uBAAK,IAAI,CAAC,aAAa;aAAA,CAAC,CAClC,IAAI,CAAC,gBAAgB,CAAC,SACjB,CAAC,kBAAkB,CAAC,CAAC;SAClC;;AAED,iBAAS,gBAAgB,CAAC,aAAa,EAAE;AACrC,cAAE,CAAC,cAAc,GAAG,IAAI,CAAC;AACzB,+BAAmB,CAAC,aAAa,CAAC,CAAC;SACtC;;AAED,iBAAS,kBAAkB,GAAG;AAC1B,cAAE,CAAC,cAAc,GAAG,KAAK,CAAC;SAC7B;;AAED,iBAAS,mBAAmB,CAAC,aAAa,EAAE;AACxC,gBAAM,gBAAgB,GAAG,eAAe,CAAC,oBAAoB,EAAE,CAAC;AAChE,gBAAM,YAAY,GAAG,eAAe,CAAC,eAAe,EAAE,CAAC;;AAEvD,mCAAuB,CAAC,kBAAkB,EAAE,CACvC,sBAAsB,CAAC,aAAa,EAAE,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE,gBAAgB,CAAC,CACvF,IAAI,CAAC,UAAC,iBAAiB,EAAK;AACzB,kBAAE,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC3B,kBAAE,CAAC,mBAAmB,GAAG,8BAA8B,EAAE,CAAC;AAC1D,iCAAiB,CAAC,iBAAiB,CAAC,CAAC;aACxC,CAAC,CAAC;SACV;;AAED,iBAAS,eAAe,GAAG;AACvB,4BAAgB,CAAC,kBAAkB,CAAC,EAAE,CAAC,UAAU,CAAC,CAC7C,IAAI,CAAC,YAAM;AACR,kBAAE,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAC5B,kBAAE,CAAC,oBAAoB,GAAG,2BAA2B,EAAE,CAAC;AACxD,qCAAqB,EAAE,CAAC;aAC3B,CAAC,SACI,CAAC,iBAAiB,CAAC,CAAC;SACjC;;AAED,iBAAS,qBAAqB,GAAG;AAC7B,cAAE,CAAC,uBAAuB,GAAG,KAAK,CAAC;AACnC,cAAE,CAAC,0BAA0B,GAAG,KAAK,CAAC;SACzC;;;AAGD,iBAAS,iBAAiB,CAAC,MAAM,EAAE;AAC/B,gBAAM,aAAa,GAAG,YAAY,CAAC;AACnC,gBAAM,mBAAmB,GAAG,WAAW,CAAC;;AAExC,cAAE,CAAC,uBAAuB,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AAC5D,cAAE,CAAC,0BAA0B,GAAG,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;SACxE;;AAED,iBAAS,aAAa,GAAG;AACrB,cAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B;;AAED,iBAAS,cAAc,GAAG;AACtB,cAAE,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;;AAED,iBAAS,8BAA8B,GAAG;AACtC,gBAAM,OAAO,GAAG,UAAU,CAAC,kBAAkB,CAAC,+CAA+C,CAAC,CAAC;AAC/F,gBAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,mBAAmB,UAAQ,EAAE,CAAC,SAAS,UAAO,CAAC;;AAEjF,mBAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SACtC;;AAED,iBAAS,2BAA2B,GAAG;AACnC,gBAAM,UAAU,QAAM,gBAAgB,CAAC,kBAAkB,GAAG,EAAE,CAAC,UAAU,CAAC,UAAU,AAAE,CAAC;AACvF,gBAAM,OAAO,GAAG,UAAU,CAAC,kBAAkB,CAAC,4CAA4C,CAAC,CAAC;AAC5F,gBAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,gBAAgB,UAAQ,UAAU,UAAO,CAAC;;AAE5E,mBAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SACtC;;AAED,iBAAS,kBAAkB,GAAG;AAC1B,mBAAO,EAAE,CAAC,kBAAkB,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;SACrE;;AAED,iBAAS,mBAAmB,GAAG;AAC3B,mBAAO,EAAE,CAAC,mBAAmB,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;SACtE;;AAED,iBAAS,mBAAmB,GAAG;AAC3B,gBAAM,WAAW,GAAG,eAAe,CAAC,cAAc,EAAE,CAAC;AACrD,gBAAM,WAAW,GAAG,WAAW,CAAC,yBAAyB,CAAC;;AAE1D,mBAAO,kBAAkB,CAAC,mBAAmB,CAAC,EAAC,WAAW,EAAX,WAAW,EAAC,CAAC,CAAC;SAChE;;AAED,iBAAS,wBAAwB,GAAG;AAChC,gBAAM,UAAU,GAAG,EAAE,CAAC,mBAAmB,EAAE,GAAG,KAAK,GAAG,UAAU,CAAC;;AAEjE,mBAAO,UAAU,CAAC,kBAAkB,uCAAqC,UAAU,CAAG,CAAC;SAC1F;;AAED,iBAAS,2BAA2B,GAAG;AACnC,gBAAI,CAAC,EAAE,CAAC,YAAY,EAAE;AAClB,uBAAO,EAAE,CAAC;aACb;;AAED,mBAAO,UAAU,CACZ,kBAAkB,CAAC,qCAAqC,CAAC,CACzD,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC;SACpD;;AAED,iBAAS,oBAAoB,GAAG;AAC5B,4BAAgB,CAAC,oBAAoB,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACnE;;AAED,iBAAS,yBAAyB,GAAG;AACjC,gBAAM,WAAW,GAAG,wBAAwB,EAAE,CAAC;AAC/C,cAAE,CAAC,uBAAuB,GAAG,CAAC,WAAW,CAAC;AAC1C,cAAE,CAAC,2BAA2B,GAAG,WAAW,CAAC;SAChD;;AAED,iBAAS,wBAAwB,GAAG;AAChC,gBAAM,0BAA0B,GAAG,WAAW,CAAC;;AAEhD,mBAAO,0BAA0B,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,IAC3D,gBAAgB,CAAC,qBAAqB,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACxE;;AAED,iBAAS,eAAe,CAAC,OAAO,EAAE;gBACvB,KAAK,GAAsF,OAAO,CAAlG,KAAK;gBAAE,aAAa,GAAuE,OAAO,CAA3F,aAAa;gBAAE,IAAI,GAAiE,OAAO,CAA5E,IAAI;gBAAE,eAAe,GAAgD,OAAO,CAAtE,eAAe;gBAAE,WAAW,GAAmC,OAAO,CAArD,WAAW;gBAAE,gBAAgB,GAAiB,OAAO,CAAxC,gBAAgB;gBAAE,WAAW,GAAI,OAAO,CAAtB,WAAW;;AAE9F,kBAAM,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE;AAC7B,oBAAI,EAAE,OAAO,CAAC,WAAW;AACzB,uBAAO,EAAE,OAAO,CAAC,WAAW;AAC5B,qBAAK,EAAL,KAAK;AACL,qBAAK,EAAE;AACH,gCAAY,EAAE,EAAC,WAAW,EAAX,WAAW,EAAE,gBAAgB,EAAhB,gBAAgB,EAAC;iBAChD;AACD,8BAAc,EAAE;AACZ,6BAAS,EAAE,OAAO,CAAC,OAAO;AAC1B,6BAAS,EAAE,OAAO,CAAC,QAAQ;AAC3B,+BAAW,EAAE,OAAO,CAAC,OAAO;AAC5B,+BAAW,EAAX,WAAW;AACX,iCAAa,EAAb,aAAa;AACb,wBAAI,EAAJ,IAAI;AACJ,mCAAe,EAAf,eAAe;iBAClB;aACJ,CAAC,CAAC;SACN;KACJ","file":"components/shipment/shipment-cost/ewf-shipment-cost-controller.js","sourcesContent":["import ewf from 'ewf';\r\nimport EwfShipmentStepBaseController from './../ewf-shipment-step-base-controller';\r\nimport './../ewf-shipment-service';\r\nimport './../shipment-products/shipment-product-presenter-factory';\r\nimport './../shipment-products/shipment-products-service';\r\nimport './promo-code-service';\r\nimport 'services/rule-service';\r\nimport './../payment-type/payment-type-service';\r\n\r\nEwfShipmentCostController.prototype = new EwfShipmentStepBaseController('shipment-cost');\r\nEwfShipmentCostController.$inject = ['$scope',\r\n                                    '$filter',\r\n                                    '$q',\r\n                                    '$sce',\r\n                                    'nlsService',\r\n                                    'ruleService',\r\n                                    'navigationService',\r\n                                    'shipmentService',\r\n                                    'shipmentProductsService',\r\n                                    'shipmentProductPresenterFactory',\r\n                                    'promoCodeService',\r\n                                    'paymentTypeService'];\r\n\r\newf.controller('EwfShipmentCostController', EwfShipmentCostController);\r\nexport default function EwfShipmentCostController($scope,\r\n                                                  $filter,\r\n                                                  $q,\r\n                                                  $sce,\r\n                                                  nlsService,\r\n                                                  ruleService,\r\n                                                  navigationService,\r\n                                                  shipmentService,\r\n                                                  shipmentProductsService,\r\n                                                  shipmentProductPresenterFactory,\r\n                                                  promoCodeService,\r\n                                                  paymentTypeService) {\r\n    const vm = this;\r\n\r\n    Object.assign(vm, {\r\n        onInit,\r\n        completeShipment,\r\n        updateUpgradeMessageState,\r\n        upgradeProduct,\r\n        getPromotionCodeAppliedMessage,\r\n        getRewardCardAppliedMessage,\r\n        applyPromoCode,\r\n        editPromoCode,\r\n        applyRewardCard,\r\n        editRewardCard,\r\n        isPromoCodeVisible,\r\n        isRewardCardVisible,\r\n        isCreditCardPayment,\r\n        getCompleteShipmentLabel,\r\n        getCreditBufferNotification,\r\n        saveRewardCardNumber,\r\n        onRewardCardNumberChanges,\r\n        onContactSelect,\r\n\r\n        product: null,\r\n        productOrigin: null,\r\n        isUpgradeMessageVisible: false,\r\n        productToUpgradeTo: null,\r\n        promoCode: null,\r\n        promoAccountNumber: null,\r\n        promoCodeShown: false,\r\n        promoCodeApplied: false,\r\n        promoCodeValid: true,\r\n        rewardCardShown: false,\r\n        rewardCardApplied: false,\r\n        rewardCard: {\r\n            rewardCard: null,\r\n            promoCode: ''\r\n        },\r\n        formName: 'shipmentCost',\r\n        shipperCountry: null,\r\n        upgradeAllowedForShipperCountry: false,\r\n        promoCodeAvailable: false,\r\n        promoAppliedMessage: '',\r\n        rewardCardAvailable: false,\r\n        rewardAppliedMessage: '',\r\n        paymentProducts: [],\r\n        paymentProduct: null,\r\n        creditBuffer: null,\r\n        isSaveRewardCardOptionShown: false,\r\n        billingAddress: {\r\n            phone: {}\r\n        }\r\n    });\r\n\r\n    function onInit() {\r\n        vm.productOrigin = shipmentService.getShipmentProduct();\r\n        vm.userTimeZoneOffset = -(new Date().getTimezoneOffset() * 60 * 1000);\r\n\r\n        $scope.$watch(() => shipmentService.getShipmentCountry(), onShipperCountryUpdate);\r\n        $scope.$watch(() => shipmentService.getShipmentProduct(), onProductUpdate);\r\n        $scope.$watch(() => vm.paymentProduct, onPaymentProductUpdate);\r\n\r\n        setRewardCardNumberDefaultValue();\r\n    }\r\n\r\n    function onShipperCountryUpdate(shipperCountry) {\r\n        vm.shipperCountry = shipperCountry;\r\n\r\n        if (vm.isCreditCardPayment()) {\r\n            paymentTypeService\r\n                .getPaymentProducts(vm.shipperCountry)\r\n                .then(onPaymentProductsLoad);\r\n\r\n            paymentTypeService\r\n                .getCreditBuffer(vm.shipperCountry)\r\n                .then(onCreditBufferLoad);\r\n        }\r\n\r\n        return fetchRules().then(updateUpgradeMessageState);\r\n    }\r\n\r\n    function onCreditBufferLoad(buffer) {\r\n        vm.creditBuffer = buffer;\r\n    }\r\n\r\n    function onPaymentProductsLoad(paymentProducts) {\r\n        vm.paymentProducts = paymentProducts;\r\n    }\r\n\r\n    function onPaymentProductUpdate() {\r\n        const paymentProductId = vm.paymentProduct ? vm.paymentProduct.paymentProductId : null;\r\n\r\n        if (paymentProductId) {\r\n            vm.billingAddress.paymentProduct = paymentProductId;\r\n            shipmentService.setPaymentProductInfo(paymentProductId);\r\n        }\r\n    }\r\n\r\n    function fetchRules() {\r\n        return ruleService.acquireRulesForFormFields(vm.formName, vm.shipperCountry)\r\n            .then(formatRules)\r\n            .then(updateAccordingToRules);\r\n    }\r\n\r\n    function formatRules(rawRules) {\r\n        let rules = {};\r\n\r\n        Object.keys(rawRules).forEach((ruleName) => {\r\n            rules[ruleName] = rawRules[ruleName].props;\r\n        });\r\n\r\n        return rules;\r\n    }\r\n\r\n    function updateAccordingToRules(rules) {\r\n        vm.upgradeAllowedForShipperCountry = rules.upgradeNow && rules.upgradeNow.visible;\r\n        vm.promoCodeAvailable = rules.promoCode && rules.promoCode.visible;\r\n        vm.rewardCardAvailable = rules.rewardCard && rules.rewardCard.visible;\r\n    }\r\n\r\n    function onProductUpdate(product) {\r\n        updateProductView(product);\r\n    }\r\n\r\n    function updateProductView(productOrigin) {\r\n        vm.productOrigin = productOrigin;\r\n\r\n        let timeZone = formatTZOffsetToStrTZ(vm.userTimeZoneOffset);\r\n        vm.product = shipmentProductPresenterFactory.createProductPresenter(vm.productOrigin, timeZone);\r\n\r\n        if (vm.promoCodeApplied) {\r\n            vm.product.costDetails.push({\r\n                name: nlsService.getTranslationSync('shipment.details_promotion_code').replace('{label}', vm.promoCode),\r\n                value: vm.productOrigin.summary.payment.totalDiscount.value * (-1) || '0.00'\r\n            });\r\n        }\r\n\r\n        vm.updateUpgradeMessageState();\r\n    }\r\n\r\n    //todo move function to separate service /copied from products-controller.js\r\n    function formatTZOffsetToStrTZ(timezoneOffset = 0) {\r\n        let date = new Date(Math.abs(timezoneOffset));\r\n        date.setTime(date.getTime() + date.getTimezoneOffset() / 60 * 3600000);\r\n        let strTime = $filter('date')(date, 'HH:mm');\r\n        return timezoneOffset < 0\r\n            ? `-${strTime}`\r\n            : `+${strTime}`;\r\n    }\r\n\r\n    function updateUpgradeMessageState() {\r\n        shipmentProductsService.getProductsByDate(shipmentService.getShipmentDate())\r\n            .then(([fastest]) => {\r\n                const product = shipmentService.getShipmentProduct();\r\n                vm.isUpgradeMessageVisible = vm.upgradeAllowedForShipperCountry && !angular.equals(fastest, product);\r\n\r\n                if (vm.isUpgradeMessageVisible) {\r\n                    let {summary: {payment: {total: {value: fastPrice}}}} = fastest;\r\n                    let {summary: {payment: {total: {value: price, currency}}}} = product;\r\n\r\n                    let msg = nlsService.getTranslationSync('shipment.shipment_cost_upgrade_now_message');\r\n                    currency = nlsService.getTranslationSync(`shipment.shipment_currency_${currency.toLowerCase()}`);\r\n\r\n                    vm.upgradeMessage = msg.replace(/{price}/g, $filter('currency')(fastPrice - price, currency));\r\n                    vm.productToUpgradeTo = fastest;\r\n                }\r\n            });\r\n    }\r\n\r\n    function completeShipment() {\r\n        //@todo: validate all steps\r\n        if (vm.rewardCardApplied) {\r\n            setRewardCardToShipment();\r\n        }\r\n\r\n        if (vm.isCreditCardPayment()) {\r\n            const noBillingAddress = !vm.billingAddress.addressDifferent;\r\n\r\n            if (noBillingAddress || validateBillingForm()) {\r\n                shipmentService.setCreditCardPaymentInfo(getBillingInfoPayload(noBillingAddress));\r\n                return shipmentService.chargeShipment()\r\n                    .then(navigationService.redirect)\r\n                    .catch((response) => {\r\n                        if (!noBillingAddress) {\r\n                            vm.billingAddressForm.setErrorsFromResponse(response.data);\r\n                        }\r\n                    });\r\n            }\r\n        } else {\r\n            return shipmentService.saveShipment().then(onSaveShipmentSuccess);\r\n        }\r\n    }\r\n\r\n    function validateBillingForm() {\r\n        const billingForm = vm.billingAddressForm;\r\n\r\n        return billingForm.validate() && billingForm.$valid;\r\n    }\r\n\r\n    function getBillingInfoPayload(noBillingAddress) {\r\n        const {paymentProduct, addressDifferent} = vm.billingAddress;\r\n\r\n        return noBillingAddress ? {paymentProduct, addressDifferent} : vm.billingAddress;\r\n    }\r\n\r\n    function setRewardCardToShipment() {\r\n        const data = {\r\n            promotionCode: vm.rewardCard.promoCode,\r\n            rewardCode: 'reward_code',\r\n            rewardCard: `${promoCodeService.NECTAR_CODE_PREFIX}${vm.rewardCard.rewardCard}`\r\n        };\r\n        shipmentService.setRewardCard(data);\r\n    }\r\n\r\n    function onSaveShipmentSuccess(data = {}) {\r\n        const shipmentId = data.shipmentId;\r\n\r\n        navigationService.location(`shipment-print.html?shipmentId=${shipmentId}`);\r\n    }\r\n\r\n    function upgradeProduct() {\r\n        shipmentService.setShipmentProduct(vm.productToUpgradeTo);\r\n    }\r\n\r\n    function setRewardCardNumberDefaultValue() {\r\n        promoCodeService.getSavedRewardCardNumber()\r\n            .then((number) => {\r\n                vm.rewardCard.rewardCard = number;\r\n            });\r\n    }\r\n\r\n    function applyPromoCode() {\r\n        if (!vm.promoCode) {\r\n            vm.promoCodeValid = false;\r\n            return;\r\n        }\r\n\r\n        vm.promoCodeApplied = false;\r\n\r\n        // @todo Remove mocked payment info once UC-SHP-18 is implemented and integrated with ADT\r\n        const paymentType = 'CRC'; //shipmentService.getPaymentInfo().quotationType;\r\n        const accountNumber = 'CREDUSA'; // shipmentService.getPaymentInfo().quotationAccountNumber;\r\n        const shipperCountryCode = shipmentService.getShipmentCountry();\r\n        const destinationCountryCode = shipmentService.getDestinationCountry();\r\n\r\n        promoCodeService.validatePromoCode(vm.promoCode,\r\n                                           accountNumber,\r\n                                           paymentType,\r\n                                           shipperCountryCode,\r\n                                           destinationCountryCode)\r\n            .then((data) => data.accountNumber)\r\n            .then(onPromoCodeValid)\r\n            .catch(onPromoCodeInvalid);\r\n    }\r\n\r\n    function onPromoCodeValid(accountNumber) {\r\n        vm.promoCodeValid = true;\r\n        processPromoAccount(accountNumber);\r\n    }\r\n\r\n    function onPromoCodeInvalid() {\r\n        vm.promoCodeValid = false;\r\n    }\r\n\r\n    function processPromoAccount(accountNumber) {\r\n        const quoteRequestData = shipmentService.getQuotesRequestData();\r\n        const shipmentDate = shipmentService.getShipmentDate();\r\n\r\n        shipmentProductsService.clearProductsCache()\r\n            .getProductWithDiscount(accountNumber, vm.productOrigin, shipmentDate, quoteRequestData)\r\n            .then((discountedProduct) => {\r\n                vm.promoCodeApplied = true;\r\n                vm.promoAppliedMessage = getPromotionCodeAppliedMessage();\r\n                updateProductView(discountedProduct);\r\n            });\r\n    }\r\n\r\n    function applyRewardCard() {\r\n        promoCodeService.validateRewardCard(vm.rewardCard)\r\n            .then(() => {\r\n                vm.rewardCardApplied = true;\r\n                vm.rewardAppliedMessage = getRewardCardAppliedMessage();\r\n                clearRewardCardErrors();\r\n            })\r\n            .catch(onValidationError);\r\n    }\r\n\r\n    function clearRewardCardErrors() {\r\n        vm.rewardCardNumberInvalid = false;\r\n        vm.rewardCardPromoCodeInvalid = false;\r\n    }\r\n\r\n    // TODO: add validation with ewf-input for reward card fields\r\n    function onValidationError(errors) {\r\n        const rewardCardNum = 'rewardCard';\r\n        const rewardCardPromoCode = 'promoCode';\r\n\r\n        vm.rewardCardNumberInvalid = errors.includes(rewardCardNum);\r\n        vm.rewardCardPromoCodeInvalid = errors.includes(rewardCardPromoCode);\r\n    }\r\n\r\n    function editPromoCode() {\r\n        vm.promoCodeApplied = false;\r\n    }\r\n\r\n    function editRewardCard() {\r\n        vm.rewardCardApplied = false;\r\n    }\r\n\r\n    function getPromotionCodeAppliedMessage() {\r\n        const message = nlsService.getTranslationSync('shipment.shipment_cost_promotion_code_applied');\r\n        const formatted = message.replace(/{promotion_code}/g, `<b>${vm.promoCode}</b>`);\r\n\r\n        return $sce.trustAsHtml(formatted);\r\n    }\r\n\r\n    function getRewardCardAppliedMessage() {\r\n        const rewardCard = `${promoCodeService.NECTAR_CODE_PREFIX}${vm.rewardCard.rewardCard}`;\r\n        const message = nlsService.getTranslationSync('shipment.shipment_cost_reward_card_applied');\r\n        const formatted = message.replace(/{reward_card}/g, `<b>${rewardCard}</b>`);\r\n\r\n        return $sce.trustAsHtml(formatted);\r\n    }\r\n\r\n    function isPromoCodeVisible() {\r\n        return vm.promoCodeAvailable && !paymentTypeService.hasAccounts();\r\n    }\r\n\r\n    function isRewardCardVisible() {\r\n        return vm.rewardCardAvailable && !paymentTypeService.hasAccounts();\r\n    }\r\n\r\n    function isCreditCardPayment() {\r\n        const paymentInfo = shipmentService.getPaymentInfo();\r\n        const paymentType = paymentInfo.transportationPaymentType;\r\n\r\n        return paymentTypeService.isCreditCardPayment({paymentType});\r\n    }\r\n\r\n    function getCompleteShipmentLabel() {\r\n        const actionName = vm.isCreditCardPayment() ? 'pay' : 'continue';\r\n\r\n        return nlsService.getTranslationSync(`shipment.shipment_cost_agree_and_${actionName}`);\r\n    }\r\n\r\n    function getCreditBufferNotification() {\r\n        if (!vm.creditBuffer) {\r\n            return '';\r\n        }\r\n\r\n        return nlsService\r\n            .getTranslationSync('shipment.credit_buffer_notification')\r\n            .replace(/{creditBuffer}/g, vm.creditBuffer);\r\n    }\r\n\r\n    function saveRewardCardNumber() {\r\n        promoCodeService.saveRewardCardNumber(vm.rewardCard.rewardCard);\r\n    }\r\n\r\n    function onRewardCardNumberChanges() {\r\n        const validNumber = validateRewardCardNumber();\r\n        vm.rewardCardNumberInvalid = !validNumber;\r\n        vm.isSaveRewardCardOptionShown = validNumber;\r\n    }\r\n\r\n    function validateRewardCardNumber() {\r\n        const REWARD_CARD_NUMBER_PATTERN = /[0-9]{11}/;\r\n\r\n       return REWARD_CARD_NUMBER_PATTERN.test(vm.rewardCard.rewardCard) &&\r\n            promoCodeService.validateByLuhnFormula(vm.rewardCard.rewardCard);\r\n    }\r\n\r\n    function onContactSelect(contact) {\r\n        const {email, zipOrPostCode, city, stateOrProvince, phoneNumber, phoneCountryCode, countryCode} = contact;\r\n\r\n        Object.assign(vm.billingAddress, {\r\n            name: contact.contactName,\r\n            company: contact.companyName,\r\n            email,\r\n            phone: {\r\n                phoneDetails: {phoneNumber, phoneCountryCode}\r\n            },\r\n            addressDetails: {\r\n                addrLine1: contact.address,\r\n                addrLine2: contact.address2,\r\n                countryName: contact.country,\r\n                countryCode,\r\n                zipOrPostCode,\r\n                city,\r\n                stateOrProvince\r\n            }\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}