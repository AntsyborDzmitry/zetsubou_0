{"version":3,"sources":["components/address-book/contact-info/contact-shipping-info/contact-shipping-info-controller.js"],"names":[],"mappings":";;;qBAGwB,6BAA6B;;AAFrD,iCAA6B,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;;AAE9D,aAAS,6BAA6B,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE;AAChF,YAAM,EAAE,GAAG,IAAI,CAAC;AAChB,UAAE,CAAC,UAAU,GAAG,EAAE,CAAC;;AAEnB,UAAE,CAAC,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC1C,YAAM,0BAA0B,GAAG,CAC9B;AACI,yBAAa,EAAE,EAAE;AACjB,yBAAa,EAAE,SAAS;SAC3B,CACL,CAAC;;;AAGF,oBAAY,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,CAAC,UAAU,EAAE,UAAC,QAAQ,EAAK;AACxE,gBAAI,QAAQ,EAAE;;AACV,wBAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,IAAI,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;AAC9D,wBAAQ,CAAC,sBAAsB,GAAG,QAAQ,CAAC,sBAAsB,IAAI,0BAA0B,CAAC;aACnG;SACJ,CAAC,CAAC;;AAEH,UAAE,CAAC,SAAS,GAAG,KAAK,CAAC;AACrB,UAAE,CAAC,eAAe,GAAG,eAAe,CAAC;AACrC,UAAE,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AAC7C,UAAE,CAAC,YAAY,GAAG,YAAY,CAAC;;AAE/B,iBAAS,mBAAmB,GAAG;AAC3B,cAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAC,aAAa,EAAE,EAAE,EAAE,aAAa,EAAE,UAAU,EAAC,CAAC,CAAC;SACtG;;AAED,iBAAS,eAAe,CAAC,SAAS,EAAE;AAChC,gBAAM,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,sBAAsB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAC/E,cAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAClE;;AAED,iBAAS,YAAY,GAAG;AACpB,cAAE,CAAC,SAAS,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC;SAChC;KACJ","file":"components/address-book/contact-info/contact-shipping-info/contact-shipping-info-controller.js","sourcesContent":["import './../../../../services/attrs-service';\r\nContactShippingInfoController.$inject = ['$scope', '$attrs', 'attrsService'];\r\n\r\nexport default function ContactShippingInfoController($scope, $attrs, attrsService) {\r\n    const vm = this;\r\n    vm.attributes = {};\r\n\r\n    vm.currenciesMock = ['USD', 'EUR', 'UAH'];  // mock data, must be replaced with data from support utility\r\n    const referencesForShipmentsInit = [\r\n         {\r\n             referenceName: '',\r\n             referenceType: 'DEFAULT'\r\n         }\r\n    ];\r\n\r\n    // tracks shipping data from service\r\n    attrsService.track($scope, $attrs, 'shipping', vm.attributes, (shipping) => {\r\n        if (shipping) { // set mock data if no data available from service response (service not implemented yet)\r\n            shipping.currency = shipping.currency || vm.currenciesMock[0];\r\n            shipping.referencesForShipments = shipping.referencesForShipments || referencesForShipmentsInit;\r\n        }\r\n    });\r\n\r\n    vm.isEditing = false;\r\n    vm.removeReference = removeReference;\r\n    vm.addAnotherReference = addAnotherReference;\r\n    vm.toggleLayout = toggleLayout;\r\n\r\n    function addAnotherReference() {\r\n        vm.attributes.shipping.referencesForShipments.push({referenceName: '', referenceType: 'OPTIONAL'});\r\n    }\r\n\r\n    function removeReference(reference) {\r\n        const index = vm.attributes.shipping.referencesForShipments.indexOf(reference);\r\n        vm.attributes.shipping.referencesForShipments.splice(index, 1);\r\n    }\r\n\r\n    function toggleLayout() {\r\n        vm.isEditing = !vm.isEditing;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}