{"version":3,"sources":["components/register/verification/verification-controller.js"],"names":[],"mappings":";;;qBAIwB,2BAA2B;;AAFnD,+BAA2B,CAAC,OAAO,GAAG,CAAC,YAAY,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;;AAEhE,aAAS,2BAA2B,CAAC,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE;AAClF,YAAM,EAAE,GAAG,IAAI,CAAC;;AAEhB,cAAM,CAAC,MAAM,CAAC,EAAE,EAAE;AACd,qCAAyB,EAAzB,yBAAyB;AACzB,sCAA0B,EAA1B,0BAA0B;;AAE1B,mBAAO,EAAE,KAAK;AACd,mBAAO,EAAE,KAAK;AACd,oBAAQ,EAAE,KAAK;SAClB,CAAC,CAAC;;AAEH,YAAI,sBAAsB,YAAA,CAAC;;AAE3B,iBAAS,yBAAyB,CAAC,IAAI,EAAE;AACrC,kCAAsB,GAAG,IAAI,CAAC;;AAE9B,kCAAsB,CAAC,eAAe,EAAE,CACnC,IAAI,CAAC,YAAM;AACR,kBAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB,CAAC,SACI,CAAC,UAAC,KAAK,EAAK;AACd,kBAAE,CAAC,OAAO,GAAG,IAAI,CAAC;AAClB,oBAAM,GAAG,GAAG,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAEhG,oBAAI,GAAG,KAAK,qBAAqB,EAAE;AAC/B,sBAAE,CAAC,OAAO,GAAG,IAAI,CAAC;AAClB,sBAAE,CAAC,yBAAyB,GAAG,uDAAuD,CAAC;iBAC1F,MAAM;AACH,sBAAE,CAAC,yBAAyB,GAAG,4DAA4D,CAAC;iBAC/F;;AAED,0BAAU,CAAC,KAAK,mBAAiB,KAAK,CAAG,CAAC;aAC7C,CAAC,CAAC;SACV;;AAED,iBAAS,0BAA0B,GAAG;AAClC,kCAAsB,CAAC,mBAAmB,EAAE,CACvC,IAAI,CAAC,YAAM;AACR,sDAAsC,EAAE,CAAC;aAC5C,CAAC,SACI,CAAC,UAAC,KAAK,EAAK;AACd,0BAAU,CAAC,KAAK,mBAAiB,KAAK,CAAG,CAAC;aAC7C,CAAC,CAAC;SACV;;AAED,iBAAS,sCAAsC,GAAG;AAC9C,wBAAY,CAAC,UAAU,CAAC;AACpB,0BAAU,EAAE,IAAI;AAChB,qBAAK,EAAE,MAAM;AACb,2BAAW,EAAE,wBAAwB;AACrC,wBAAQ,EAAC,2KAA2K;aACvL,CAAC,CAAC;SACN;KACJ","file":"components/register/verification/verification-controller.js","sourcesContent":["import './../../../services/modal/modal-service';\r\n\r\nEmailVerificationController.$inject = ['logService', '$scope', 'modalService'];\r\n\r\nexport default function EmailVerificationController(logService, $scope, modalService) {\r\n    const vm = this;\r\n\r\n    Object.assign(vm, {\r\n        setRegistrationController,\r\n        renewExpiredActivationLink,\r\n\r\n        expired: false,\r\n        invalid: false,\r\n        verified: false\r\n    });\r\n\r\n    let registrationController;\r\n\r\n    function setRegistrationController(ctrl) {\r\n        registrationController = ctrl;\r\n\r\n        registrationController.activateAccount()\r\n            .then(() => {\r\n                vm.verified = true;\r\n            })\r\n            .catch((error) => {\r\n                vm.invalid = true;\r\n                const key = error.data && error.data.errors && error.data.errors.length && error.data.errors[0];\r\n\r\n                if (key === 'errors.link_expired') {\r\n                    vm.expired = true;\r\n                    vm.failMessageTranslationKey = 'registration.email_address_verification_expired_title';\r\n                } else {\r\n                    vm.failMessageTranslationKey = 'registration.email_address_verification_already_used_title';\r\n                }\r\n\r\n                logService.error(`Play failed! ${error}`);\r\n            });\r\n    }\r\n\r\n    function renewExpiredActivationLink() {\r\n        registrationController.renewActivationLink()\r\n            .then(() => {\r\n                showResendActivationLinkSuccessMessage();\r\n            })\r\n            .catch((error) => {\r\n                logService.error(`Play failed! ${error}`);\r\n            });\r\n    }\r\n\r\n    function showResendActivationLinkSuccessMessage() {\r\n        modalService.showDialog({\r\n            closeOnEsc: true,\r\n            scope: $scope,\r\n            windowClass: 'ngdialog-theme-default',\r\n            template:'<div ewf-modal><div id=modal_resendActivation><h3 nls=login.activation_email_sent></h3><div class=ngdialog-message nls=login.activation_resend_success></div></div></div>'\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}