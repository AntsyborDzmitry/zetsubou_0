{"version":3,"sources":["directives/ewf-form/ewf-form-controller.js"],"names":[],"mappings":"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","file":"directives/ewf-form/ewf-form-controller.js","sourcesContent":["import 'services/rule-service';\r\n\r\nEwfFormController.$inject = ['$scope', 'logService', 'ruleService'];\r\n\r\nexport default function EwfFormController($scope, logService, ruleService) {\r\n    const vm = this;\r\n\r\n    Object.assign(vm, {\r\n        init,\r\n        ewfValidation,\r\n        setErrorsFromResponse,\r\n        cleanFormErrors,\r\n        cleanFieldErrors,\r\n        cleanAllFieldErrors,\r\n        addFieldError,\r\n        removeFieldError,\r\n        reloadRules,\r\n\r\n        hideRules: {},\r\n        rulesObtained: false,\r\n        errorHappened: false,\r\n        formErrors: [],\r\n        fieldErrors: {},\r\n        formName: ''\r\n    });\r\n\r\n    function init(name) {\r\n        vm.formName = name;\r\n        initializeRules();\r\n    }\r\n\r\n    function reloadRules(countryId) {\r\n        initializeRules(countryId);\r\n    }\r\n\r\n    /**\r\n     * Init rules and store them in view model\r\n     * Never work with DOM in this method cause it called form preLink\r\n     */\r\n    function initializeRules(countryId) {\r\n        ruleService.acquireRulesForFormFields(vm.formName, countryId)\r\n            .then(function(formRules) {\r\n                applyVisibilityRules(formRules);\r\n                vm.rulesObtained = true;\r\n            })\r\n            .catch(function(error) {\r\n                vm.errorHappened = true;\r\n                logService.error(`Unable to read rules for form: \"${vm.formName}\". Error: ${error}`);\r\n            });\r\n    }\r\n\r\n    function ewfValidation() {\r\n        $scope.$broadcast('ValidateForm');\r\n        return true;\r\n    }\r\n\r\n    // We could NOT move this function. This place may not be the most perfect one.\r\n    // Yet we have to apply visibility rules before showing form,\r\n    // and only in ewf-form we know when rules has been obtained and applied\r\n    function applyVisibilityRules(formRules) {\r\n        Object.keys(formRules).forEach((fieldName) => {\r\n            const field = formRules[fieldName];\r\n            if (field.props) {\r\n                const visible = field.props.visible;\r\n                const hidden = visible === false || visible === 'false';\r\n                vm.hideRules[fieldName] = hidden;\r\n            }\r\n        });\r\n    }\r\n\r\n    function setErrorsFromResponse(response) {\r\n        vm.formErrors = response.errors || [];\r\n        vm.fieldErrors = response.fieldErrors || {};\r\n    }\r\n\r\n    function cleanFormErrors() {\r\n        vm.formErrors = [];\r\n    }\r\n\r\n    function cleanFieldErrors(name) {\r\n        vm.fieldErrors[name] = [];\r\n    }\r\n\r\n    function cleanAllFieldErrors() {\r\n        vm.fieldErrors = {};\r\n    }\r\n\r\n    function addFieldError(name, error) {\r\n        const fieldErrors = vm.fieldErrors[name] = vm.fieldErrors[name] || [];\r\n\r\n        if (!fieldErrors.includes(error)) {\r\n            fieldErrors.push(error);\r\n        }\r\n    }\r\n\r\n    function removeFieldError(name, message) {\r\n        const fieldErrors = vm.fieldErrors[name];\r\n\r\n        if (fieldErrors && fieldErrors.includes(message)) {\r\n            fieldErrors.splice(fieldErrors.indexOf(message), 1);\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}