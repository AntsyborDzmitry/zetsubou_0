{"version":3,"sources":["directives/ewf-phone/ewf-phone-controller.js"],"names":[],"mappings":";;;qBAEwB,kBAAkB;AAF1C,sBAAkB,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;;AAEnD,aAAS,kBAAkB,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE;AACrE,YAAM,eAAe,GAAG;AACpB,kBAAM,EAAE,QAAQ;AAChB,kBAAM,EAAE,QAAQ;AAChB,iBAAK,EAAE,OAAO;SACjB,CAAC;;;AAGF,YAAM,QAAQ,GAAG;AACb,uBAAW,EAAE,4FAA4F;AACzG,mBAAO,EAAE,eAAe;AACxB,qBAAS,EAAE,wBAAwB;AACnC,wBAAY,EAAE,oBAAoB;AAClC,+BAAmB,EAAE,aAAa;SACrC,CAAC;;AAEF,YAAM,EAAE,GAAG,IAAI,CAAC;;AAEhB,cAAM,CAAC,MAAM,CAAC,EAAE,EAAE;AACd,oBAAQ,EAAR,QAAQ;AACR,yBAAa,EAAE,eAAe;AAC9B,sBAAU,EAAE,EAAE;;AAEd,yBAAa,EAAb,aAAa;AACb,yBAAa,EAAb,aAAa;SAChB,CAAC,CAAC;;;AAGH,oBAAY,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC;;;;;;;;;AAS/E,iBAAS,WAAW,CAAC,SAAS,EAAE;AAC5B,mBAAO,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,KAAK,SAAS,CAAC;SACnE;;AAED,iBAAS,aAAa,GAAG;AACrB,mBAAO,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC9C;;AAED,iBAAS,aAAa,GAAG;AACrB,mBAAO,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC9C;;AAED,iBAAS,kBAAkB,CAAC,KAAK,EAAE;AAC/B,iBAAK,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,IAAI,EAAE,CAAC;AAC9C,iBAAK,CAAC,YAAY,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,SAAS,IAAI,eAAe,CAAC,KAAK,CAAC;SACxF;KACJ","file":"directives/ewf-phone/ewf-phone-controller.js","sourcesContent":["EwfPhoneController.$inject = ['$scope', '$attrs', 'attrsService'];\r\n\r\nexport default function EwfPhoneController($scope, $attrs, attrsService) {\r\n    const PHONE_TYPES_MAP = {\r\n        OFFICE: 'OFFICE',\r\n        MOBILE: 'MOBILE',\r\n        OTHER: 'OTHER'\r\n    };\r\n\r\n    //TODO make a single instance of patterns in one place\r\n    const patterns = {\r\n        emailRegExp: '^([\\\\w-]+(?:\\\\.[\\\\w-]+)*)@((?:[\\\\w-]+\\\\.)*\\\\w[\\\\w-]{0,66})\\\\.([a-z]{2,6}(?:\\\\.[a-z]{2})?)$',\r\n        numeric: '^(\\\\s*|\\\\d+)$',\r\n        formatted: '^([\\\\s\\\\d\\\\-\\\\(\\\\)]+)$',\r\n        alphaNumeric: '^[a-z\\\\d\\\\-_\\\\s]+$',\r\n        numericSpecialChars: '^[0-9\\\\+]*$'\r\n    };\r\n\r\n    const vm = this;\r\n\r\n    Object.assign(vm, {\r\n        patterns,\r\n        phoneTypesMap: PHONE_TYPES_MAP,\r\n        attributes: {},\r\n\r\n        isOfficePhone,\r\n        isMobilePhone\r\n    });\r\n\r\n    // call `untrack()` on this function's return value when no tracking is further required\r\n    attrsService.track($scope, $attrs, 'phone', vm.attributes, onPhoneAttrsChange);\r\n\r\n    // This will replace whole addressDetailsCtrl.fromContactFields and make shipment not usable\r\n    //vm.attributes.phone = {\r\n    //    phoneDetails: {\r\n    //        phoneType: vm.phoneTypesMap.OTHER\r\n    //    }\r\n    //};\r\n\r\n    function phoneTypeIs(phoneType) {\r\n        return vm.attributes.phone.phoneDetails.phoneType === phoneType;\r\n    }\r\n\r\n    function isOfficePhone() {\r\n        return phoneTypeIs(PHONE_TYPES_MAP.OFFICE);\r\n    }\r\n\r\n    function isMobilePhone() {\r\n        return phoneTypeIs(PHONE_TYPES_MAP.MOBILE);\r\n    }\r\n\r\n    function onPhoneAttrsChange(phone) {\r\n        phone.phoneDetails = phone.phoneDetails || {};\r\n        phone.phoneDetails.phoneType = phone.phoneDetails.phoneType || PHONE_TYPES_MAP.OTHER;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}