{"version":3,"sources":["components/shipment/shipment-type/item-attributes/item-attributes-controller.js"],"names":[],"mappings":";;;qBAOwB,wBAAwB;;AAFhD,4BAAwB,CAAC,OAAO,GAAG,CAAC,YAAY,EAAE,uBAAuB,EAAE,iBAAiB,CAAC,CAAC;;AAE/E,aAAS,wBAAwB,CAAC,UAAU,EAAE,qBAAqB,EAAE,eAAe,EAAE;AACjG,YAAM,EAAE,GAAG,IAAI,CAAC;;AAEhB,cAAM,CAAC,MAAM,CAAC,EAAE,EAAE;AACd,2BAAe,EAAE,EAAE;AACnB,+BAAmB,EAAE,EAAE;AACvB,0BAAc,EAAE,KAAK;;AAErB,gBAAI,EAAJ,IAAI;AACJ,uBAAW,EAAX,WAAW;SACd,CAAC,CAAC;;AAEH,iBAAS,IAAI,GAAG;AACZ,gBAAM,WAAW,GAAG,eAAe,CAAC,kBAAkB,EAAE,CAAC;;AAEzD,iCAAqB,CAAC,sBAAsB,CAAC,WAAW,CAAC,CACpD,IAAI,CAAC,UAAC,QAAQ,EAAK;AAChB,kBAAE,CAAC,mBAAmB,GAAG,QAAQ,CAAC;AAClC,kBAAE,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAC,OAAO,EAAK;AACxC,2BAAO,CAAC,KAAK,GAAG,UAAU,CAAC,kBAAkB,eAAa,OAAO,CAAC,eAAe,CAAG,CAAC;iBACxF,CAAC,CAAC;;AAEH,oBAAM,cAAc,GAAG,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAC,OAAO;2BAAK,OAAO,CAAC,cAAc;iBAAA,CAAC,CAAC;AACxF,oBAAI,cAAc,EAAE;AAChB,sBAAE,CAAC,eAAe,GAAG,cAAc,CAAC;iBACvC;aACJ,CAAC,CAAC;SACV;;AAED,iBAAS,WAAW,GAAG;AACnB,2BAAe,CAAC,wBAAwB,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC;SAChE;KACJ","file":"components/shipment/shipment-type/item-attributes/item-attributes-controller.js","sourcesContent":["import './item-attributes-service';\r\nimport './../../ewf-shipment-service';\r\nimport './../shipment-type-service';\r\nimport './../../../../services/nls-service';\r\n\r\nItemAttributesController.$inject = ['nlsService', 'itemAttributesService', 'shipmentService'];\r\n\r\nexport default function ItemAttributesController(nlsService, itemAttributesService, shipmentService) {\r\n    const vm = this;\r\n\r\n    Object.assign(vm, {\r\n        shippingPurpose: '',\r\n        shippingPurposeList: [],\r\n        estimateDuties: false,\r\n\r\n        init,\r\n        onNextClick\r\n    });\r\n\r\n    function init() {\r\n        const countryCode = shipmentService.getShipmentCountry();\r\n\r\n        itemAttributesService.getShippingPurposeList(countryCode)\r\n            .then((response) => {\r\n                vm.shippingPurposeList = response;\r\n                vm.shippingPurposeList.forEach((purpose) => {\r\n                    purpose.title = nlsService.getTranslationSync(`shipment.${purpose.localizationKey}`);\r\n                });\r\n\r\n                const defaultPurpose = vm.shippingPurposeList.find((purpose) => purpose.defaultPurpose);\r\n                if (defaultPurpose) {\r\n                    vm.shippingPurpose = defaultPurpose;\r\n                }\r\n            });\r\n    }\r\n\r\n    function onNextClick() {\r\n        shipmentService.setCustomsInvoicePurpose(vm.shippingPurpose);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}