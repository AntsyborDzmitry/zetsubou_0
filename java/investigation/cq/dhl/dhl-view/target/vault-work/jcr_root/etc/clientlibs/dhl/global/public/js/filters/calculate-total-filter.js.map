{"version":3,"sources":["filters/calculate-total-filter.js"],"names":[],"mappings":";;;qBAIwB,cAAc;;;;;;AAFtC,qBAAI,MAAM,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;;AAE9B,aAAS,cAAc,GAAG;;AAErC,eAAO,UAAS,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE;AACjC,gBAAI,CAAC,IAAI,EAAE;AACP,uBAAO,CAAC,CAAC;aACZ;;AAED,gBAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAC,YAAY,EAAE,IAAI,EAAK;AAC9C,oBAAI,YAAY,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACzC,oBAAI,QAAQ,EAAE;AACV,gCAAY,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC9C;AACD,uBAAO,YAAY,IAAI,YAAY,IAAI,CAAC,CAAA,AAAC,CAAC;aAC7C,EAAE,CAAC,CAAC,CAAC;;AAEN,mBAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC5B,CAAC;KACL","file":"filters/calculate-total-filter.js","sourcesContent":["import ewf from 'ewf';\r\n\r\newf.filter('calculateTotal', calculateTotal);\r\n\r\nexport default function calculateTotal() {\r\n\r\n    return function(data, key, quantity) {\r\n        if (!data) {\r\n            return 0;\r\n        }\r\n\r\n        const total = data.reduce((currentTotal, item) => {\r\n            let currentValue = parseFloat(item[key]);\r\n            if (quantity) {\r\n                currentValue *= parseFloat(item[quantity]);\r\n            }\r\n            return currentTotal + (currentValue || 0);\r\n        }, 0);\r\n\r\n        return +total.toFixed(3);\r\n    };\r\n}\r\n"],"sourceRoot":"/source/"}