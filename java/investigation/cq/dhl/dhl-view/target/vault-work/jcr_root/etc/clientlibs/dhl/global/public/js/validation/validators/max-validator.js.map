{"version":3,"sources":["validation/validators/max-validator.js"],"names":[],"mappings":";;;;;;;;;;;;;;;QAEqB,YAAY;kBAAZ,YAAY;;AAClB,iBADM,YAAY,CACjB,OAAO,EAAE;kCADJ,YAAY;;AAEzB,uCAFa,YAAY,6CAEnB,OAAO,EAAE;AACf,gBAAI,CAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;AAClD,gBAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;SAC1C;;qBALgB,YAAY;;mBAOrB,kBAAC,KAAK,EAAE;AACZ,oBAAI,KAAK,GAAG,IAAI,CAAC;AACjB,oBAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,EAAE,EAAE;AAC3C,yBAAK,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;iBACtC;AACD,uBAAO,KAAK,CAAC;aAChB;;;eAbgB,YAAY;;;qBAAZ,YAAY","file":"validation/validators/max-validator.js","sourcesContent":["import BaseValidator from './base-validator';\r\n\r\nexport default class MaxValidator extends BaseValidator {\r\n    constructor(options) {\r\n        super(options);\r\n        this.setMessage('errors.max_value_error_message');\r\n        this.setCSSClass('ewf-max-validation');\r\n    }\r\n\r\n    validate(value) {\r\n        let valid = true;\r\n        if (!isNaN(+value) && this.options.max !== '') {\r\n            valid = +value <= this.options.max;\r\n        }\r\n        return valid;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}