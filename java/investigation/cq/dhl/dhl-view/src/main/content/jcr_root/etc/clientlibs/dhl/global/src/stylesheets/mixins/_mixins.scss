@mixin hide-text {
    font: 0/0 a;
    box-shadow: none;
    color: transparent;
}

@mixin clearfix {
  &:after {
    clear: both;
    content: "";
    display: table;
  }
}

@function variable-icon-font($icon-code){
	@return #{"\"\\"}#{$icon-code + "\""};
}

// Add icon for before, after or both
// Arguments:
//           icon name
//           before | after | both  -  pseudo element
//           min | all | no  -   extended styles
@mixin dhlicon($icon: false, $position: before, $styles: min) {
    @if $position == both {
        $position: 'before, &:after';
    }
    @if $position == min or $position == all or $position == no {
        $styles: $position;
        $position: before;
    }
    @if $icon == min or $icon == all {
        $styles: $icon;
        $icon: false;
    }
    @if $icon == both or $icon == before or $icon == after {
        $position: $icon;
        $icon: false;
    }
    &:#{$position} {
        @if $icon {
            content: variable-icon-font("#{map-get($FONT_ICONS, $icon)}");
        }
        @if $styles == min or $styles == all {
            font-family: $FONT_NAME;
            font-style: normal;
            font-weight: normal;
            // speak: none;// only necessary if not using the private unicode range (firstGlyph option)
            text-decoration: none;
            text-transform: none;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }
        @if $styles == all {
            display: inline-block;
            width: 1em;
            line-height: 1;
            text-align: center;
            margin-left: .2em;
            margin-right: .2em;
        }
        @content;
    }

    @if $styles == all {
        &:#{$position} {
            margin-left: 0;
        }
    }
}

@mixin icon($icon, $font-family: true) {
    @if $font-family {
        font-family: $FONT_NAME;
    }
    content: variable-icon-font("#{map-get($FONT_ICONS, $icon)}");
}