<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>CQ</artifactId>
        <groupId>EWF</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>dhl-view</artifactId>
    <packaging>content-package</packaging>

    <name>${project.groupId} - ${project.artifactId}</name>

    <description>
        All of the CQ component and template definitions for the DHL project.

        During development, the files in this module should be sync'd to your CQ instance using the FileVault command
        line tool available with CQ. There is also a plugin for Eclipse called "vaultclipse" that can be used instead
        of the command line tool.
    </description>

    <properties>
        <global.dir>jcr_root/etc/clientlibs/dhl/global</global.dir>
        <gulp.root.dir>src/main/content/${global.dir}</gulp.root.dir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>EWF</groupId>
            <artifactId>dhl-components</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>EWF</groupId>
            <artifactId>dhl-taglib</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <!-- Day CQ -->
        <dependency>
            <groupId>com.day.cq.wcm</groupId>
            <artifactId>cq-wcm-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.day.cq.wcm</groupId>
            <artifactId>cq-wcm-taglib</artifactId>
        </dependency>
        <dependency>
            <groupId>com.day.commons</groupId>
            <artifactId>day-commons-jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.day.cq</groupId>
            <artifactId>cq-tagging</artifactId>
        </dependency>
        <dependency>
            <groupId>com.day.cq</groupId>
            <artifactId>cq-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>com.adobe.granite</groupId>
            <artifactId>com.adobe.granite.ui.commons</artifactId>
        </dependency>
        <!-- Sling -->
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.scripting.jsp.taglib</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.i18n</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.settings</artifactId>
        </dependency>
        <!-- Slice -->
        <dependency>
            <groupId>com.cognifide.slice</groupId>
            <artifactId>slice-core-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.cognifide.slice</groupId>
            <artifactId>slice-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.cognifide.slice</groupId>
            <artifactId>slice-mapper</artifactId>
        </dependency>
        <dependency>
            <groupId>com.cognifide.slice</groupId>
            <artifactId>slice-mapper-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.cognifide.slice</groupId>
            <artifactId>slice-validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.cognifide.slice</groupId>
            <artifactId>slice-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>com.cognifide.slice-addon</groupId>
            <artifactId>slice-cq56</artifactId>
        </dependency>
        <dependency>
            <groupId>com.cognifide.slice-addon</groupId>
            <artifactId>slice-cq56-taglib</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/content/jcr_root</directory>
                <excludes>
                    <exclude>**/*</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>cleaning</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>gulp</executable>
                            <arguments>
                                <argument>build:clean</argument>
                            </arguments>
                            <workingDirectory>${gulp.root.dir}</workingDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>building</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>gulp</executable>
                            <workingDirectory>${gulp.root.dir}</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-content-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/vault-work</outputDirectory>
                            <nonFilteredFileExtensions>
                                <nonFilteredFileExtension>png</nonFilteredFileExtension>
                                <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
                                <nonFilteredFileExtension>xml</nonFilteredFileExtension>
                                <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                                <nonFilteredFileExtension>gif</nonFilteredFileExtension>
                                <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                                <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                                <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                                <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                            </nonFilteredFileExtensions>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/content</directory>
                                    <filtering>true</filtering>
                                    <excludes>
                                        <exclude>**/.svn</exclude>
                                        <exclude>**/.vlt</exclude>
                                        <exclude>**/.vltignore</exclude>
                                        <exclude>**/.gitignore</exclude>
                                        <!--<exclude>**/.content.xml</exclude> -->
                                        <exclude>${global.dir}/bower_components/</exclude>
                                        <exclude>${global.dir}/config/</exclude>
                                        <exclude>${global.dir}/coverage/</exclude>
                                        <exclude>${global.dir}/node_modules/</exclude>
                                        <exclude>${global.dir}/src/</exclude>
                                        <exclude>${global.dir}/test/</exclude>
                                        <exclude>${global.dir}/.eslintrc</exclude>
                                        <exclude>${global.dir}/bower.json</exclude>
                                        <exclude>${global.dir}/gulpfile.js</exclude>
                                        <exclude>${global.dir}/package.json</exclude>
                                        <exclude>${global.dir}/README.md</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.day.jcr.vault</groupId>
                <artifactId>content-package-maven-plugin</artifactId>
                <extensions>true</extensions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-Version>${project.version}</Bundle-Version>
                        <Import-Bundle>
                            *
                        </Import-Bundle>
                        <Import-Package>
                            *;resolution:=optional
                        </Import-Package>
                        <Embed-Transitive>false</Embed-Transitive>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>deploy</id>
            <!-- when activated, this profile will deploy and install the built CQ package to the target server. -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.day.jcr.vault</groupId>
                        <artifactId>content-package-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-package</id>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                                <configuration>
                                    <failOnError>true</failOnError>
                                    <packageFile>${project.build.directory}/${project.build.finalName}.zip</packageFile>
                                    <targetURL>http://${cq.host}:${cq.port}/crx/packmgr/service.jsp</targetURL>
                                    <userId>${cq.user}</userId>
                                    <password>${cq.password}</password>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>